; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\graphics_init.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\graphics_init.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\graphics_init.crf ..\..\..\..\mw\src\graphics_init.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vGf_Graphics_Init_GetVersion PROC
;;;62     
;;;63     void vGf_Graphics_Init_GetVersion(uint8_t** pau8ModuleRevision, uint8_t** pau8ModuleTag,
000000  e92d4010          PUSH     {r4,lr}
;;;64                                       uint8_t** pau8HeaderRevision, uint8_t** pau8HeaderTag)
;;;65     {
;;;66        *pau8ModuleRevision = &au8MW_GRAPHICS_INIT_C_REVISION[0];
000004  e59f4568          LDR      r4,|L1.1396|
000008  e5804000          STR      r4,[r0,#0]
;;;67        *pau8ModuleTag      = &au8MW_GRAPHICS_INIT_C_TAG[0];
00000c  e59f4564          LDR      r4,|L1.1400|
000010  e5814000          STR      r4,[r1,#0]
;;;68        *pau8HeaderRevision = &au8MW_GRAPHICS_INIT_H_REVISION[0];
000014  e59f4560          LDR      r4,|L1.1404|
000018  e5824000          STR      r4,[r2,#0]
;;;69        *pau8HeaderTag      = &au8MW_GRAPHICS_INIT_H_TAG[0];
00001c  e59f455c          LDR      r4,|L1.1408|
000020  e5834000          STR      r4,[r3,#0]
;;;70     }
000024  e8bd8010          POP      {r4,pc}
;;;71     
                          ENDP

                  vGfInitGDC0 PROC
;;;74     
;;;75     void vGfInitGDC0(gf_gdc_config_st * pstGDC)
000028  e92d4010          PUSH     {r4,lr}
;;;76     {
00002c  e24dd018          SUB      sp,sp,#0x18
000030  e1a04000          MOV      r4,r0
;;;77         gdc_sync_st       stSyncCfg;
;;;78         gf_disp_params_st stDispParams;
;;;79     
;;;80         /* configure GDC0 pins */
;;;81     #if (GDCx0 == ON)
;;;82         vPinconfig_GDC0();
000034  ebfffffe          BL       vPinconfig_GDC0
;;;83     #endif
;;;84     
;;;85         /* Sync Config */
;;;86         stSyncCfg.eSyncType = (gdc_csync_e)pstGDC->stDispConf.u8VSYNCType;	/* VSYNC type */
000038  e5d4000f          LDRB     r0,[r4,#0xf]
00003c  e5cd000c          STRB     r0,[sp,#0xc]
;;;87         stSyncCfg.eVSyncPol = (gdc_pol_e)pstGDC->stDispConf.u8VSYNCPol;      /* Polarity of VSYNC */
000040  e5d40010          LDRB     r0,[r4,#0x10]
000044  e5cd000d          STRB     r0,[sp,#0xd]
;;;88         stSyncCfg.eHSyncPol = (gdc_pol_e)pstGDC->stDispConf.u8HSYNCPol;      /* Polarity of HSYNC */
000048  e5d40018          LDRB     r0,[r4,#0x18]
00004c  e5cd000e          STRB     r0,[sp,#0xe]
;;;89     
;;;90         stSyncCfg.u8HsyncWdth  = (uint8_t)pstGDC->stDispConf.u16HSYNCWidth;  /* Width of HSYNC (dot-clocks) */
000050  e5d4001a          LDRB     r0,[r4,#0x1a]
000054  e5cd000f          STRB     r0,[sp,#0xf]
;;;91         stSyncCfg.u16HLineLen  = pstGDC->stDispConf.u16HPeriod;              /* Horizontal line length (dot-clocks) */
000058  e1d401bc          LDRH     r0,[r4,#0x1c]
00005c  e1cd01b2          STRH     r0,[sp,#0x12]
;;;92         stSyncCfg.u8VsyncWdth  = (uint8_t)pstGDC->stDispConf.u16VSYNCWidth;  /* Width of VSYNC (lines) */
000060  e5d40012          LDRB     r0,[r4,#0x12]
000064  e5cd0010          STRB     r0,[sp,#0x10]
;;;93         stSyncCfg.u16VFrameLen = pstGDC->stDispConf.u16VPeriod;              /* Vertical Frame length (lines) */
000068  e1d401b4          LDRH     r0,[r4,#0x14]
00006c  e1cd01b4          STRH     r0,[sp,#0x14]
;;;94     
;;;95         /*** CLOCK ***/
;;;96         /* switch GDC0 module-clock on */
;;;97         i32CCR_EnableModuleClock(CCR_GDC_0, CCR_ENABLE);
000070  e3a01001          MOV      r1,#1
000074  e3a00005          MOV      r0,#5
000078  ebfffffe          BL       i32CCR_EnableModuleClock
;;;98         /* Set Frequency */
;;;99         i32CCR_SetClockFreq(CCR_GDC_0, pstGDC->stDispConf.eClockFrequency, pstGDC->stDispConf.eModulated);
00007c  e5d4202c          LDRB     r2,[r4,#0x2c]
000080  e5d4102b          LDRB     r1,[r4,#0x2b]
000084  e3a00005          MOV      r0,#5
000088  ebfffffe          BL       i32CCR_SetClockFreq
;;;100    
;;;101        /* GDC Driver Initialize */
;;;102        vGDC_Init(GDC0);
00008c  e3a00000          MOV      r0,#0
000090  ebfffffe          BL       vGDC_Init
;;;103    
;;;104        /* Background Color */
;;;105        vGDC_SetBgrColor(GDC0, pstGDC->stDispConf.u32BGColor);
000094  e3a00000          MOV      r0,#0
000098  e5941024          LDR      r1,[r4,#0x24]
00009c  ebfffffe          BL       vGDC_SetBgrColor
;;;106    
;;;107        /*** DOT-CLOCK ***/
;;;108        /* Select clock source */
;;;109        vGDC_SelDotClkSrc(GDC0, (gdc_idc_e)pstGDC->stDispConf.u8ClkSource);
0000a0  e5d4102a          LDRB     r1,[r4,#0x2a]
0000a4  e3a00000          MOV      r0,#0
0000a8  ebfffffe          BL       vGDC_SelDotClkSrc
;;;110        /* Set Polarity */
;;;111        vGDC_SetDotClkPol(GDC0, (gdc_pol_e)pstGDC->stDispConf.u8DotClkPol);
0000ac  e5d41029          LDRB     r1,[r4,#0x29]
0000b0  e3a00000          MOV      r0,#0
0000b4  ebfffffe          BL       vGDC_SetDotClkPol
;;;112    
;;;113        /*** SYNCHRONIZATION ***/
;;;114        /* Sync signals direction */
;;;115        vGDC_SetSyncDir(GDC0, (gdc_dir_e)pstGDC->stDispConf.u8SyncDir);
0000b8  e5d41028          LDRB     r1,[r4,#0x28]
0000bc  e3a00000          MOV      r0,#0
0000c0  ebfffffe          BL       vGDC_SetSyncDir
;;;116        /* Synchronization Config.*/
;;;117        vGDC_SyncConfig(GDC0, &stSyncCfg);
0000c4  e28d100c          ADD      r1,sp,#0xc
0000c8  e3a00000          MOV      r0,#0
0000cc  ebfffffe          BL       vGDC_SyncConfig
;;;118        /* HDISP Polarity */
;;;119        vGDC_SetPolHDisp(GDC0, (gdc_pol_e)pstGDC->stDispConf.u8HDISPPol);
0000d0  e5d41020          LDRB     r1,[r4,#0x20]
0000d4  e3a00000          MOV      r0,#0
0000d8  ebfffffe          BL       vGDC_SetPolHDisp
;;;120    
;;;121        /* set display parameter */
;;;122        vGDC_SetDispConfigType(GDC0, pstGDC->stDispConf.eDispConfigType);
0000dc  e5d4100e          LDRB     r1,[r4,#0xe]
0000e0  e3a00000          MOV      r0,#0
0000e4  ebfffffe          BL       vGDC_SetDispConfigType
;;;123        i32GDC_SetDisplayStart(GDC0, pstGDC->stDispConf.u16HSYNCWidth + pstGDC->stDispConf.u16HBackPorch + 64U + pstGDC->stDispConf.u16DispStartX,
0000e8  e1d401b2          LDRH     r0,[r4,#0x12]
0000ec  e1d431b6          LDRH     r3,[r4,#0x16]
0000f0  e0800003          ADD      r0,r0,r3
0000f4  e2800040          ADD      r0,r0,#0x40
0000f8  e1d430b8          LDRH     r3,[r4,#8]
0000fc  e0800003          ADD      r0,r0,r3
000100  e6ff2070          UXTH     r2,r0
000104  e1d401ba          LDRH     r0,[r4,#0x1a]
000108  e1d431be          LDRH     r3,[r4,#0x1e]
00010c  e0800003          ADD      r0,r0,r3
000110  e2800040          ADD      r0,r0,#0x40
000114  e1d430b6          LDRH     r3,[r4,#6]
000118  e0800003          ADD      r0,r0,r3
00011c  e6ff1070          UXTH     r1,r0
000120  e3a00000          MOV      r0,#0
000124  ebfffffe          BL       i32GDC_SetDisplayStart
;;;124                                     pstGDC->stDispConf.u16VSYNCWidth + pstGDC->stDispConf.u16VBackPorch + 64U + pstGDC->stDispConf.u16DispStartY);
;;;125        i32GDC_SetDisplaySize(GDC0, pstGDC->stDispConf.u16DispWidth, pstGDC->stDispConf.u16DispHeight);
000128  e1d420bc          LDRH     r2,[r4,#0xc]
00012c  e1d410ba          LDRH     r1,[r4,#0xa]
000130  e3a00000          MOV      r0,#0
000134  ebfffffe          BL       i32GDC_SetDisplaySize
;;;126    
;;;127        /* Initialisation of layer structures */
;;;128        vGfRegisterLayers(GDC0, pstGDC);
000138  e1a01004          MOV      r1,r4
00013c  e3a00000          MOV      r0,#0
000140  ebfffffe          BL       vGfRegisterLayers
;;;129    
;;;130        /* Layer initialization */
;;;131        stDispParams.u16VSYNCWidth = pstGDC->stDispConf.u16VSYNCWidth;
000144  e1d401b2          LDRH     r0,[r4,#0x12]
000148  e1cd00b4          STRH     r0,[sp,#4]
;;;132        stDispParams.u16VBackPorch = pstGDC->stDispConf.u16VBackPorch;
00014c  e1d401b6          LDRH     r0,[r4,#0x16]
000150  e1cd00b6          STRH     r0,[sp,#6]
;;;133        stDispParams.u16HSYNCWidth = pstGDC->stDispConf.u16HSYNCWidth;
000154  e1d401ba          LDRH     r0,[r4,#0x1a]
000158  e1cd00b8          STRH     r0,[sp,#8]
;;;134        stDispParams.u16HBackPorch = pstGDC->stDispConf.u16HBackPorch;
00015c  e1d401be          LDRH     r0,[r4,#0x1e]
000160  e1cd00ba          STRH     r0,[sp,#0xa]
;;;135        if (pstGDC->stLayerConf_A.u8LayerActive == (uint8_t)ON)
000164  e5d40030          LDRB     r0,[r4,#0x30]
000168  e3500001          CMP      r0,#1
00016c  1a000003          BNE      |L1.384|
;;;136        {
;;;137            vGfSetLayer(GDC0, &stGDC0LayerA, &stDispParams);
000170  e28d2004          ADD      r2,sp,#4
000174  e59f1408          LDR      r1,|L1.1412|
000178  e3a00000          MOV      r0,#0
00017c  ebfffffe          BL       vGfSetLayer
                  |L1.384|
;;;138        }
;;;139    
;;;140        if (pstGDC->stLayerConf_B.u8LayerActive == (uint8_t)ON)
000180  e5d40044          LDRB     r0,[r4,#0x44]
000184  e3500001          CMP      r0,#1
000188  1a000003          BNE      |L1.412|
;;;141        {
;;;142            vGfSetLayer(GDC0, &stGDC0LayerB, &stDispParams);
00018c  e28d2004          ADD      r2,sp,#4
000190  e59f13f0          LDR      r1,|L1.1416|
000194  e3a00000          MOV      r0,#0
000198  ebfffffe          BL       vGfSetLayer
                  |L1.412|
;;;143        }
;;;144    
;;;145        if (pstGDC->stLayerConf_C.u8LayerActive == (uint8_t)ON)
00019c  e5d40058          LDRB     r0,[r4,#0x58]
0001a0  e3500001          CMP      r0,#1
0001a4  1a000003          BNE      |L1.440|
;;;146        {
;;;147            vGfSetLayer(GDC0, &stGDC0LayerC, &stDispParams);
0001a8  e28d2004          ADD      r2,sp,#4
0001ac  e59f13d8          LDR      r1,|L1.1420|
0001b0  e3a00000          MOV      r0,#0
0001b4  ebfffffe          BL       vGfSetLayer
                  |L1.440|
;;;148        }
;;;149    
;;;150        if (pstGDC->stLayerConf_D.u8LayerActive == (uint8_t)ON)
0001b8  e5d4006c          LDRB     r0,[r4,#0x6c]
0001bc  e3500001          CMP      r0,#1
0001c0  1a000003          BNE      |L1.468|
;;;151        {
;;;152            vGfSetLayer(GDC0, &stGDC0LayerD, &stDispParams);
0001c4  e28d2004          ADD      r2,sp,#4
0001c8  e59f13c0          LDR      r1,|L1.1424|
0001cc  e3a00000          MOV      r0,#0
0001d0  ebfffffe          BL       vGfSetLayer
                  |L1.468|
;;;153        }
;;;154    
;;;155        if (pstGDC->stLayerConf_E.u8LayerActive == (uint8_t)ON)
0001d4  e5d40080          LDRB     r0,[r4,#0x80]
0001d8  e3500001          CMP      r0,#1
0001dc  1a000003          BNE      |L1.496|
;;;156        {
;;;157            vGfSetLayer(GDC0, &stGDC0LayerE, &stDispParams);
0001e0  e28d2004          ADD      r2,sp,#4
0001e4  e59f13a8          LDR      r1,|L1.1428|
0001e8  e3a00000          MOV      r0,#0
0001ec  ebfffffe          BL       vGfSetLayer
                  |L1.496|
;;;158        }
;;;159    
;;;160        /* Dithering settings */
;;;161        vGDC_SetDitheringMode(GDC0, pstGDC->stDispConf.eDithering);
0001f0  e5d4102d          LDRB     r1,[r4,#0x2d]
0001f4  e3a00000          MOV      r0,#0
0001f8  ebfffffe          BL       vGDC_SetDitheringMode
;;;162    
;;;163        /* set layer viewing order */
;;;164        vGDC_SetLayerOrder(GDC0, pstGDC->stDispConf.eLayerOrder);
0001fc  e5d4102e          LDRB     r1,[r4,#0x2e]
000200  e3a00000          MOV      r0,#0
000204  ebfffffe          BL       vGDC_SetLayerOrder
;;;165    
;;;166        /* Switch-On the GDC */
;;;167        vCCR_EnableGDC0Interface(CCR_ENABLE);
000208  e3a00001          MOV      r0,#1
00020c  ebfffffe          BL       vCCR_EnableGDC0Interface
;;;168        vGDC_Switch(GDC0, GDC_ON);
000210  e3a01001          MOV      r1,#1
000214  e3a00000          MOV      r0,#0
000218  ebfffffe          BL       vGDC_Switch
;;;169    }
00021c  e28dd018          ADD      sp,sp,#0x18
000220  e8bd8010          POP      {r4,pc}
;;;170    
                          ENDP

                  vGfInitGDC1 PROC
;;;173    
;;;174    void vGfInitGDC1(gf_gdc_config_st * pstGDC)
000224  e92d4010          PUSH     {r4,lr}
;;;175    {
000228  e24dd018          SUB      sp,sp,#0x18
00022c  e1a04000          MOV      r4,r0
;;;176        gdc_sync_st       stSyncCfg;
;;;177        gf_disp_params_st stDispParams;
;;;178    
;;;179        /* configure GDC1 pins */
;;;180    #if (GDCx1 == ON)
;;;181        vPinconfig_GDC1();
;;;182    #endif
;;;183    
;;;184        /* Sync Config */
;;;185        stSyncCfg.eSyncType = (gdc_csync_e)pstGDC->stDispConf.u8VSYNCType;  /* VSYNC type */
000230  e5d4000f          LDRB     r0,[r4,#0xf]
000234  e5cd000c          STRB     r0,[sp,#0xc]
;;;186        stSyncCfg.eVSyncPol = (gdc_pol_e)pstGDC->stDispConf.u8VSYNCPol;     /* Polarity of VSYNC */
000238  e5d40010          LDRB     r0,[r4,#0x10]
00023c  e5cd000d          STRB     r0,[sp,#0xd]
;;;187        stSyncCfg.eHSyncPol = (gdc_pol_e)pstGDC->stDispConf.u8HSYNCPol;     /* Polarity of HSYNC */
000240  e5d40018          LDRB     r0,[r4,#0x18]
000244  e5cd000e          STRB     r0,[sp,#0xe]
;;;188    
;;;189        stSyncCfg.u8HsyncWdth  = (uint8_t)pstGDC->stDispConf.u16HSYNCWidth; /* Width of HSYNC (dot-clocks) */
000248  e5d4001a          LDRB     r0,[r4,#0x1a]
00024c  e5cd000f          STRB     r0,[sp,#0xf]
;;;190        stSyncCfg.u16HLineLen  = pstGDC->stDispConf.u16HPeriod;             /* Horizontal line length (dot-clocks) */
000250  e1d401bc          LDRH     r0,[r4,#0x1c]
000254  e1cd01b2          STRH     r0,[sp,#0x12]
;;;191        stSyncCfg.u8VsyncWdth  = (uint8_t)pstGDC->stDispConf.u16VSYNCWidth; /* Width of VSYNC (lines) */
000258  e5d40012          LDRB     r0,[r4,#0x12]
00025c  e5cd0010          STRB     r0,[sp,#0x10]
;;;192        stSyncCfg.u16VFrameLen = pstGDC->stDispConf.u16VPeriod;             /* Vertical Frame length (lines) */
000260  e1d401b4          LDRH     r0,[r4,#0x14]
000264  e1cd01b4          STRH     r0,[sp,#0x14]
;;;193    
;;;194        /*** CLOCK ***/
;;;195        /* switch GDC1 module-clock on */
;;;196        i32CCR_EnableModuleClock(CCR_GDC_1, CCR_ENABLE);
000268  e3a01001          MOV      r1,#1
00026c  e3a00006          MOV      r0,#6
000270  ebfffffe          BL       i32CCR_EnableModuleClock
;;;197        /* Set Frequency */
;;;198        i32CCR_SetClockFreq(CCR_GDC_1, pstGDC->stDispConf.eClockFrequency, pstGDC->stDispConf.eModulated);
000274  e5d4202c          LDRB     r2,[r4,#0x2c]
000278  e5d4102b          LDRB     r1,[r4,#0x2b]
00027c  e3a00006          MOV      r0,#6
000280  ebfffffe          BL       i32CCR_SetClockFreq
;;;199        /* set synchronisation mode between GDC0 and GDC1 */
;;;200        vCCR_SetGDCSynchronisation(pstGDC->stDispConf.eGDC1Synchronisation);
000284  e5d4002f          LDRB     r0,[r4,#0x2f]
000288  ebfffffe          BL       vCCR_SetGDCSynchronisation
;;;201    
;;;202        /* GDC Driver Initialize */
;;;203        vGDC_Init(GDC1);
00028c  e3a00001          MOV      r0,#1
000290  ebfffffe          BL       vGDC_Init
;;;204    
;;;205        /* Background Color */
;;;206        vGDC_SetBgrColor(GDC1, pstGDC->stDispConf.u32BGColor);
000294  e3a00001          MOV      r0,#1
000298  e5941024          LDR      r1,[r4,#0x24]
00029c  ebfffffe          BL       vGDC_SetBgrColor
;;;207    
;;;208        /*** DOT-CLOCK ***/
;;;209        /* Select clock source */
;;;210        vGDC_SelDotClkSrc(GDC1, (gdc_idc_e)pstGDC->stDispConf.u8ClkSource);
0002a0  e5d4102a          LDRB     r1,[r4,#0x2a]
0002a4  e3a00001          MOV      r0,#1
0002a8  ebfffffe          BL       vGDC_SelDotClkSrc
;;;211        /* Set Polarity */
;;;212        vGDC_SetDotClkPol(GDC1, (gdc_pol_e)pstGDC->stDispConf.u8DotClkPol);
0002ac  e5d41029          LDRB     r1,[r4,#0x29]
0002b0  e3a00001          MOV      r0,#1
0002b4  ebfffffe          BL       vGDC_SetDotClkPol
;;;213    
;;;214        /*** SYNCHRONIZATION ***/
;;;215        /* Sync signals direction */
;;;216        vGDC_SetSyncDir(GDC1, (gdc_dir_e)pstGDC->stDispConf.u8SyncDir);
0002b8  e5d41028          LDRB     r1,[r4,#0x28]
0002bc  e3a00001          MOV      r0,#1
0002c0  ebfffffe          BL       vGDC_SetSyncDir
;;;217        /* Synchronization Config.*/
;;;218        vGDC_SyncConfig(GDC1, &stSyncCfg);
0002c4  e28d100c          ADD      r1,sp,#0xc
0002c8  e3a00001          MOV      r0,#1
0002cc  ebfffffe          BL       vGDC_SyncConfig
;;;219        /* HDISP Polarity */
;;;220        vGDC_SetPolHDisp(GDC1, (gdc_pol_e)pstGDC->stDispConf.u8HDISPPol);
0002d0  e5d41020          LDRB     r1,[r4,#0x20]
0002d4  e3a00001          MOV      r0,#1
0002d8  ebfffffe          BL       vGDC_SetPolHDisp
;;;221    
;;;222        /* set display parameter */
;;;223        vGDC_SetDispConfigType(GDC1, pstGDC->stDispConf.eDispConfigType);
0002dc  e5d4100e          LDRB     r1,[r4,#0xe]
0002e0  e3a00001          MOV      r0,#1
0002e4  ebfffffe          BL       vGDC_SetDispConfigType
;;;224        i32GDC_SetDisplayStart(GDC1, pstGDC->stDispConf.u16HSYNCWidth + pstGDC->stDispConf.u16HBackPorch + 64U + pstGDC->stDispConf.u16DispStartX,
0002e8  e1d401b2          LDRH     r0,[r4,#0x12]
0002ec  e1d431b6          LDRH     r3,[r4,#0x16]
0002f0  e0800003          ADD      r0,r0,r3
0002f4  e2800040          ADD      r0,r0,#0x40
0002f8  e1d430b8          LDRH     r3,[r4,#8]
0002fc  e0800003          ADD      r0,r0,r3
000300  e6ff2070          UXTH     r2,r0
000304  e1d401ba          LDRH     r0,[r4,#0x1a]
000308  e1d431be          LDRH     r3,[r4,#0x1e]
00030c  e0800003          ADD      r0,r0,r3
000310  e2800040          ADD      r0,r0,#0x40
000314  e1d430b6          LDRH     r3,[r4,#6]
000318  e0800003          ADD      r0,r0,r3
00031c  e6ff1070          UXTH     r1,r0
000320  e3a00001          MOV      r0,#1
000324  ebfffffe          BL       i32GDC_SetDisplayStart
;;;225                                     pstGDC->stDispConf.u16VSYNCWidth + pstGDC->stDispConf.u16VBackPorch + 64U + pstGDC->stDispConf.u16DispStartY);
;;;226        i32GDC_SetDisplaySize(GDC1, pstGDC->stDispConf.u16DispWidth, pstGDC->stDispConf.u16DispHeight);
000328  e1d420bc          LDRH     r2,[r4,#0xc]
00032c  e1d410ba          LDRH     r1,[r4,#0xa]
000330  e3a00001          MOV      r0,#1
000334  ebfffffe          BL       i32GDC_SetDisplaySize
;;;227    
;;;228        /* initialisation of display layer */
;;;229        vGfRegisterLayers(GDC1, pstGDC);
000338  e1a01004          MOV      r1,r4
00033c  e3a00001          MOV      r0,#1
000340  ebfffffe          BL       vGfRegisterLayers
;;;230    
;;;231        /* Layer initialization */
;;;232        stDispParams.u16VSYNCWidth = pstGDC->stDispConf.u16VSYNCWidth;
000344  e1d401b2          LDRH     r0,[r4,#0x12]
000348  e1cd00b4          STRH     r0,[sp,#4]
;;;233        stDispParams.u16VBackPorch = pstGDC->stDispConf.u16VBackPorch;
00034c  e1d401b6          LDRH     r0,[r4,#0x16]
000350  e1cd00b6          STRH     r0,[sp,#6]
;;;234        stDispParams.u16HSYNCWidth = pstGDC->stDispConf.u16HSYNCWidth;
000354  e1d401ba          LDRH     r0,[r4,#0x1a]
000358  e1cd00b8          STRH     r0,[sp,#8]
;;;235        stDispParams.u16HBackPorch = pstGDC->stDispConf.u16HBackPorch;
00035c  e1d401be          LDRH     r0,[r4,#0x1e]
000360  e1cd00ba          STRH     r0,[sp,#0xa]
;;;236        if (pstGDC->stLayerConf_A.u8LayerActive == (uint8_t)ON)
000364  e5d40030          LDRB     r0,[r4,#0x30]
000368  e3500001          CMP      r0,#1
00036c  1a000003          BNE      |L1.896|
;;;237        {
;;;238            vGfSetLayer(GDC1, &stGDC1LayerA, &stDispParams);
000370  e28d2004          ADD      r2,sp,#4
000374  e59f121c          LDR      r1,|L1.1432|
000378  e3a00001          MOV      r0,#1
00037c  ebfffffe          BL       vGfSetLayer
                  |L1.896|
;;;239        }
;;;240    
;;;241        if (pstGDC->stLayerConf_B.u8LayerActive == (uint8_t)ON)
000380  e5d40044          LDRB     r0,[r4,#0x44]
000384  e3500001          CMP      r0,#1
000388  1a000003          BNE      |L1.924|
;;;242        {
;;;243            vGfSetLayer(GDC1, &stGDC1LayerB, &stDispParams);
00038c  e28d2004          ADD      r2,sp,#4
000390  e59f1204          LDR      r1,|L1.1436|
000394  e3a00001          MOV      r0,#1
000398  ebfffffe          BL       vGfSetLayer
                  |L1.924|
;;;244        }
;;;245    
;;;246        if (pstGDC->stLayerConf_C.u8LayerActive == (uint8_t)ON)
00039c  e5d40058          LDRB     r0,[r4,#0x58]
0003a0  e3500001          CMP      r0,#1
0003a4  1a000003          BNE      |L1.952|
;;;247        {
;;;248            vGfSetLayer(GDC1, &stGDC1LayerC, &stDispParams);
0003a8  e28d2004          ADD      r2,sp,#4
0003ac  e59f11ec          LDR      r1,|L1.1440|
0003b0  e3a00001          MOV      r0,#1
0003b4  ebfffffe          BL       vGfSetLayer
                  |L1.952|
;;;249        }
;;;250    
;;;251        if (pstGDC->stLayerConf_D.u8LayerActive == (uint8_t)ON)
0003b8  e5d4006c          LDRB     r0,[r4,#0x6c]
0003bc  e3500001          CMP      r0,#1
0003c0  1a000003          BNE      |L1.980|
;;;252        {
;;;253            vGfSetLayer(GDC1, &stGDC1LayerD, &stDispParams);
0003c4  e28d2004          ADD      r2,sp,#4
0003c8  e59f11d4          LDR      r1,|L1.1444|
0003cc  e3a00001          MOV      r0,#1
0003d0  ebfffffe          BL       vGfSetLayer
                  |L1.980|
;;;254        }
;;;255    
;;;256        if (pstGDC->stLayerConf_E.u8LayerActive == (uint8_t)ON)
0003d4  e5d40080          LDRB     r0,[r4,#0x80]
0003d8  e3500001          CMP      r0,#1
0003dc  1a000003          BNE      |L1.1008|
;;;257        {
;;;258            vGfSetLayer(GDC1, &stGDC1LayerE, &stDispParams);
0003e0  e28d2004          ADD      r2,sp,#4
0003e4  e59f11bc          LDR      r1,|L1.1448|
0003e8  e3a00001          MOV      r0,#1
0003ec  ebfffffe          BL       vGfSetLayer
                  |L1.1008|
;;;259        }
;;;260    
;;;261        /* Dithering settings */
;;;262        vGDC_SetDitheringMode(GDC1, pstGDC->stDispConf.eDithering);
0003f0  e5d4102d          LDRB     r1,[r4,#0x2d]
0003f4  e3a00001          MOV      r0,#1
0003f8  ebfffffe          BL       vGDC_SetDitheringMode
;;;263    
;;;264        /* set layer viewing order */
;;;265        vGDC_SetLayerOrder(GDC1, pstGDC->stDispConf.eLayerOrder);
0003fc  e5d4102e          LDRB     r1,[r4,#0x2e]
000400  e3a00001          MOV      r0,#1
000404  ebfffffe          BL       vGDC_SetLayerOrder
;;;266    
;;;267        /* Switch-On the GDC */
;;;268        vCCR_EnableGDC1Interface(CCR_ENABLE);
000408  e3a00001          MOV      r0,#1
00040c  ebfffffe          BL       vCCR_EnableGDC1Interface
;;;269        vGDC_Switch(GDC1, GDC_ON);
000410  e3a01001          MOV      r1,#1
000414  e1a00001          MOV      r0,r1
000418  ebfffffe          BL       vGDC_Switch
;;;270    }
00041c  e28dd018          ADD      sp,sp,#0x18
000420  e8bd8010          POP      {r4,pc}
;;;271    
                          ENDP

                  vGfInitFG PROC
;;;274    
;;;275    void vGfInitFG(gf_fg_config_st* pstFG)
000424  e92d4010          PUSH     {r4,lr}
;;;276    {
000428  e1a04000          MOV      r4,r0
;;;277        /* Configure pins */
;;;278    #if (FRAMEGRABBER == ON)
;;;279        vPinconfig_FG();
;;;280    #endif
;;;281    
;;;282        /* Enable FG clock */
;;;283        i32CCR_EnableModuleClock(CCR_FG, CCR_ENABLE);
00042c  e3a01001          MOV      r1,#1
000430  e3a0000c          MOV      r0,#0xc
000434  ebfffffe          BL       i32CCR_EnableModuleClock
;;;284    
;;;285        /* Buffer config */
;;;286        vFG_SetCaptureBuffers(&(pstFG->stFgBuffer));
000438  e2840004          ADD      r0,r4,#4
00043c  ebfffffe          BL       vFG_SetCaptureBuffers
;;;287    
;;;288        /* Set input configuration */
;;;289        pstFG->stFgInMode.stSwapYcbCr = pstFG->stFgSwapYcbCr;
000440  e2840014          ADD      r0,r4,#0x14
000444  e1d412b2          LDRH     r1,[r4,#0x22]
000448  e1c411bb          STRH     r1,[r4,#0x1b]
;;;290        vFG_SetInputMode(&(pstFG->stFgInMode));
00044c  e2840014          ADD      r0,r4,#0x14
000450  ebfffffe          BL       vFG_SetInputMode
;;;291    
;;;292        /* Set output mode */
;;;293        vFG_SetOutputMode(&(pstFG->stFgOutMode));
000454  e284001d          ADD      r0,r4,#0x1d
000458  ebfffffe          BL       vFG_SetOutputMode
;;;294    
;;;295        /* Set configuration signals */
;;;296        vFG_ConfigureFgSignal(&(pstFG->stFgSignal));
00045c  e2840024          ADD      r0,r4,#0x24
000460  ebfffffe          BL       vFG_ConfigureFgSignal
;;;297    
;;;298        /* Configure cropping */
;;;299        vFG_SetInputCropp(&(pstFG->stCroppConfig));
000464  e284002c          ADD      r0,r4,#0x2c
000468  ebfffffe          BL       vFG_SetInputCropp
;;;300        vFG_CroppingEnable(pstFG->eCroppingEnable);
00046c  e5d40038          LDRB     r0,[r4,#0x38]
000470  ebfffffe          BL       vFG_CroppingEnable
;;;301    
;;;302        /* Configure scaling */
;;;303        vFG_SetScalingFactors(pstFG->u32ScaleX, pstFG->u32ScaleY);
000474  e1d424b0          LDRH     r2,[r4,#0x40]
000478  e6ff1072          UXTH     r1,r2
00047c  e1d423bc          LDRH     r2,[r4,#0x3c]
000480  e6ff0072          UXTH     r0,r2
000484  ebfffffe          BL       vFG_SetScalingFactors
;;;304    
;;;305        /* Enable timing measurement */
;;;306        vFG_EnableMeasurements(&(pstFG->stMeasurement));
000488  e2840044          ADD      r0,r4,#0x44
00048c  ebfffffe          BL       vFG_EnableMeasurements
;;;307    
;;;308        /* Activate FG */
;;;309        vFG_FrameGrabberEnable(pstFG->eFGEnable);
000490  e5d40001          LDRB     r0,[r4,#1]
000494  ebfffffe          BL       vFG_FrameGrabberEnable
;;;310    }
000498  e8bd8010          POP      {r4,pc}
;;;311    
                          ENDP

                  vGfInitGA PROC
;;;314    
;;;315    void vGfInitGA(void)
00049c  e92d4010          PUSH     {r4,lr}
;;;316    {
0004a0  e24ddc01          SUB      sp,sp,#0x100
;;;317        uint8_t u8Counter = 0U;
0004a4  e3a04000          MOV      r4,#0
;;;318        uint32_t u32FilterCoefficients[64] =
0004a8  e3002100          MOVW     r2,#0x100
0004ac  e59f10f8          LDR      r1,|L1.1452|
0004b0  e1a0000d          MOV      r0,sp
0004b4  ebfffffe          BL       __aeabi_memcpy4
;;;319        {
;;;320            0xffffffffU, 0xffffffffU, 0xffffffffU, 0xfefefefeU, 0xfefdfdfdU, 0xfdfcfcfcU, 0xfcfbfbfaU, 0xfafaf9f9U,
;;;321            0xf9f8f8f7U, 0xf7f6f6f5U, 0xf5f4f4f3U, 0xf3f2f2f1U, 0xf0f0efeeU, 0xeeededecU, 0xebeaeae9U, 0xe8e8e7e6U,
;;;322            0xe5e4e4e3U, 0xe2e1e0dfU, 0xdfdedddcU, 0xdbdad9d8U, 0xd7d6d5d5U, 0xd4d3d2d1U, 0xd0cfceccU, 0xcbcac9c8U,
;;;323            0xc7c6c5c4U, 0xc3c2c1bfU, 0xbebdbcbbU, 0xbab9b7b6U, 0xb5b4b3b1U, 0xb0afaeadU, 0xabaaa9a8U, 0xa6a5a4a2U,
;;;324            0xa1a09f9dU, 0x9c9b9998U, 0x97969493U, 0x92908f8eU, 0x8c8b8a88U, 0x87868483U, 0x81807f7dU, 0x7c7b7978U,
;;;325            0x77757472U, 0x71706e6dU, 0x6c6a6968U, 0x66656362U, 0x615f5e5dU, 0x5b5a5857U, 0x56545352U, 0x504f4e4cU,
;;;326            0x4b4a4847U, 0x46444342U, 0x403f3e3cU, 0x3b3a3937U, 0x36353332U, 0x31302e2dU, 0x2c2b2928U, 0x27262423U,
;;;327            0x2221201eU, 0x1d1c1b1aU, 0x18171615U, 0x14131210U, 0x0f0e0d0cU, 0x0b0a0908U, 0x07060504U, 0x03020100U
;;;328        };
;;;329    
;;;330        /* Enable GA Module Clocks */
;;;331        i32CCR_EnableModuleClock(CCR_GA, CCR_ENABLE);
0004b8  e3a01001          MOV      r1,#1
0004bc  e3a0000a          MOV      r0,#0xa
0004c0  ebfffffe          BL       i32CCR_EnableModuleClock
;;;332    
;;;333        /* Enable Graphic Accelerator */
;;;334        vGA_Enable(GA_EN);
0004c4  e3a00001          MOV      r0,#1
0004c8  ebfffffe          BL       vGA_Enable
;;;335    
;;;336        /* disable read ahead */
;;;337        vGA_ReadAheadEnable(GA_DIS);
0004cc  e3a00000          MOV      r0,#0
0004d0  ebfffffe          BL       vGA_ReadAheadEnable
;;;338    
;;;339        /* initialisation of filter coefficients of drawing engine  */
;;;340        for (u8Counter=0U; u8Counter<64U; u8Counter++)
0004d4  e320f000          NOP      
0004d8  ea000004          B        |L1.1264|
                  |L1.1244|
;;;341        {
;;;342            boDrw_SetFilterCoefDrawEngine(u8Counter, u32FilterCoefficients[u8Counter]);
0004dc  e79d1104          LDR      r1,[sp,r4,LSL #2]
0004e0  e1a00004          MOV      r0,r4
0004e4  ebfffffe          BL       boDrw_SetFilterCoefDrawEngine
0004e8  e2840001          ADD      r0,r4,#1              ;340
0004ec  e20040ff          AND      r4,r0,#0xff           ;340
                  |L1.1264|
0004f0  e3540040          CMP      r4,#0x40              ;340
0004f4  3afffff8          BCC      |L1.1244|
;;;343        }
;;;344    }
0004f8  e28ddc01          ADD      sp,sp,#0x100
0004fc  e8bd8010          POP      {r4,pc}
;;;345    
                          ENDP

                  vGfInitGfxMiddleWare PROC
;;;348    
;;;349    void vGfInitGfxMiddleWare(gf_gdc_config_st* pstGDC0, gf_gdc_config_st* pstGDC1, gf_fg_config_st* pstFG)
000500  e92d4070          PUSH     {r4-r6,lr}
;;;350    {
000504  e1a06000          MOV      r6,r0
000508  e1a04001          MOV      r4,r1
00050c  e1a05002          MOV      r5,r2
;;;351        /* Init GA */
;;;352        vGfInitGA();
000510  ebfffffe          BL       vGfInitGA
;;;353    
;;;354        /* Init PNG-decoder */
;;;355        i32CCR_EnableModuleClock(CCR_PNG, CCR_ENABLE);
000514  e3a01001          MOV      r1,#1
000518  e3a0000b          MOV      r0,#0xb
00051c  ebfffffe          BL       i32CCR_EnableModuleClock
;;;356        vPNG_Init();
000520  ebfffffe          BL       vPNG_Init
;;;357        vSetEarlyWriteResponse(DMC_ENABLE);
000524  e3a00001          MOV      r0,#1
000528  ebfffffe          BL       vSetEarlyWriteResponse
;;;358    
;;;359        vGfInitMWStateVariable();
00052c  ebfffffe          BL       vGfInitMWStateVariable
;;;360    
;;;361        /* Initialize GA list management */
;;;362        vGfListInit();
000530  ebfffffe          BL       vGfListInit
;;;363    
;;;364        /* configure GDC0 */
;;;365        if (pstGDC0->u8GDCActive == (uint8_t)ON)
000534  e5d60000          LDRB     r0,[r6,#0]
000538  e3500001          CMP      r0,#1
00053c  1a000001          BNE      |L1.1352|
;;;366        {
;;;367            vGfInitGDC0(pstGDC0);
000540  e1a00006          MOV      r0,r6
000544  ebfffffe          BL       vGfInitGDC0
                  |L1.1352|
;;;368        }
;;;369    
;;;370        /* configure GDC1 */
;;;371        if (pstGDC1->u8GDCActive == (uint8_t)ON)
000548  e5d40000          LDRB     r0,[r4,#0]
00054c  e3500001          CMP      r0,#1
000550  1a000001          BNE      |L1.1372|
;;;372        {
;;;373            vGfInitGDC1(pstGDC1);
000554  e1a00004          MOV      r0,r4
000558  ebfffffe          BL       vGfInitGDC1
                  |L1.1372|
;;;374        }
;;;375    
;;;376        /* configure FG */
;;;377        if (pstFG->u8FGActive == (uint8_t)ON)
00055c  e5d50000          LDRB     r0,[r5,#0]
000560  e3500001          CMP      r0,#1
000564  1a000001          BNE      |L1.1392|
;;;378        {
;;;379            vGfInitFG(pstFG);
000568  e1a00005          MOV      r0,r5
00056c  ebfffffe          BL       vGfInitFG
                  |L1.1392|
;;;380        }
;;;381    }
000570  e8bd8070          POP      {r4-r6,pc}
;;;382    
                          ENDP

                  |L1.1396|
                          DCD      au8MW_GRAPHICS_INIT_C_REVISION
                  |L1.1400|
                          DCD      au8MW_GRAPHICS_INIT_C_TAG
                  |L1.1404|
                          DCD      au8MW_GRAPHICS_INIT_H_REVISION
                  |L1.1408|
                          DCD      au8MW_GRAPHICS_INIT_H_TAG
                  |L1.1412|
                          DCD      stGDC0LayerA
                  |L1.1416|
                          DCD      stGDC0LayerB
                  |L1.1420|
                          DCD      stGDC0LayerC
                  |L1.1424|
                          DCD      stGDC0LayerD
                  |L1.1428|
                          DCD      stGDC0LayerE
                  |L1.1432|
                          DCD      stGDC1LayerA
                  |L1.1436|
                          DCD      stGDC1LayerB
                  |L1.1440|
                          DCD      stGDC1LayerC
                  |L1.1444|
                          DCD      stGDC1LayerD
                  |L1.1448|
                          DCD      stGDC1LayerE
                  |L1.1452|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xfefefefe
                          DCD      0xfefdfdfd
                          DCD      0xfdfcfcfc
                          DCD      0xfcfbfbfa
                          DCD      0xfafaf9f9
                          DCD      0xf9f8f8f7
                          DCD      0xf7f6f6f5
                          DCD      0xf5f4f4f3
                          DCD      0xf3f2f2f1
                          DCD      0xf0f0efee
                          DCD      0xeeededec
                          DCD      0xebeaeae9
                          DCD      0xe8e8e7e6
                          DCD      0xe5e4e4e3
                          DCD      0xe2e1e0df
                          DCD      0xdfdedddc
                          DCD      0xdbdad9d8
                          DCD      0xd7d6d5d5
                          DCD      0xd4d3d2d1
                          DCD      0xd0cfcecc
                          DCD      0xcbcac9c8
                          DCD      0xc7c6c5c4
                          DCD      0xc3c2c1bf
                          DCD      0xbebdbcbb
                          DCD      0xbab9b7b6
                          DCD      0xb5b4b3b1
                          DCD      0xb0afaead
                          DCD      0xabaaa9a8
                          DCD      0xa6a5a4a2
                          DCD      0xa1a09f9d
                          DCD      0x9c9b9998
                          DCD      0x97969493
                          DCD      0x92908f8e
                          DCD      0x8c8b8a88
                          DCD      0x87868483
                          DCD      0x81807f7d
                          DCD      0x7c7b7978
                          DCD      0x77757472
                          DCD      0x71706e6d
                          DCD      0x6c6a6968
                          DCD      0x66656362
                          DCD      0x615f5e5d
                          DCD      0x5b5a5857
                          DCD      0x56545352
                          DCD      0x504f4e4c
                          DCD      0x4b4a4847
                          DCD      0x46444342
                          DCD      0x403f3e3c
                          DCD      0x3b3a3937
                          DCD      0x36353332
                          DCD      0x31302e2d
                          DCD      0x2c2b2928
                          DCD      0x27262423
                          DCD      0x2221201e
                          DCD      0x1d1c1b1a
                          DCD      0x18171615
                          DCD      0x14131210
                          DCD      0x0f0e0d0c
                          DCD      0x0b0a0908
                          DCD      0x07060504
                          DCD      0x03020100

                          AREA ||.data||, DATA, ALIGN=0

                  au8MW_GRAPHICS_INIT_C_REVISION
000000  24526576          DCB      0x24,0x52,0x65,0x76
000004  6973696f          DCB      0x69,0x73,0x69,0x6f
000008  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
00000c  2e313620          DCB      0x2e,0x31,0x36,0x20
000010  2400              DCB      0x24,0x00
                  au8MW_GRAPHICS_INIT_C_TAG
000012  244e              DCB      0x24,0x4e
000014  616d653a          DCB      0x61,0x6d,0x65,0x3a
000018  20477261          DCB      0x20,0x47,0x72,0x61
00001c  70686963          DCB      0x70,0x68,0x69,0x63
000020  5f4d6964          DCB      0x5f,0x4d,0x69,0x64
000024  646c6577          DCB      0x64,0x6c,0x65,0x77
000028  6172655f          DCB      0x61,0x72,0x65,0x5f
00002c  56315f35          DCB      0x56,0x31,0x5f,0x35
000030  202400            DCB      0x20,0x24,0x00
                  au8MW_GRAPHICS_INIT_H_REVISION
000033  24                DCB      0x24
000034  52657669          DCB      0x52,0x65,0x76,0x69
000038  73696f6e          DCB      0x73,0x69,0x6f,0x6e
00003c  3a20312e          DCB      0x3a,0x20,0x31,0x2e
000040  38202400          DCB      0x38,0x20,0x24,0x00
                  au8MW_GRAPHICS_INIT_H_TAG
000044  244e616d          DCB      0x24,0x4e,0x61,0x6d
000048  653a2047          DCB      0x65,0x3a,0x20,0x47
00004c  72617068          DCB      0x72,0x61,0x70,0x68
000050  69635f4d          DCB      0x69,0x63,0x5f,0x4d
000054  6964646c          DCB      0x69,0x64,0x64,0x6c
000058  65776172          DCB      0x65,0x77,0x61,0x72
00005c  655f5631          DCB      0x65,0x5f,0x56,0x31
000060  5f352024          DCB      0x5f,0x35,0x20,0x24
000064  00                DCB      0x00
