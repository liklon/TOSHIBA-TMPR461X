; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\listmngr.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\listmngr.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\listmngr.crf ..\..\..\..\mw\src\listmngr.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vGf_Listmngr_GetVersion PROC
;;;74     
;;;75     void vGf_Listmngr_GetVersion(uint8_t** pau8ModuleRevision, uint8_t** pau8ModuleTag,
000000  e92d4010          PUSH     {r4,lr}
;;;76                                  uint8_t** pau8HeaderRevision, uint8_t** pau8HeaderTag)
;;;77     {
;;;78         *pau8ModuleRevision = &au8MW_LISTMNGR_C_REVISION[0];
000004  e59f413c          LDR      r4,|L1.328|
000008  e5804000          STR      r4,[r0,#0]
;;;79         *pau8ModuleTag      = &au8MW_LISTMNGR_C_TAG[0];
00000c  e59f4138          LDR      r4,|L1.332|
000010  e5814000          STR      r4,[r1,#0]
;;;80         *pau8HeaderRevision = &au8MW_LISTMNGR_H_REVISION[0];
000014  e59f4134          LDR      r4,|L1.336|
000018  e5824000          STR      r4,[r2,#0]
;;;81         *pau8HeaderTag      = &au8MW_LISTMNGR_H_TAG[0];
00001c  e59f4130          LDR      r4,|L1.340|
000020  e5834000          STR      r4,[r3,#0]
;;;82     }
000024  e8bd8010          POP      {r4,pc}
;;;83     
                          ENDP

                  vGfListInit PROC
;;;86     
;;;87     void vGfListInit(void)
000028  e92d4010          PUSH     {r4,lr}
;;;88     {
;;;89         /* Assign the actual lists to the pointers */
;;;90         pstExecList  = &stList1;
00002c  e59f0124          LDR      r0,|L1.344|
000030  e59f1124          LDR      r1,|L1.348|
000034  e5810000          STR      r0,[r1,#0]  ; pstExecList
;;;91         pstWriteList = &stList2;
000038  e59f0120          LDR      r0,|L1.352|
00003c  e59f1120          LDR      r1,|L1.356|
000040  e5810000          STR      r0,[r1,#0]  ; pstWriteList
;;;92     
;;;93         /* Reset Both lists */
;;;94         vGA_ResetList(pstExecList);
000044  e59f0110          LDR      r0,|L1.348|
000048  e5900000          LDR      r0,[r0,#0]  ; pstExecList
00004c  ebfffffe          BL       vGA_ResetList
;;;95         vGA_ResetList(pstWriteList);
000050  e59f010c          LDR      r0,|L1.356|
000054  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
000058  ebfffffe          BL       vGA_ResetList
;;;96     }
00005c  e8bd8010          POP      {r4,pc}
;;;97     
                          ENDP

                  vGfStartListExecution PROC
;;;100    
;;;101    void vGfStartListExecution(void)
000060  e92d4010          PUSH     {r4,lr}
;;;102    {
;;;103        ga_list_st* pstTempList=0;
000064  e3a04000          MOV      r4,#0
;;;104    
;;;105        /* Closing the Write list (safety measure) */
;;;106        vGA_CloseList(pstWriteList);
000068  e59f00f4          LDR      r0,|L1.356|
00006c  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
000070  ebfffffe          BL       vGA_CloseList
;;;107    
;;;108        /* Switch Write and Exec lists */
;;;109        pstTempList  = pstExecList;
000074  e59f00e0          LDR      r0,|L1.348|
000078  e5904000          LDR      r4,[r0,#0]  ; pstExecList
;;;110        pstExecList  = pstWriteList;
00007c  e59f00e0          LDR      r0,|L1.356|
000080  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
000084  e59f10d0          LDR      r1,|L1.348|
000088  e5810000          STR      r0,[r1,#0]  ; pstExecList
;;;111        pstWriteList = pstTempList;
00008c  e59f00d0          LDR      r0,|L1.356|
000090  e5804000          STR      r4,[r0,#0]  ; pstWriteList
;;;112    
;;;113        /* Start the execution of new Exec list */
;;;114        vGA_SetCmdListAddr((uint32_t) (pstExecList->ullCommands));
000094  e2810000          ADD      r0,r1,#0
000098  e5900000          LDR      r0,[r0,#0]  ; pstExecList
00009c  ebfffffe          BL       vGA_SetCmdListAddr
;;;115    
;;;116        /* Reset the new Write list */
;;;117        vGA_ResetList(pstWriteList);
0000a0  e59f00bc          LDR      r0,|L1.356|
0000a4  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
0000a8  ebfffffe          BL       vGA_ResetList
;;;118    }
0000ac  e8bd8010          POP      {r4,pc}
;;;119    
                          ENDP

                  vGfListExecute PROC
;;;122    
;;;123    void vGfListExecute(void)
0000b0  e92d4010          PUSH     {r4,lr}
;;;124    {
;;;125        ga_list_st* pstTempList=0;
0000b4  e3a04000          MOV      r4,#0
;;;126    
;;;127        /* Wait on GA to complete the current list */
;;;128        vGfWaitForGA();
0000b8  ebfffffe          BL       vGfWaitForGA
;;;129        
;;;130        /* Closing the Write list (safety measure) */
;;;131        vGA_CloseList(pstWriteList);
0000bc  e59f00a0          LDR      r0,|L1.356|
0000c0  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
0000c4  ebfffffe          BL       vGA_CloseList
;;;132    
;;;133        /* Switch Write and Exec lists */
;;;134        pstTempList  = pstExecList;
0000c8  e59f008c          LDR      r0,|L1.348|
0000cc  e5904000          LDR      r4,[r0,#0]  ; pstExecList
;;;135        pstExecList  = pstWriteList;
0000d0  e59f008c          LDR      r0,|L1.356|
0000d4  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
0000d8  e59f107c          LDR      r1,|L1.348|
0000dc  e5810000          STR      r0,[r1,#0]  ; pstExecList
;;;136        pstWriteList = pstTempList;
0000e0  e59f007c          LDR      r0,|L1.356|
0000e4  e5804000          STR      r4,[r0,#0]  ; pstWriteList
;;;137    
;;;138        /* Start the execution of new Exec list */
;;;139        vGA_SetCmdListAddr((uint32_t) (pstExecList->ullCommands));
0000e8  e2810000          ADD      r0,r1,#0
0000ec  e5900000          LDR      r0,[r0,#0]  ; pstExecList
0000f0  ebfffffe          BL       vGA_SetCmdListAddr
;;;140    
;;;141        /* Reset the new Write list */
;;;142        vGA_ResetList(pstWriteList);
0000f4  e59f0068          LDR      r0,|L1.356|
0000f8  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
0000fc  ebfffffe          BL       vGA_ResetList
;;;143    }
000100  e8bd8010          POP      {r4,pc}
;;;144    
                          ENDP

                  vGfListResetAll PROC
;;;147    
;;;148    void vGfListResetAll(void)
000104  e92d4010          PUSH     {r4,lr}
;;;149    {
;;;150        /* Reset Both lists */
;;;151        vGA_ResetList(pstExecList);
000108  e59f004c          LDR      r0,|L1.348|
00010c  e5900000          LDR      r0,[r0,#0]  ; pstExecList
000110  ebfffffe          BL       vGA_ResetList
;;;152        vGA_ResetList(pstWriteList);
000114  e59f0048          LDR      r0,|L1.356|
000118  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
00011c  ebfffffe          BL       vGA_ResetList
;;;153    }
000120  e8bd8010          POP      {r4,pc}
;;;154    
                          ENDP

                  pstGfListGetExec PROC
;;;157    
;;;158    ga_list_st* pstGfListGetExec(void)
000124  e59f0030          LDR      r0,|L1.348|
;;;159    {
;;;160        return pstExecList;
000128  e5900000          LDR      r0,[r0,#0]  ; pstExecList
;;;161    }
00012c  e12fff1e          BX       lr
;;;162    
                          ENDP

                  pstGfListGetWrite PROC
;;;165    
;;;166    ga_list_st* pstGfListGetWrite(void)
000130  e59f002c          LDR      r0,|L1.356|
;;;167    {
;;;168        return pstWriteList;
000134  e5900000          LDR      r0,[r0,#0]  ; pstWriteList
;;;169    }
000138  e12fff1e          BX       lr
;;;170    
                          ENDP

                  vGfListWaitToComplete PROC
;;;173    
;;;174    void vGfListWaitToComplete(void)
00013c  e92d4010          PUSH     {r4,lr}
;;;175    {
;;;176        /* Wait on GA to complete the current list */
;;;177        vGfWaitForGA();
000140  ebfffffe          BL       vGfWaitForGA
;;;178    }
000144  e8bd8010          POP      {r4,pc}
;;;179    
                          ENDP

                  |L1.328|
                          DCD      au8MW_LISTMNGR_C_REVISION
                  |L1.332|
                          DCD      au8MW_LISTMNGR_C_TAG
                  |L1.336|
                          DCD      au8MW_LISTMNGR_H_REVISION
                  |L1.340|
                          DCD      au8MW_LISTMNGR_H_TAG
                  |L1.344|
                          DCD      stList1
                  |L1.348|
                          DCD      pstExecList
                  |L1.352|
                          DCD      stList2
                  |L1.356|
                          DCD      pstWriteList

                          AREA ||.data||, DATA, ALIGN=2

                  au8MW_LISTMNGR_C_REVISION
000000  24526576          DCB      0x24,0x52,0x65,0x76
000004  6973696f          DCB      0x69,0x73,0x69,0x6f
000008  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
00000c  2e352024          DCB      0x2e,0x35,0x20,0x24
000010  00                DCB      0x00
                  au8MW_LISTMNGR_C_TAG
000011  244e61            DCB      0x24,0x4e,0x61
000014  6d653a20          DCB      0x6d,0x65,0x3a,0x20
000018  47726170          DCB      0x47,0x72,0x61,0x70
00001c  6869635f          DCB      0x68,0x69,0x63,0x5f
000020  4d696464          DCB      0x4d,0x69,0x64,0x64
000024  6c657761          DCB      0x6c,0x65,0x77,0x61
000028  72655f56          DCB      0x72,0x65,0x5f,0x56
00002c  315f3520          DCB      0x31,0x5f,0x35,0x20
000030  2400              DCB      0x24,0x00
                  au8MW_LISTMNGR_H_REVISION
000032  2452              DCB      0x24,0x52
000034  65766973          DCB      0x65,0x76,0x69,0x73
000038  696f6e3a          DCB      0x69,0x6f,0x6e,0x3a
00003c  20312e37          DCB      0x20,0x31,0x2e,0x37
000040  202400            DCB      0x20,0x24,0x00
                  au8MW_LISTMNGR_H_TAG
000043  24                DCB      0x24
000044  4e616d65          DCB      0x4e,0x61,0x6d,0x65
000048  3a204772          DCB      0x3a,0x20,0x47,0x72
00004c  61706869          DCB      0x61,0x70,0x68,0x69
000050  635f4d69          DCB      0x63,0x5f,0x4d,0x69
000054  64646c65          DCB      0x64,0x64,0x6c,0x65
000058  77617265          DCB      0x77,0x61,0x72,0x65
00005c  5f56315f          DCB      0x5f,0x56,0x31,0x5f
000060  35202400          DCB      0x35,0x20,0x24,0x00
                  pstExecList
                          DCD      0x00000000
                  pstWriteList
                          DCD      0x00000000
