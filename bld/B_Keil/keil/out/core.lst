


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       **********************
    2 00000000         ;*   This software is copyright protected. All rights re
                       served
    3 00000000         ;*   Toshiba Electronics Europe GmbH,
    4 00000000         ;*   European LSI Design and Engineering Centre (ELDEC)
    5 00000000         ;*******************************************************
                       **********************
    6 00000000         ;*   DESCRIPTION : functions for copying arrays
    7 00000000         ;*******************************************************
                       **********************
    8 00000000         ;*   PLATFORM    : TMPR46xXBG-300
    9 00000000         ;*   PROJECT     :
   10 00000000         ;*   MODULE      : 
   11 00000000         ;*   LIBRARIES   :
   12 00000000         ;;******************************************************
                       ***********************
   13 00000000         ;*   VERSION     : $Revision: 1.8 $ 
   14 00000000         ;*   DATE        : $Date: 2015/05/04 09:07:19 $
   15 00000000         ;*   TAG         : $Name:  $
   16 00000000         ;*   RELEASE     : Preliminary and Confidential
   17 00000000         ;*******************************************************
                       **********************/
   18 00000000         
   19 00000000         ;*******************************************************
                       **********************
   20 00000000         ; exported function prototypes
   21 00000000         ;*******************************************************
                       **********************
   22 00000000                 EXPORT           __DSB
   23 00000000                 EXPORT           __ISB
   24 00000000                 EXPORT           asm_enable_core_int
   25 00000000                 EXPORT           asm_disable_core_int
   26 00000000                 EXPORT           asm_enable_core_fast_int
   27 00000000                 EXPORT           asm_disable_core_fast_int
   28 00000000                 EXPORT           asm_enable_core_vic_port
   29 00000000                 EXPORT           asm_disable_core_vic_port
   30 00000000         
   31 00000000                 AREA             core_function, CODE, READONLY ;
                                                            READONLY is default
                                                             for CODE
   32 00000000         
   33 00000000         ;*******************************************************
                       **********************
   34 00000000         ; __DSB(void)
   35 00000000         ; data barrier
   36 00000000         ;*******************************************************
                       **********************
   37 00000000         __DSB
   38 00000000 F57FF04F        DSB
   39 00000004 E12FFF1E        BX               lr          ; return
   40 00000008         
   41 00000008         
   42 00000008         ;*******************************************************
                       **********************
   43 00000008         ; __ISB(void)
   44 00000008         ; instruction barrier
   45 00000008         ;*******************************************************
                       **********************



ARM Macro Assembler    Page 2 


   46 00000008         __ISB
   47 00000008 F57FF06F        ISB
   48 0000000C E12FFF1E        BX               lr          ; return
   49 00000010         
   50 00000010         
   51 00000010         ;*******************************************************
                       **********************
   52 00000010         ; asm_enable_core_int(void)
   53 00000010         ; enable interrupt of the core
   54 00000010         ;*******************************************************
                       **********************
   55 00000010         asm_enable_core_int
   56 00000010 E10F0000        MRS              r0, CPSR
   57 00000014 E3C00080        AND              r0, r0, #0xFFFFFF7F
   58 00000018 E123F000        MSR              CPSR_cx, r0
   59 0000001C E12FFF1E        BX               lr          ; return
   60 00000020         
   61 00000020         ;*******************************************************
                       **********************
   62 00000020         ; asm_disable_core_int(void)
   63 00000020         ; disable interrupt of the core
   64 00000020         ;*******************************************************
                       **********************
   65 00000020         asm_disable_core_int
   66 00000020 E10F0000        MRS              r0, CPSR
   67 00000024 E3800080        ORR              r0, r0, #0x00000080
   68 00000028 E123F000        MSR              CPSR_cx, r0
   69 0000002C E12FFF1E        BX               lr          ; return
   70 00000030         
   71 00000030         ;*******************************************************
                       **********************
   72 00000030         ; asm_enable_core_fast_int(void)
   73 00000030         ; enable fast interrupt of the core
   74 00000030         ;*******************************************************
                       **********************
   75 00000030         asm_enable_core_fast_int
   76 00000030 E10F0000        MRS              r0, CPSR
   77 00000034 E3C00040        AND              r0, r0, #0xFFFFFFBF
   78 00000038 E123F000        MSR              CPSR_cx, r0
   79 0000003C E12FFF1E        BX               lr          ; return
   80 00000040         
   81 00000040         ;*******************************************************
                       **********************
   82 00000040         ; asm_disable_core_fast_int(void)
   83 00000040         ; disable fast interrupt of the core
   84 00000040         ;*******************************************************
                       **********************
   85 00000040         asm_disable_core_fast_int
   86 00000040 E10F0000        MRS              r0, CPSR
   87 00000044 E3800040        ORR              r0, r0, #0x00000040
   88 00000048 E123F000        MSR              CPSR_cx, r0
   89 0000004C E12FFF1E        BX               lr          ; return
   90 00000050         
   91 00000050         ;*******************************************************
                       **********************
   92 00000050         ; asm_enable_core_vic_port(void)
   93 00000050         ; enable vic port of the core
   94 00000050         ;*******************************************************
                       **********************



ARM Macro Assembler    Page 3 


   95 00000050         asm_enable_core_vic_port
   96 00000050 EE110F10        MRC              p15, 0, r0, c1, c0, 0
   97 00000054 E3800401        ORR              r0, r0, #0x01000000
   98 00000058 EE010F10        MCR              p15, 0, r0, c1, c0, 0
   99 0000005C         ;ISB
  100 0000005C E12FFF1E        BX               lr          ; return
  101 00000060         
  102 00000060         ;*******************************************************
                       **********************
  103 00000060         ; asm_disable_core_vic_port(void)
  104 00000060         ; enable vic port of the core
  105 00000060         ;*******************************************************
                       **********************
  106 00000060         asm_disable_core_vic_port
  107 00000060 EE110F10        MRC              p15, 0, r0, c1, c0, 0
  108 00000064 E3C00401        AND              r0, r0, #0xFEFFFFFF
  109 00000068 EE010F10        MCR              p15, 0, r0, c1, c0, 0
  110 0000006C         ;ISB
  111 0000006C E12FFF1E        BX               lr          ; return
  112 00000070         
  113 00000070                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-R4 --apcs=interw
ork --depend=..\out\core.d -o..\out\core.o -I..\..\..\..\cortex_r4_keil\inc -IC
:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__UVISION_VE
RSION SETA 516" --list=..\out\core.lst ..\..\..\..\common\src\core.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__DSB 00000000

Symbol: __DSB
   Definitions
      At line 37 in file ..\..\..\..\common\src\core.s
   Uses
      At line 22 in file ..\..\..\..\common\src\core.s
Comment: __DSB used once
__ISB 00000008

Symbol: __ISB
   Definitions
      At line 46 in file ..\..\..\..\common\src\core.s
   Uses
      At line 23 in file ..\..\..\..\common\src\core.s
Comment: __ISB used once
asm_disable_core_fast_int 00000040

Symbol: asm_disable_core_fast_int
   Definitions
      At line 85 in file ..\..\..\..\common\src\core.s
   Uses
      At line 27 in file ..\..\..\..\common\src\core.s
Comment: asm_disable_core_fast_int used once
asm_disable_core_int 00000020

Symbol: asm_disable_core_int
   Definitions
      At line 65 in file ..\..\..\..\common\src\core.s
   Uses
      At line 25 in file ..\..\..\..\common\src\core.s
Comment: asm_disable_core_int used once
asm_disable_core_vic_port 00000060

Symbol: asm_disable_core_vic_port
   Definitions
      At line 106 in file ..\..\..\..\common\src\core.s
   Uses
      At line 29 in file ..\..\..\..\common\src\core.s
Comment: asm_disable_core_vic_port used once
asm_enable_core_fast_int 00000030

Symbol: asm_enable_core_fast_int
   Definitions
      At line 75 in file ..\..\..\..\common\src\core.s
   Uses
      At line 26 in file ..\..\..\..\common\src\core.s
Comment: asm_enable_core_fast_int used once
asm_enable_core_int 00000010

Symbol: asm_enable_core_int
   Definitions
      At line 55 in file ..\..\..\..\common\src\core.s
   Uses
      At line 24 in file ..\..\..\..\common\src\core.s
Comment: asm_enable_core_int used once
asm_enable_core_vic_port 00000050

Symbol: asm_enable_core_vic_port



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 95 in file ..\..\..\..\common\src\core.s
   Uses
      At line 28 in file ..\..\..\..\common\src\core.s
Comment: asm_enable_core_vic_port used once
core_function 00000000

Symbol: core_function
   Definitions
      At line 31 in file ..\..\..\..\common\src\core.s
   Uses
      None
Comment: core_function unused
9 symbols
340 symbols in table
