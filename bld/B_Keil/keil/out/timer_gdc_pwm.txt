; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\timer_gdc_pwm.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\timer_gdc_pwm.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\timer_gdc_pwm.crf ..\..\..\..\lldd\src\timer_gdc_pwm.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vTIMER_GDC_PWM_GetVersion PROC
;;;72     
;;;73     void vTIMER_GDC_PWM_GetVersion(uint8_t** pau8ModuleRevision, uint8_t** pau8ModuleTag,
000000  e92d4070          PUSH     {r4-r6,lr}
;;;74                                    uint8_t** pau8HeaderRevision, uint8_t** pau8HeaderTag,
;;;75                                    uint8_t** pau8IORevision, uint8_t** pau8IOTag)
;;;76     {
000004  e1cd41d0          LDRD     r4,r5,[sp,#0x10]
;;;77        *pau8ModuleRevision = &au8LLDD_TIMER_GDC_PWM_C_REVISION[0];
000008  e59f6704          LDR      r6,|L1.1812|
00000c  e5806000          STR      r6,[r0,#0]
;;;78        *pau8ModuleTag      = &au8LLDD_TIMER_GDC_PWM_C_TAG[0];
000010  e59f6700          LDR      r6,|L1.1816|
000014  e5816000          STR      r6,[r1,#0]
;;;79        *pau8HeaderRevision = &au8LLDD_TIMER_GDC_PWM_H_REVISION[0];
000018  e59f66fc          LDR      r6,|L1.1820|
00001c  e5826000          STR      r6,[r2,#0]
;;;80        *pau8HeaderTag      = &au8LLDD_TIMER_GDC_PWM_H_TAG[0];
000020  e59f66f8          LDR      r6,|L1.1824|
000024  e5836000          STR      r6,[r3,#0]
;;;81        *pau8IORevision     = &au8LLDD_TIMER_GDC_PWM_IO_H_REVISION[0];
000028  e59f66f4          LDR      r6,|L1.1828|
00002c  e5846000          STR      r6,[r4,#0]
;;;82        *pau8IOTag          = &au8LLDD_TIMER_GDC_PWM_IO_H_TAG[0];
000030  e59f66f0          LDR      r6,|L1.1832|
000034  e5856000          STR      r6,[r5,#0]
;;;83     }
000038  e8bd8070          POP      {r4-r6,pc}
;;;84     
                          ENDP

                  boTIMER_GDC_PWM_Config PROC
;;;87     
;;;88     bool_t boTIMER_GDC_PWM_Config(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_Cfg_st stCfg)
00003c  e92d401f          PUSH     {r0-r4,lr}
;;;89     {
000040  e1a04000          MOV      r4,r0
;;;90         bool_t boResult = C_FALSE;
000044  e3a00000          MOV      r0,#0
;;;91     
;;;92         /* GDC PWM timers */
;;;93         vSetGPWMCR_RC(eCntrl, stCfg.eRst);
000048  e5dd2005          LDRB     r2,[sp,#5]
00004c  e1a01c04          LSL      r1,r4,#24
000050  e1a01621          LSR      r1,r1,#12
000054  e24115ff          SUB      r1,r1,#0x3fc00000
000058  e2411adb          SUB      r1,r1,#0xdb000
00005c  e1d110b0          LDRH     r1,[r1,#0]
000060  e7cb1512          BFI      r1,r2,#10,#2
000064  e1a02c04          LSL      r2,r4,#24
000068  e1a02622          LSR      r2,r2,#12
00006c  e24225ff          SUB      r2,r2,#0x3fc00000
000070  e2422adb          SUB      r2,r2,#0xdb000
000074  e1c210b0          STRH     r1,[r2,#0]
;;;94         vSetGPWMCR_VED(eCntrl, stCfg.eVSyncEd);
000078  e5dd2006          LDRB     r2,[sp,#6]
00007c  e1a01c04          LSL      r1,r4,#24
000080  e1a01621          LSR      r1,r1,#12
000084  e24115ff          SUB      r1,r1,#0x3fc00000
000088  e2411adb          SUB      r1,r1,#0xdb000
00008c  e1d110b0          LDRH     r1,[r1,#0]
000090  e7c91492          BFI      r1,r2,#9,#1
000094  e1a02c04          LSL      r2,r4,#24
000098  e1a02622          LSR      r2,r2,#12
00009c  e24225ff          SUB      r2,r2,#0x3fc00000
0000a0  e2422adb          SUB      r2,r2,#0xdb000
0000a4  e1c210b0          STRH     r1,[r2,#0]
;;;95         vSetGPWMCR_HED(eCntrl, stCfg.eHsyncEd);
0000a8  e5dd2007          LDRB     r2,[sp,#7]
0000ac  e1a01c04          LSL      r1,r4,#24
0000b0  e1a01621          LSR      r1,r1,#12
0000b4  e24115ff          SUB      r1,r1,#0x3fc00000
0000b8  e2411adb          SUB      r1,r1,#0xdb000
0000bc  e1d110b0          LDRH     r1,[r1,#0]
0000c0  e7c81412          BFI      r1,r2,#8,#1
0000c4  e1a02c04          LSL      r2,r4,#24
0000c8  e1a02622          LSR      r2,r2,#12
0000cc  e24225ff          SUB      r2,r2,#0x3fc00000
0000d0  e2422adb          SUB      r2,r2,#0xdb000
0000d4  e1c210b0          STRH     r1,[r2,#0]
;;;96     
;;;97         /* HSync or Prescaler only */
;;;98         if( TIMER_GDC_PWM_DOTCLK != stCfg.eClkSrc )
0000d8  e5dd100c          LDRB     r1,[sp,#0xc]
0000dc  e3510001          CMP      r1,#1
0000e0  0a000048          BEQ      |L1.520|
;;;99         {       
;;;100            vSetGPWMCR_GDC(eCntrl, stCfg.eClkSrc);
0000e4  e5dd200c          LDRB     r2,[sp,#0xc]
0000e8  e1a01c04          LSL      r1,r4,#24
0000ec  e1a01621          LSR      r1,r1,#12
0000f0  e24115ff          SUB      r1,r1,#0x3fc00000
0000f4  e2411adb          SUB      r1,r1,#0xdb000
0000f8  e1d110b0          LDRH     r1,[r1,#0]
0000fc  e7c21092          BFI      r1,r2,#1,#2
000100  e1a02c04          LSL      r2,r4,#24
000104  e1a02622          LSR      r2,r2,#12
000108  e24225ff          SUB      r2,r2,#0x3fc00000
00010c  e2422adb          SUB      r2,r2,#0xdb000
000110  e1c210b0          STRH     r1,[r2,#0]
;;;101            vSetGPWMCR_TCORE_EN(eCntrl, stCfg.eCoreEn);
000114  e5dd2008          LDRB     r2,[sp,#8]
000118  e1a01c04          LSL      r1,r4,#24
00011c  e1a01621          LSR      r1,r1,#12
000120  e24115ff          SUB      r1,r1,#0x3fc00000
000124  e2411adb          SUB      r1,r1,#0xdb000
000128  e1d110b0          LDRH     r1,[r1,#0]
00012c  e7c71392          BFI      r1,r2,#7,#1
000130  e1a02c04          LSL      r2,r4,#24
000134  e1a02622          LSR      r2,r2,#12
000138  e24225ff          SUB      r2,r2,#0x3fc00000
00013c  e2422adb          SUB      r2,r2,#0xdb000
000140  e1c210b0          STRH     r1,[r2,#0]
;;;102            vSetGPWMCR_SCLK(eCntrl, stCfg.ePrescalClk);    
000144  e5dd2004          LDRB     r2,[sp,#4]
000148  e1a01c04          LSL      r1,r4,#24
00014c  e1a01621          LSR      r1,r1,#12
000150  e24115ff          SUB      r1,r1,#0x3fc00000
000154  e2411adb          SUB      r1,r1,#0xdb000
000158  e1d110b0          LDRH     r1,[r1,#0]
00015c  e7ce1612          BFI      r1,r2,#12,#3
000160  e1a02c04          LSL      r2,r4,#24
000164  e1a02622          LSR      r2,r2,#12
000168  e24225ff          SUB      r2,r2,#0x3fc00000
00016c  e2422adb          SUB      r2,r2,#0xdb000
000170  e1c210b0          STRH     r1,[r2,#0]
;;;103            vSetGPWMCR_IE(eCntrl, stCfg.eIrqEn);
000174  e5dd2009          LDRB     r2,[sp,#9]
000178  e1a01c04          LSL      r1,r4,#24
00017c  e1a01621          LSR      r1,r1,#12
000180  e24115ff          SUB      r1,r1,#0x3fc00000
000184  e2411adb          SUB      r1,r1,#0xdb000
000188  e1d110b0          LDRH     r1,[r1,#0]
00018c  e7c61312          BFI      r1,r2,#6,#1
000190  e1a02c04          LSL      r2,r4,#24
000194  e1a02622          LSR      r2,r2,#12
000198  e24225ff          SUB      r2,r2,#0x3fc00000
00019c  e2422adb          SUB      r2,r2,#0xdb000
0001a0  e1c210b0          STRH     r1,[r2,#0]
;;;104            vSetGPWMCR_DB(eCntrl, stCfg.eDblBuffEn);
0001a4  e5dd200a          LDRB     r2,[sp,#0xa]
0001a8  e1a01c04          LSL      r1,r4,#24
0001ac  e1a01621          LSR      r1,r1,#12
0001b0  e24115ff          SUB      r1,r1,#0x3fc00000
0001b4  e2411adb          SUB      r1,r1,#0xdb000
0001b8  e1d110b0          LDRH     r1,[r1,#0]
0001bc  e7c51292          BFI      r1,r2,#5,#1
0001c0  e1a02c04          LSL      r2,r4,#24
0001c4  e1a02622          LSR      r2,r2,#12
0001c8  e24225ff          SUB      r2,r2,#0x3fc00000
0001cc  e2422adb          SUB      r2,r2,#0xdb000
0001d0  e1c210b0          STRH     r1,[r2,#0]
;;;105            vSetGPWMCR_OL(eCntrl, stCfg.eOutLevel);
0001d4  e5dd200b          LDRB     r2,[sp,#0xb]
0001d8  e1a01c04          LSL      r1,r4,#24
0001dc  e1a01621          LSR      r1,r1,#12
0001e0  e24115ff          SUB      r1,r1,#0x3fc00000
0001e4  e2411adb          SUB      r1,r1,#0xdb000
0001e8  e1d110b0          LDRH     r1,[r1,#0]
0001ec  e7c41212          BFI      r1,r2,#4,#1
0001f0  e1a02c04          LSL      r2,r4,#24
0001f4  e1a02622          LSR      r2,r2,#12
0001f8  e24225ff          SUB      r2,r2,#0x3fc00000
0001fc  e2422adb          SUB      r2,r2,#0xdb000
000200  e1c210b0          STRH     r1,[r2,#0]
;;;106            boResult = C_TRUE;        
000204  e3a00001          MOV      r0,#1
                  |L1.520|
000208  e28dd010          ADD      sp,sp,#0x10
;;;107        }
;;;108    
;;;109        /* Configuration result */
;;;110        return boResult;
;;;111    }
00020c  e8bd8010          POP      {r4,pc}
;;;112    
                          ENDP

                  vTIMER_GDC_PWM_SetPeriod PROC
;;;115    
;;;116    void vTIMER_GDC_PWM_SetPeriod(timer_gdc_pwm_cntrl_e eCntrl, uint16_t u16Period)
000210  e1a02c00          LSL      r2,r0,#24
;;;117    {
;;;118        vSetGPWMPDR_GPWMPDR(eCntrl, u16Period);
000214  e1a02622          LSR      r2,r2,#12
000218  e24225ff          SUB      r2,r2,#0x3fc00000
00021c  e2422adb          SUB      r2,r2,#0xdb000
000220  e1d220b4          LDRH     r2,[r2,#4]
000224  e7cf2011          BFI      r2,r1,#0,#16
000228  e1a03c00          LSL      r3,r0,#24
00022c  e1a03623          LSR      r3,r3,#12
000230  e24335ff          SUB      r3,r3,#0x3fc00000
000234  e2433adb          SUB      r3,r3,#0xdb000
000238  e1c320b4          STRH     r2,[r3,#4]
;;;119    }
00023c  e12fff1e          BX       lr
;;;120    
                          ENDP

                  vTIMER_GDC_PWM_SetDuty PROC
;;;123    
;;;124    void vTIMER_GDC_PWM_SetDuty(timer_gdc_pwm_cntrl_e eCntrl, uint16_t u16Duty)
000240  e1a02c00          LSL      r2,r0,#24
;;;125    {
;;;126        vSetGPWMDDR_GPWMDDR(eCntrl, u16Duty);
000244  e1a02622          LSR      r2,r2,#12
000248  e24225ff          SUB      r2,r2,#0x3fc00000
00024c  e2422adb          SUB      r2,r2,#0xdb000
000250  e1d220b8          LDRH     r2,[r2,#8]
000254  e7cf2011          BFI      r2,r1,#0,#16
000258  e1a03c00          LSL      r3,r0,#24
00025c  e1a03623          LSR      r3,r3,#12
000260  e24335ff          SUB      r3,r3,#0x3fc00000
000264  e2433adb          SUB      r3,r3,#0xdb000
000268  e1c320b8          STRH     r2,[r3,#8]
;;;127    }
00026c  e12fff1e          BX       lr
;;;128    
                          ENDP

                  u16TIMER_GDC_PWM_GetDuty PROC
;;;131    
;;;132    uint16_t u16TIMER_GDC_PWM_GetDuty(timer_gdc_pwm_cntrl_e eCntrl)
000270  e1a01000          MOV      r1,r0
;;;133    {
;;;134        uint16_t u16Res;
;;;135    
;;;136        u16Res = u16GetGPWMDDR(eCntrl);            
000274  e1a02c01          LSL      r2,r1,#24
000278  e1a02622          LSR      r2,r2,#12
00027c  e24225ff          SUB      r2,r2,#0x3fc00000
000280  e2422adb          SUB      r2,r2,#0xdb000
000284  e1d200b8          LDRH     r0,[r2,#8]
;;;137    
;;;138        return u16Res;
;;;139    }
000288  e12fff1e          BX       lr
;;;140    
                          ENDP

                  i32TIMER_GDC_PWM_SetWaveform PROC
;;;143    
;;;144    int32_t i32TIMER_GDC_PWM_SetWaveform(timer_gdc_pwm_cntrl_e eCntrl, uint16_t u16Period, uint16_t u16Duty, timer_gdc_pwm_ol_e eOutLevel)
00028c  e92d5ff0          PUSH     {r4-r12,lr}
;;;145    {
000290  e1a04000          MOV      r4,r0
000294  e1a07001          MOV      r7,r1
000298  e1a05002          MOV      r5,r2
00029c  e1a08003          MOV      r8,r3
;;;146        int32_t i32Res;
;;;147        uint16_t u16DutyVal;
;;;148        timer_gdc_pwm_en_e eCurStat = TIMER_GDC_PWM_DISABLE;
0002a0  e3a0a000          MOV      r10,#0
;;;149        timer_gdc_pwm_en_e eBuffType = TIMER_GDC_PWM_DISABLE;
0002a4  e3a0b000          MOV      r11,#0
;;;150    
;;;151        eCurStat = (timer_gdc_pwm_en_e)biGetGPWMCR_TRUN(eCntrl);
0002a8  e1a00c04          LSL      r0,r4,#24
0002ac  e1a00620          LSR      r0,r0,#12
0002b0  e24005ff          SUB      r0,r0,#0x3fc00000
0002b4  e2400adb          SUB      r0,r0,#0xdb000
0002b8  e1d000b0          LDRH     r0,[r0,#0]
0002bc  e200a001          AND      r10,r0,#1
;;;152        eBuffType = (timer_gdc_pwm_en_e)biGetGPWMCR_DB(eCntrl);
0002c0  e1a00c04          LSL      r0,r4,#24
0002c4  e1a00620          LSR      r0,r0,#12
0002c8  e24005ff          SUB      r0,r0,#0x3fc00000
0002cc  e2400adb          SUB      r0,r0,#0xdb000
0002d0  e1d000b0          LDRH     r0,[r0,#0]
0002d4  e7e0b2d0          UBFX     r11,r0,#5,#1
;;;153    
;;;154        /* check if change is allowed */
;;;155        if( ( TIMER_GDC_PWM_ENABLE != eCurStat ) || ( TIMER_GDC_PWM_DISABLE != eBuffType ) )
0002d8  e35a0000          CMP      r10,#0
0002dc  0a000001          BEQ      |L1.744|
0002e0  e35b0000          CMP      r11,#0
0002e4  0a000078          BEQ      |L1.1228|
                  |L1.744|
;;;156        {
;;;157            if(u16Duty <= 100)
0002e8  e3550064          CMP      r5,#0x64
0002ec  ca000074          BGT      |L1.1220|
;;;158            {
;;;159                if ((u16Duty != 0) && (u16Duty != 100))
0002f0  e3550000          CMP      r5,#0
0002f4  0a000031          BEQ      |L1.960|
0002f8  e3550064          CMP      r5,#0x64
0002fc  0a00002f          BEQ      |L1.960|
;;;160                {
;;;161                    /* Duty-counter value */
;;;162                    u16DutyVal = (u16Period * u16Duty)/100;
000300  e0000597          MUL      r0,r7,r5
000304  e3a01064          MOV      r1,#0x64
000308  ebfffffe          BL       __aeabi_idiv
00030c  e6ff9070          UXTH     r9,r0
;;;163    
;;;164                    vSetGPWMPDR_GPWMPDR(eCntrl, u16Period);
000310  e1a00c04          LSL      r0,r4,#24
000314  e1a00620          LSR      r0,r0,#12
000318  e24005ff          SUB      r0,r0,#0x3fc00000
00031c  e2400adb          SUB      r0,r0,#0xdb000
000320  e1d000b4          LDRH     r0,[r0,#4]
000324  e7cf0017          BFI      r0,r7,#0,#16
000328  e1a01c04          LSL      r1,r4,#24
00032c  e1a01621          LSR      r1,r1,#12
000330  e24115ff          SUB      r1,r1,#0x3fc00000
000334  e2411adb          SUB      r1,r1,#0xdb000
000338  e1c100b4          STRH     r0,[r1,#4]
;;;165                    vSetGPWMDDR_GPWMDDR(eCntrl, u16DutyVal);
00033c  e1a00c04          LSL      r0,r4,#24
000340  e1a00620          LSR      r0,r0,#12
000344  e24005ff          SUB      r0,r0,#0x3fc00000
000348  e2400adb          SUB      r0,r0,#0xdb000
00034c  e1d000b8          LDRH     r0,[r0,#8]
000350  e7cf0019          BFI      r0,r9,#0,#16
000354  e1a01c04          LSL      r1,r4,#24
000358  e1a01621          LSR      r1,r1,#12
00035c  e24115ff          SUB      r1,r1,#0x3fc00000
000360  e2411adb          SUB      r1,r1,#0xdb000
000364  e1c100b8          STRH     r0,[r1,#8]
;;;166    
;;;167                    /* enable timer if coming from 0% and 100% */
;;;168                    if (au8GDCPWMRunning[eCntrl] == 1U)
000368  e59f03bc          LDR      r0,|L1.1836|
00036c  e7d00004          LDRB     r0,[r0,r4]
000370  e3500001          CMP      r0,#1
000374  1a00000b          BNE      |L1.936|
;;;169                    {
;;;170                        vSetGPWMCR_TRUN(eCntrl, TIMER_GDC_PWM_ENABLE);
000378  e1a00c04          LSL      r0,r4,#24
00037c  e1a00620          LSR      r0,r0,#12
000380  e24005ff          SUB      r0,r0,#0x3fc00000
000384  e2400adb          SUB      r0,r0,#0xdb000
000388  e1d000b0          LDRH     r0,[r0,#0]
00038c  e3c00001          BIC      r0,r0,#1
000390  e2800001          ADD      r0,r0,#1
000394  e1a01c04          LSL      r1,r4,#24
000398  e1a01621          LSR      r1,r1,#12
00039c  e24115ff          SUB      r1,r1,#0x3fc00000
0003a0  e2411adb          SUB      r1,r1,#0xdb000
0003a4  e1c100b0          STRH     r0,[r1,#0]
                  |L1.936|
;;;171                    }
;;;172    
;;;173                    /* Achieved Duty-cycle */
;;;174                    i32Res = (u16DutyVal* 100) / u16Period;
0003a8  e3a01064          MOV      r1,#0x64
0003ac  e0000199          MUL      r0,r9,r1
0003b0  e1a01007          MOV      r1,r7
0003b4  ebfffffe          BL       __aeabi_idiv
0003b8  e1a06000          MOV      r6,r0
0003bc  ea000043          B        |L1.1232|
                  |L1.960|
;;;175                }
;;;176                else
;;;177                {
;;;178                    /* special treatment for 0% and 100% */
;;;179                    if (u16Duty == 0)
0003c0  e3550000          CMP      r5,#0
0003c4  1a000017          BNE      |L1.1064|
;;;180                    {
;;;181                        /* 0% */
;;;182                        vSetGPWMCR_TRUN(eCntrl, TIMER_GDC_PWM_DISABLE);
0003c8  e1a00c04          LSL      r0,r4,#24
0003cc  e1a00620          LSR      r0,r0,#12
0003d0  e24005ff          SUB      r0,r0,#0x3fc00000
0003d4  e2400adb          SUB      r0,r0,#0xdb000
0003d8  e1d000b0          LDRH     r0,[r0,#0]
0003dc  e3c00001          BIC      r0,r0,#1
0003e0  e1a01c04          LSL      r1,r4,#24
0003e4  e1a01621          LSR      r1,r1,#12
0003e8  e24115ff          SUB      r1,r1,#0x3fc00000
0003ec  e2411adb          SUB      r1,r1,#0xdb000
0003f0  e1c100b0          STRH     r0,[r1,#0]
;;;183                        vSetGPWMCR_OL(eCntrl, eOutLevel);
0003f4  e1a00c04          LSL      r0,r4,#24
0003f8  e1a00620          LSR      r0,r0,#12
0003fc  e24005ff          SUB      r0,r0,#0x3fc00000
000400  e2400adb          SUB      r0,r0,#0xdb000
000404  e1d000b0          LDRH     r0,[r0,#0]
000408  e7c40218          BFI      r0,r8,#4,#1
00040c  e1a01c04          LSL      r1,r4,#24
000410  e1a01621          LSR      r1,r1,#12
000414  e24115ff          SUB      r1,r1,#0x3fc00000
000418  e2411adb          SUB      r1,r1,#0xdb000
00041c  e1c100b0          STRH     r0,[r1,#0]
;;;184    
;;;185                /* Achieved Duty-cycle */
;;;186                        i32Res = 0;
000420  e3a06000          MOV      r6,#0
000424  ea000029          B        |L1.1232|
                  |L1.1064|
;;;187                    }
;;;188                    else
;;;189                    {
;;;190                        /* 100% */
;;;191                        vSetGPWMCR_TRUN(eCntrl, TIMER_GDC_PWM_DISABLE);
000428  e1a00c04          LSL      r0,r4,#24
00042c  e1a00620          LSR      r0,r0,#12
000430  e24005ff          SUB      r0,r0,#0x3fc00000
000434  e2400adb          SUB      r0,r0,#0xdb000
000438  e1d000b0          LDRH     r0,[r0,#0]
00043c  e3c00001          BIC      r0,r0,#1
000440  e1a01c04          LSL      r1,r4,#24
000444  e1a01621          LSR      r1,r1,#12
000448  e24115ff          SUB      r1,r1,#0x3fc00000
00044c  e2411adb          SUB      r1,r1,#0xdb000
000450  e1c100b0          STRH     r0,[r1,#0]
;;;192                        if (TIMER_GDC_PWM_LEVEL_HI == eOutLevel)
000454  e3580001          CMP      r8,#1
000458  1a00000b          BNE      |L1.1164|
;;;193                        {
;;;194                            vSetGPWMCR_OL(eCntrl, TIMER_GDC_PWM_LEVEL_LO);
00045c  e1a00c04          LSL      r0,r4,#24
000460  e1a00620          LSR      r0,r0,#12
000464  e24005ff          SUB      r0,r0,#0x3fc00000
000468  e2400adb          SUB      r0,r0,#0xdb000
00046c  e1d000b0          LDRH     r0,[r0,#0]
000470  e3c00010          BIC      r0,r0,#0x10
000474  e1a01c04          LSL      r1,r4,#24
000478  e1a01621          LSR      r1,r1,#12
00047c  e24115ff          SUB      r1,r1,#0x3fc00000
000480  e2411adb          SUB      r1,r1,#0xdb000
000484  e1c100b0          STRH     r0,[r1,#0]
000488  ea00000b          B        |L1.1212|
                  |L1.1164|
;;;195                        }
;;;196                        else
;;;197                        {
;;;198                            vSetGPWMCR_OL(eCntrl, TIMER_GDC_PWM_LEVEL_HI);
00048c  e1a00c04          LSL      r0,r4,#24
000490  e1a00620          LSR      r0,r0,#12
000494  e24005ff          SUB      r0,r0,#0x3fc00000
000498  e2400adb          SUB      r0,r0,#0xdb000
00049c  e1d000b0          LDRH     r0,[r0,#0]
0004a0  e3c00010          BIC      r0,r0,#0x10
0004a4  e2800010          ADD      r0,r0,#0x10
0004a8  e1a01c04          LSL      r1,r4,#24
0004ac  e1a01621          LSR      r1,r1,#12
0004b0  e24115ff          SUB      r1,r1,#0x3fc00000
0004b4  e2411adb          SUB      r1,r1,#0xdb000
0004b8  e1c100b0          STRH     r0,[r1,#0]
                  |L1.1212|
;;;199                        }
;;;200    
;;;201                /* Achieved Duty-cycle */
;;;202                        i32Res = 100;
0004bc  e3a06064          MOV      r6,#0x64
0004c0  ea000002          B        |L1.1232|
                  |L1.1220|
;;;203                    }
;;;204                }
;;;205            }
;;;206            else
;;;207            {
;;;208                /* Duty Cycle parameter out of range */
;;;209                i32Res = 0xff;
0004c4  e3a060ff          MOV      r6,#0xff
0004c8  ea000000          B        |L1.1232|
                  |L1.1228|
;;;210            }
;;;211        }
;;;212        else
;;;213        {
;;;214            /* PWM Timer running, no change allowed */
;;;215            i32Res = 0xff;
0004cc  e3a060ff          MOV      r6,#0xff
                  |L1.1232|
;;;216        }
;;;217    
;;;218        return i32Res;
0004d0  e1a00006          MOV      r0,r6
;;;219    }
0004d4  e8bd9ff0          POP      {r4-r12,pc}
;;;220    
                          ENDP

                  vTIMER_GDC_PWM_SetPrescaler PROC
;;;223    
;;;224    void vTIMER_GDC_PWM_SetPrescaler(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_sclk_e ePrescal)
0004d8  e1a02c00          LSL      r2,r0,#24
;;;225    {
;;;226        vSetGPWMCR_SCLK(eCntrl, ePrescal);
0004dc  e1a02622          LSR      r2,r2,#12
0004e0  e24225ff          SUB      r2,r2,#0x3fc00000
0004e4  e2422adb          SUB      r2,r2,#0xdb000
0004e8  e1d220b0          LDRH     r2,[r2,#0]
0004ec  e7ce2611          BFI      r2,r1,#12,#3
0004f0  e1a03c00          LSL      r3,r0,#24
0004f4  e1a03623          LSR      r3,r3,#12
0004f8  e24335ff          SUB      r3,r3,#0x3fc00000
0004fc  e2433adb          SUB      r3,r3,#0xdb000
000500  e1c320b0          STRH     r2,[r3,#0]
;;;227    }
000504  e12fff1e          BX       lr
;;;228    
                          ENDP

                  vTIMER_GDC_PWM_SetRstCondition PROC
;;;231    
;;;232    void vTIMER_GDC_PWM_SetRstCondition(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_rc_e eRst)
000508  e1a02c00          LSL      r2,r0,#24
;;;233    {
;;;234        vSetGPWMCR_RC(eCntrl, eRst);
00050c  e1a02622          LSR      r2,r2,#12
000510  e24225ff          SUB      r2,r2,#0x3fc00000
000514  e2422adb          SUB      r2,r2,#0xdb000
000518  e1d220b0          LDRH     r2,[r2,#0]
00051c  e7cb2511          BFI      r2,r1,#10,#2
000520  e1a03c00          LSL      r3,r0,#24
000524  e1a03623          LSR      r3,r3,#12
000528  e24335ff          SUB      r3,r3,#0x3fc00000
00052c  e2433adb          SUB      r3,r3,#0xdb000
000530  e1c320b0          STRH     r2,[r3,#0]
;;;235    }
000534  e12fff1e          BX       lr
;;;236    
                          ENDP

                  vTIMER_GDC_PWM_SetDetEdgeVsync PROC
;;;239    
;;;240    void vTIMER_GDC_PWM_SetDetEdgeVsync(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_ved_e eEdge)
000538  e1a02c00          LSL      r2,r0,#24
;;;241    {
;;;242        vSetGPWMCR_VED(eCntrl, eEdge);
00053c  e1a02622          LSR      r2,r2,#12
000540  e24225ff          SUB      r2,r2,#0x3fc00000
000544  e2422adb          SUB      r2,r2,#0xdb000
000548  e1d220b0          LDRH     r2,[r2,#0]
00054c  e7c92491          BFI      r2,r1,#9,#1
000550  e1a03c00          LSL      r3,r0,#24
000554  e1a03623          LSR      r3,r3,#12
000558  e24335ff          SUB      r3,r3,#0x3fc00000
00055c  e2433adb          SUB      r3,r3,#0xdb000
000560  e1c320b0          STRH     r2,[r3,#0]
;;;243    }
000564  e12fff1e          BX       lr
;;;244    
                          ENDP

                  vTIMER_GDC_PWM_SetDetEdgeHSync PROC
;;;247    
;;;248    void vTIMER_GDC_PWM_SetDetEdgeHSync(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_ved_e eEdge)
000568  e1a02c00          LSL      r2,r0,#24
;;;249    {
;;;250        vSetGPWMCR_HED(eCntrl, eEdge);
00056c  e1a02622          LSR      r2,r2,#12
000570  e24225ff          SUB      r2,r2,#0x3fc00000
000574  e2422adb          SUB      r2,r2,#0xdb000
000578  e1d220b0          LDRH     r2,[r2,#0]
00057c  e7c82411          BFI      r2,r1,#8,#1
000580  e1a03c00          LSL      r3,r0,#24
000584  e1a03623          LSR      r3,r3,#12
000588  e24335ff          SUB      r3,r3,#0x3fc00000
00058c  e2433adb          SUB      r3,r3,#0xdb000
000590  e1c320b0          STRH     r2,[r3,#0]
;;;251    }
000594  e12fff1e          BX       lr
;;;252    
                          ENDP

                  vTIMER_GDC_PWM_IrqEnable PROC
;;;255    
;;;256    void vTIMER_GDC_PWM_IrqEnable(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_en_e eEnable)
000598  e1a02c00          LSL      r2,r0,#24
;;;257    {
;;;258        vSetGPWMCR_IE(eCntrl, eEnable);
00059c  e1a02622          LSR      r2,r2,#12
0005a0  e24225ff          SUB      r2,r2,#0x3fc00000
0005a4  e2422adb          SUB      r2,r2,#0xdb000
0005a8  e1d220b0          LDRH     r2,[r2,#0]
0005ac  e7c62311          BFI      r2,r1,#6,#1
0005b0  e1a03c00          LSL      r3,r0,#24
0005b4  e1a03623          LSR      r3,r3,#12
0005b8  e24335ff          SUB      r3,r3,#0x3fc00000
0005bc  e2433adb          SUB      r3,r3,#0xdb000
0005c0  e1c320b0          STRH     r2,[r3,#0]
;;;259    }
0005c4  e12fff1e          BX       lr
;;;260    
                          ENDP

                  vTIMER_GDC_PWM_DBuffEnable PROC
;;;263    
;;;264    void vTIMER_GDC_PWM_DBuffEnable(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_en_e eEnable)
0005c8  e1a02c00          LSL      r2,r0,#24
;;;265    {
;;;266        vSetGPWMCR_DB(eCntrl, eEnable);
0005cc  e1a02622          LSR      r2,r2,#12
0005d0  e24225ff          SUB      r2,r2,#0x3fc00000
0005d4  e2422adb          SUB      r2,r2,#0xdb000
0005d8  e1d220b0          LDRH     r2,[r2,#0]
0005dc  e7c52291          BFI      r2,r1,#5,#1
0005e0  e1a03c00          LSL      r3,r0,#24
0005e4  e1a03623          LSR      r3,r3,#12
0005e8  e24335ff          SUB      r3,r3,#0x3fc00000
0005ec  e2433adb          SUB      r3,r3,#0xdb000
0005f0  e1c320b0          STRH     r2,[r3,#0]
;;;267    }
0005f4  e12fff1e          BX       lr
;;;268    
                          ENDP

                  i32TIMER_GDC_PWM_SetOutLevel PROC
;;;271    
;;;272    int32_t i32TIMER_GDC_PWM_SetOutLevel(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_ol_e eLevel)
0005f8  e92d4030          PUSH     {r4,r5,lr}
;;;273    {
0005fc  e1a02000          MOV      r2,r0
;;;274        int32_t i32Res = C_SUCCESS;
000600  e3a00000          MOV      r0,#0
;;;275        timer_gdc_pwm_en_e eCurStat = TIMER_GDC_PWM_DISABLE;
000604  e3a03000          MOV      r3,#0
;;;276    
;;;277        eCurStat = (timer_gdc_pwm_en_e)biGetGPWMCR_TRUN(eCntrl);
000608  e1a04c02          LSL      r4,r2,#24
00060c  e1a04624          LSR      r4,r4,#12
000610  e24445ff          SUB      r4,r4,#0x3fc00000
000614  e2444adb          SUB      r4,r4,#0xdb000
000618  e1d440b0          LDRH     r4,[r4,#0]
00061c  e2043001          AND      r3,r4,#1
;;;278    
;;;279        /* Change allowed only when Timer is not Running */
;;;280        if( TIMER_GDC_PWM_ENABLE != eCurStat )
000620  e3530000          CMP      r3,#0
000624  1a00000b          BNE      |L1.1624|
;;;281        {
;;;282            /* Change Output Level */
;;;283            vSetGPWMCR_OL(eCntrl, eLevel);
000628  e1a04c02          LSL      r4,r2,#24
00062c  e1a04624          LSR      r4,r4,#12
000630  e24445ff          SUB      r4,r4,#0x3fc00000
000634  e2444adb          SUB      r4,r4,#0xdb000
000638  e1d440b0          LDRH     r4,[r4,#0]
00063c  e7c44211          BFI      r4,r1,#4,#1
000640  e1a05c02          LSL      r5,r2,#24
000644  e1a05625          LSR      r5,r5,#12
000648  e24555ff          SUB      r5,r5,#0x3fc00000
00064c  e2455adb          SUB      r5,r5,#0xdb000
000650  e1c540b0          STRH     r4,[r5,#0]
000654  ea000000          B        |L1.1628|
                  |L1.1624|
;;;284        }
;;;285        else
;;;286        {
;;;287            /* No change allowed (PWM Timer running) */
;;;288            i32Res = C_FAILED;
000658  e3e00000          MVN      r0,#0
                  |L1.1628|
;;;289        }
;;;290    
;;;291        return i32Res;
;;;292    }
00065c  e8bd8030          POP      {r4,r5,pc}
;;;293    
                          ENDP

                  vTIMER_GDC_PWM_SetClkSource PROC
;;;296    
;;;297    void vTIMER_GDC_PWM_SetClkSource(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_gdc_e eSource)
000660  e1a02c00          LSL      r2,r0,#24
;;;298    {
;;;299        vSetGPWMCR_GDC(eCntrl, eSource);
000664  e1a02622          LSR      r2,r2,#12
000668  e24225ff          SUB      r2,r2,#0x3fc00000
00066c  e2422adb          SUB      r2,r2,#0xdb000
000670  e1d220b0          LDRH     r2,[r2,#0]
000674  e7c22091          BFI      r2,r1,#1,#2
000678  e1a03c00          LSL      r3,r0,#24
00067c  e1a03623          LSR      r3,r3,#12
000680  e24335ff          SUB      r3,r3,#0x3fc00000
000684  e2433adb          SUB      r3,r3,#0xdb000
000688  e1c320b0          STRH     r2,[r3,#0]
;;;300    }
00068c  e12fff1e          BX       lr
;;;301    
                          ENDP

                  vTIMER_GDC_PWM_GDCCoreEnable PROC
;;;304    
;;;305    void vTIMER_GDC_PWM_GDCCoreEnable(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_tcore_e eEnable)
000690  e1a02c00          LSL      r2,r0,#24
;;;306    {
;;;307        vSetGPWMCR_TCORE_EN(eCntrl, eEnable);
000694  e1a02622          LSR      r2,r2,#12
000698  e24225ff          SUB      r2,r2,#0x3fc00000
00069c  e2422adb          SUB      r2,r2,#0xdb000
0006a0  e1d220b0          LDRH     r2,[r2,#0]
0006a4  e7c72391          BFI      r2,r1,#7,#1
0006a8  e1a03c00          LSL      r3,r0,#24
0006ac  e1a03623          LSR      r3,r3,#12
0006b0  e24335ff          SUB      r3,r3,#0x3fc00000
0006b4  e2433adb          SUB      r3,r3,#0xdb000
0006b8  e1c320b0          STRH     r2,[r3,#0]
;;;308    }
0006bc  e12fff1e          BX       lr
;;;309    
                          ENDP

                  vTIMER_GDC_PWM_Enable PROC
;;;312    
;;;313    void vTIMER_GDC_PWM_Enable(timer_gdc_pwm_cntrl_e eCntrl, timer_gdc_pwm_en_e eEnable)
0006c0  e1a02c00          LSL      r2,r0,#24
;;;314    {
;;;315        vSetGPWMCR_TRUN(eCntrl, eEnable);
0006c4  e1a02622          LSR      r2,r2,#12
0006c8  e24225ff          SUB      r2,r2,#0x3fc00000
0006cc  e2422adb          SUB      r2,r2,#0xdb000
0006d0  e1d220b0          LDRH     r2,[r2,#0]
0006d4  e7c02011          BFI      r2,r1,#0,#1
0006d8  e1a03c00          LSL      r3,r0,#24
0006dc  e1a03623          LSR      r3,r3,#12
0006e0  e24335ff          SUB      r3,r3,#0x3fc00000
0006e4  e2433adb          SUB      r3,r3,#0xdb000
0006e8  e1c320b0          STRH     r2,[r3,#0]
;;;316        au8GDCPWMRunning[eCntrl] = (uint8_t)eEnable;
0006ec  e59f2038          LDR      r2,|L1.1836|
0006f0  e7c21000          STRB     r1,[r2,r0]
;;;317    }
0006f4  e12fff1e          BX       lr
;;;318    
                          ENDP

                  u16TIMER_GDC_PWM_GetCountVal PROC
;;;321    
;;;322    uint16_t u16TIMER_GDC_PWM_GetCountVal(timer_gdc_pwm_cntrl_e eCntrl)
0006f8  e1a01000          MOV      r1,r0
;;;323    {
;;;324        return (uint16_t) biGetGPWMCNT_GPWMCNT(eCntrl);
0006fc  e1a00c01          LSL      r0,r1,#24
000700  e1a00620          LSR      r0,r0,#12
000704  e24005ff          SUB      r0,r0,#0x3fc00000
000708  e2400adb          SUB      r0,r0,#0xdb000
00070c  e1d000bc          LDRH     r0,[r0,#0xc]
;;;325    }
000710  e12fff1e          BX       lr
;;;326    
                          ENDP

                  |L1.1812|
                          DCD      au8LLDD_TIMER_GDC_PWM_C_REVISION
                  |L1.1816|
                          DCD      au8LLDD_TIMER_GDC_PWM_C_TAG
                  |L1.1820|
                          DCD      au8LLDD_TIMER_GDC_PWM_H_REVISION
                  |L1.1824|
                          DCD      au8LLDD_TIMER_GDC_PWM_H_TAG
                  |L1.1828|
                          DCD      au8LLDD_TIMER_GDC_PWM_IO_H_REVISION
                  |L1.1832|
                          DCD      au8LLDD_TIMER_GDC_PWM_IO_H_TAG
                  |L1.1836|
                          DCD      au8GDCPWMRunning

                          AREA ||.data||, DATA, ALIGN=0

                  au8LLDD_TIMER_GDC_PWM_C_REVISION
000000  24526576          DCB      0x24,0x52,0x65,0x76
000004  6973696f          DCB      0x69,0x73,0x69,0x6f
000008  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
00000c  2e392024          DCB      0x2e,0x39,0x20,0x24
000010  00                DCB      0x00
                  au8LLDD_TIMER_GDC_PWM_C_TAG
000011  244e61            DCB      0x24,0x4e,0x61
000014  6d653a20          DCB      0x6d,0x65,0x3a,0x20
000018  4c4c4444          DCB      0x4c,0x4c,0x44,0x44
00001c  5f315f36          DCB      0x5f,0x31,0x5f,0x36
000020  202400            DCB      0x20,0x24,0x00
                  au8LLDD_TIMER_GDC_PWM_H_REVISION
000023  24                DCB      0x24
000024  52657669          DCB      0x52,0x65,0x76,0x69
000028  73696f6e          DCB      0x73,0x69,0x6f,0x6e
00002c  3a20312e          DCB      0x3a,0x20,0x31,0x2e
000030  31302024          DCB      0x31,0x30,0x20,0x24
000034  00                DCB      0x00
                  au8LLDD_TIMER_GDC_PWM_H_TAG
000035  244e61            DCB      0x24,0x4e,0x61
000038  6d653a20          DCB      0x6d,0x65,0x3a,0x20
00003c  4c4c4444          DCB      0x4c,0x4c,0x44,0x44
000040  5f315f36          DCB      0x5f,0x31,0x5f,0x36
000044  202400            DCB      0x20,0x24,0x00
                  au8LLDD_TIMER_GDC_PWM_IO_H_REVISION
000047  24                DCB      0x24
000048  52657669          DCB      0x52,0x65,0x76,0x69
00004c  73696f6e          DCB      0x73,0x69,0x6f,0x6e
000050  3a20312e          DCB      0x3a,0x20,0x31,0x2e
000054  31322024          DCB      0x31,0x32,0x20,0x24
000058  00                DCB      0x00
                  au8LLDD_TIMER_GDC_PWM_IO_H_TAG
000059  244e61            DCB      0x24,0x4e,0x61
00005c  6d653a20          DCB      0x6d,0x65,0x3a,0x20
000060  4c4c4444          DCB      0x4c,0x4c,0x44,0x44
000064  5f315f36          DCB      0x5f,0x31,0x5f,0x36
000068  202400            DCB      0x20,0x24,0x00
                  au8GDCPWMRunning
00006b  00                DCB      0x00
00006c  00                DCB      0x00
