; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\ccr.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\ccr.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\ccr.crf ..\..\..\..\lldd\src\ccr.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vCCR_GetVersion PROC
;;;67     /****************************************************************************/
;;;68     void vCCR_GetVersion(uint8_t** pau8ModuleRevision, uint8_t** pau8ModuleTag,
000000  e92d40f0          PUSH     {r4-r7,lr}
;;;69                          uint8_t** pau8HeaderRevision, uint8_t** pau8HeaderTag,
;;;70                          uint8_t** pau8IOPDHRevision, uint8_t** pau8IOPDHTag,
;;;71                          uint8_t** pau8IOPDSRevision, uint8_t** pau8IOPDSTag)
;;;72     {
000004  e1cd41d4          LDRD     r4,r5,[sp,#0x14]
000008  e1cd61dc          LDRD     r6,r7,[sp,#0x1c]
;;;73        *pau8ModuleRevision = &au8LLDD_CCR_C_REVISION[0];
00000c  e59fcf0c          LDR      r12,|L1.3872|
000010  e580c000          STR      r12,[r0,#0]
;;;74        *pau8ModuleTag      = &au8LLDD_CCR_C_TAG[0];
000014  e59fcf08          LDR      r12,|L1.3876|
000018  e581c000          STR      r12,[r1,#0]
;;;75        *pau8HeaderRevision = &au8LLDD_CCR_H_REVISION[0];
00001c  e59fcf04          LDR      r12,|L1.3880|
000020  e582c000          STR      r12,[r2,#0]
;;;76        *pau8HeaderTag      = &au8LLDD_CCR_H_TAG[0];
000024  e59fcf00          LDR      r12,|L1.3884|
000028  e583c000          STR      r12,[r3,#0]
;;;77        *pau8IOPDHRevision  = &au8LLDD_CCR_PDH_IO_H_REVISION[0];
00002c  e59fcefc          LDR      r12,|L1.3888|
000030  e584c000          STR      r12,[r4,#0]
;;;78        *pau8IOPDHTag       = &au8LLDD_CCR_PDH_IO_H_TAG[0];
000034  e59fcef8          LDR      r12,|L1.3892|
000038  e585c000          STR      r12,[r5,#0]
;;;79        *pau8IOPDSRevision  = &au8LLDD_CCR_PDS_IO_H_REVISION[0];
00003c  e59fcef4          LDR      r12,|L1.3896|
000040  e586c000          STR      r12,[r6,#0]
;;;80        *pau8IOPDSTag       = &au8LLDD_CCR_PDS_IO_H_TAG[0];
000044  e59fcef0          LDR      r12,|L1.3900|
000048  e587c000          STR      r12,[r7,#0]
;;;81     }
00004c  e8bd80f0          POP      {r4-r7,pc}
;;;82     
                          ENDP

                  i32CCR_EnableModuleClock PROC
;;;83     /****************************************************************************/
;;;84     int32_t i32CCR_EnableModuleClock(ccr_cntrl_e eCntrl, ccr_enable_e eEn)
000050  e92d4010          PUSH     {r4,lr}
;;;85     {
000054  e1a02000          MOV      r2,r0
;;;86         int32_t i32Res = C_SUCCESS;
000058  e3a00000          MOV      r0,#0
;;;87     
;;;88         switch (eCntrl)
00005c  e3520012          CMP      r2,#0x12
000060  308ff102          ADDCC    pc,pc,r2,LSL #2
000064  ea000179          B        |L1.1616|
000068  ea000010          B        |L1.176|
00006c  ea000023          B        |L1.256|
000070  ea000036          B        |L1.336|
000074  ea0000fd          B        |L1.1136|
000078  ea000124          B        |L1.1296|
00007c  ea0000ab          B        |L1.816|
000080  ea0000be          B        |L1.896|
000084  ea000045          B        |L1.416|
000088  ea000058          B        |L1.496|
00008c  ea00006b          B        |L1.576|
000090  ea00007e          B        |L1.656|
000094  ea000091          B        |L1.736|
000098  ea0000cc          B        |L1.976|
00009c  ea0000df          B        |L1.1056|
0000a0  ea000106          B        |L1.1216|
0000a4  ea00012d          B        |L1.1376|
0000a8  ea000140          B        |L1.1456|
0000ac  ea000153          B        |L1.1536|
                  |L1.176|
;;;89         {
;;;90             case CCR_QSPI_0:
0000b0  e320f000          NOP      
;;;91                 {
;;;92                     /* Unlock CCR for writing */
;;;93                     vCCR_PDS_UNLOCK();
0000b4  e59f3e84          LDR      r3,|L1.3904|
0000b8  e3a04103          MOV      r4,#0xc0000000
0000bc  e5944000          LDR      r4,[r4,#0]
0000c0  e3a04103          MOV      r4,#0xc0000000
0000c4  e5843000          STR      r3,[r4,#0]
;;;94     
;;;95                     /* set value */
;;;96                     if (eEn == CCR_ENABLE)
0000c8  e3510001          CMP      r1,#1
0000cc  1a000004          BNE      |L1.228|
;;;97                     {
;;;98                         vSetCCR_PERICLKGATE_CLK_QSPI0_GATE(0U);
0000d0  e3a03103          MOV      r3,#0xc0000000
0000d4  e5933024          LDR      r3,[r3,#0x24]
0000d8  e3c33001          BIC      r3,r3,#1
0000dc  e5843024          STR      r3,[r4,#0x24]
0000e0  ea000005          B        |L1.252|
                  |L1.228|
;;;99                     }
;;;100                    else
;;;101                    {
;;;102                        vSetCCR_PERICLKGATE_CLK_QSPI0_GATE(1U);
0000e4  e3a03103          MOV      r3,#0xc0000000
0000e8  e5933024          LDR      r3,[r3,#0x24]
0000ec  e3c33001          BIC      r3,r3,#1
0000f0  e2833001          ADD      r3,r3,#1
0000f4  e3a04103          MOV      r4,#0xc0000000
0000f8  e5843024          STR      r3,[r4,#0x24]
                  |L1.252|
;;;103                    }
;;;104                }
;;;105                break;
0000fc  ea000156          B        |L1.1628|
                  |L1.256|
;;;106            case CCR_QSPI_1:
000100  e320f000          NOP      
;;;107                {
;;;108                    /* Unlock CCR for writing */
;;;109                    vCCR_PDS_UNLOCK();
000104  e59f3e34          LDR      r3,|L1.3904|
000108  e3a04103          MOV      r4,#0xc0000000
00010c  e5944000          LDR      r4,[r4,#0]
000110  e3a04103          MOV      r4,#0xc0000000
000114  e5843000          STR      r3,[r4,#0]
;;;110    
;;;111                    /* set value */
;;;112                    if (eEn == CCR_ENABLE)
000118  e3510001          CMP      r1,#1
00011c  1a000004          BNE      |L1.308|
;;;113                    {
;;;114                        vSetCCR_PERICLKGATE_CLK_QSPI1_GATE(0U);
000120  e3a03103          MOV      r3,#0xc0000000
000124  e5933024          LDR      r3,[r3,#0x24]
000128  e3c33002          BIC      r3,r3,#2
00012c  e5843024          STR      r3,[r4,#0x24]
000130  ea000005          B        |L1.332|
                  |L1.308|
;;;115                    }
;;;116                    else
;;;117                    {
;;;118                        vSetCCR_PERICLKGATE_CLK_QSPI1_GATE(1U);
000134  e3a03103          MOV      r3,#0xc0000000
000138  e5933024          LDR      r3,[r3,#0x24]
00013c  e3c33002          BIC      r3,r3,#2
000140  e2833002          ADD      r3,r3,#2
000144  e3a04103          MOV      r4,#0xc0000000
000148  e5843024          STR      r3,[r4,#0x24]
                  |L1.332|
;;;119                    }
;;;120                }
;;;121                break;
00014c  ea000142          B        |L1.1628|
                  |L1.336|
;;;122            case CCR_QSPI_INT:
000150  e320f000          NOP      
;;;123                {
;;;124                    /* Unlock CCR for writing */
;;;125                    vCCR_PDS_UNLOCK();
000154  e59f3de4          LDR      r3,|L1.3904|
000158  e3a04103          MOV      r4,#0xc0000000
00015c  e5944000          LDR      r4,[r4,#0]
000160  e3a04103          MOV      r4,#0xc0000000
000164  e5843000          STR      r3,[r4,#0]
;;;126    
;;;127                    /* set value */
;;;128                    if (eEn == CCR_ENABLE)
000168  e3510001          CMP      r1,#1
00016c  1a000004          BNE      |L1.388|
;;;129                    {
;;;130                        vSetCCR_PERICLKGATE_CLK_QSPI2_GATE(0U);
000170  e3a03103          MOV      r3,#0xc0000000
000174  e5933024          LDR      r3,[r3,#0x24]
000178  e3c33004          BIC      r3,r3,#4
00017c  e5843024          STR      r3,[r4,#0x24]
000180  ea000005          B        |L1.412|
                  |L1.388|
;;;131                    }
;;;132                    else
;;;133                    {
;;;134                        vSetCCR_PERICLKGATE_CLK_QSPI2_GATE(1U);
000184  e3a03103          MOV      r3,#0xc0000000
000188  e5933024          LDR      r3,[r3,#0x24]
00018c  e3c33004          BIC      r3,r3,#4
000190  e2833004          ADD      r3,r3,#4
000194  e3a04103          MOV      r4,#0xc0000000
000198  e5843024          STR      r3,[r4,#0x24]
                  |L1.412|
;;;135                    }
;;;136                }
;;;137                break;
00019c  ea00012e          B        |L1.1628|
                  |L1.416|
;;;138            case CCR_DMA:
0001a0  e320f000          NOP      
;;;139                {
;;;140                    /* Unlock CCR for writing */
;;;141                    vCCR_PDS_UNLOCK();
0001a4  e59f3d94          LDR      r3,|L1.3904|
0001a8  e3a04103          MOV      r4,#0xc0000000
0001ac  e5944000          LDR      r4,[r4,#0]
0001b0  e3a04103          MOV      r4,#0xc0000000
0001b4  e5843000          STR      r3,[r4,#0]
;;;142    
;;;143                    /* set value */
;;;144                    if (eEn == CCR_ENABLE)
0001b8  e3510001          CMP      r1,#1
0001bc  1a000004          BNE      |L1.468|
;;;145                    {
;;;146                        vSetCCR_PERICLKGATE_CLK_DMA_GATE(0U);
0001c0  e3a03103          MOV      r3,#0xc0000000
0001c4  e5933024          LDR      r3,[r3,#0x24]
0001c8  e3c33008          BIC      r3,r3,#8
0001cc  e5843024          STR      r3,[r4,#0x24]
0001d0  ea000005          B        |L1.492|
                  |L1.468|
;;;147                    }
;;;148                    else
;;;149                    {
;;;150                        vSetCCR_PERICLKGATE_CLK_DMA_GATE(1U);
0001d4  e3a03103          MOV      r3,#0xc0000000
0001d8  e5933024          LDR      r3,[r3,#0x24]
0001dc  e3c33008          BIC      r3,r3,#8
0001e0  e2833008          ADD      r3,r3,#8
0001e4  e3a04103          MOV      r4,#0xc0000000
0001e8  e5843024          STR      r3,[r4,#0x24]
                  |L1.492|
;;;151                    }
;;;152                }
;;;153                break;
0001ec  ea00011a          B        |L1.1628|
                  |L1.496|
;;;154            case CCR_PARFLASH:
0001f0  e320f000          NOP      
;;;155                {
;;;156                    /* Unlock CCR for writing */
;;;157                    vCCR_PDS_UNLOCK();
0001f4  e59f3d44          LDR      r3,|L1.3904|
0001f8  e3a04103          MOV      r4,#0xc0000000
0001fc  e5944000          LDR      r4,[r4,#0]
000200  e3a04103          MOV      r4,#0xc0000000
000204  e5843000          STR      r3,[r4,#0]
;;;158    
;;;159                    /* set value */
;;;160                    if (eEn == CCR_ENABLE)
000208  e3510001          CMP      r1,#1
00020c  1a000004          BNE      |L1.548|
;;;161                    {
;;;162                        vSetCCR_PERICLKGATE_CLK_PARFL_GATE(0U);
000210  e3a03103          MOV      r3,#0xc0000000
000214  e5933024          LDR      r3,[r3,#0x24]
000218  e3c33010          BIC      r3,r3,#0x10
00021c  e5843024          STR      r3,[r4,#0x24]
000220  ea000005          B        |L1.572|
                  |L1.548|
;;;163                    }
;;;164                    else
;;;165                    {
;;;166                        vSetCCR_PERICLKGATE_CLK_PARFL_GATE(1U);
000224  e3a03103          MOV      r3,#0xc0000000
000228  e5933024          LDR      r3,[r3,#0x24]
00022c  e3c33010          BIC      r3,r3,#0x10
000230  e2833010          ADD      r3,r3,#0x10
000234  e3a04103          MOV      r4,#0xc0000000
000238  e5843024          STR      r3,[r4,#0x24]
                  |L1.572|
;;;167                    }
;;;168                }
;;;169                break;
00023c  ea000106          B        |L1.1628|
                  |L1.576|
;;;170            case CCR_DAP:
000240  e320f000          NOP      
;;;171                {
;;;172                    /* Unlock CCR for writing */
;;;173                    vCCR_PDS_UNLOCK();
000244  e59f3cf4          LDR      r3,|L1.3904|
000248  e3a04103          MOV      r4,#0xc0000000
00024c  e5944000          LDR      r4,[r4,#0]
000250  e3a04103          MOV      r4,#0xc0000000
000254  e5843000          STR      r3,[r4,#0]
;;;174    
;;;175                    /* set value */
;;;176                    if (eEn == CCR_ENABLE)
000258  e3510001          CMP      r1,#1
00025c  1a000004          BNE      |L1.628|
;;;177                    {
;;;178                        vSetCCR_PERICLKGATE_CLK_DAP_GATE(0U);
000260  e3a03103          MOV      r3,#0xc0000000
000264  e5933024          LDR      r3,[r3,#0x24]
000268  e3c33020          BIC      r3,r3,#0x20
00026c  e5843024          STR      r3,[r4,#0x24]
000270  ea000005          B        |L1.652|
                  |L1.628|
;;;179                    }
;;;180                    else
;;;181                    {
;;;182                        vSetCCR_PERICLKGATE_CLK_DAP_GATE(1U);
000274  e3a03103          MOV      r3,#0xc0000000
000278  e5933024          LDR      r3,[r3,#0x24]
00027c  e3c33020          BIC      r3,r3,#0x20
000280  e2833020          ADD      r3,r3,#0x20
000284  e3a04103          MOV      r4,#0xc0000000
000288  e5843024          STR      r3,[r4,#0x24]
                  |L1.652|
;;;183                    }
;;;184                }
;;;185                break;
00028c  ea0000f2          B        |L1.1628|
                  |L1.656|
;;;186            case CCR_GA:
000290  e320f000          NOP      
;;;187                {
;;;188                    /* Unlock CCR for writing */
;;;189                    vCCR_PDS_UNLOCK();
000294  e59f3ca4          LDR      r3,|L1.3904|
000298  e3a04103          MOV      r4,#0xc0000000
00029c  e5944000          LDR      r4,[r4,#0]
0002a0  e3a04103          MOV      r4,#0xc0000000
0002a4  e5843000          STR      r3,[r4,#0]
;;;190    
;;;191                    /* set value */
;;;192                    if (eEn == CCR_ENABLE)
0002a8  e3510001          CMP      r1,#1
0002ac  1a000004          BNE      |L1.708|
;;;193                    {
;;;194                        vSetCCR_PERICLKGATE_CLK_GA_GATE(0U);
0002b0  e3a03103          MOV      r3,#0xc0000000
0002b4  e5933024          LDR      r3,[r3,#0x24]
0002b8  e3c33040          BIC      r3,r3,#0x40
0002bc  e5843024          STR      r3,[r4,#0x24]
0002c0  ea000005          B        |L1.732|
                  |L1.708|
;;;195                    }
;;;196                    else
;;;197                    {
;;;198                        vSetCCR_PERICLKGATE_CLK_GA_GATE(1U);
0002c4  e3a03103          MOV      r3,#0xc0000000
0002c8  e5933024          LDR      r3,[r3,#0x24]
0002cc  e3c33040          BIC      r3,r3,#0x40
0002d0  e2833040          ADD      r3,r3,#0x40
0002d4  e3a04103          MOV      r4,#0xc0000000
0002d8  e5843024          STR      r3,[r4,#0x24]
                  |L1.732|
;;;199                    }
;;;200                }
;;;201                break;
0002dc  ea0000de          B        |L1.1628|
                  |L1.736|
;;;202            case CCR_PNG:
0002e0  e320f000          NOP      
;;;203                {
;;;204                    /* Unlock CCR for writing */
;;;205                    vCCR_PDS_UNLOCK();
0002e4  e59f3c54          LDR      r3,|L1.3904|
0002e8  e3a04103          MOV      r4,#0xc0000000
0002ec  e5944000          LDR      r4,[r4,#0]
0002f0  e3a04103          MOV      r4,#0xc0000000
0002f4  e5843000          STR      r3,[r4,#0]
;;;206    
;;;207                    /* set value */
;;;208                    if (eEn == CCR_ENABLE)
0002f8  e3510001          CMP      r1,#1
0002fc  1a000004          BNE      |L1.788|
;;;209                    {
;;;210                        vSetCCR_PERICLKGATE_CLK_PNG_GATE(0U);
000300  e3a03103          MOV      r3,#0xc0000000
000304  e5933024          LDR      r3,[r3,#0x24]
000308  e3c33b01          BIC      r3,r3,#0x400
00030c  e5843024          STR      r3,[r4,#0x24]
000310  ea000005          B        |L1.812|
                  |L1.788|
;;;211                    }
;;;212                    else
;;;213                    {
;;;214                        vSetCCR_PERICLKGATE_CLK_PNG_GATE(1U);
000314  e3a03103          MOV      r3,#0xc0000000
000318  e5933024          LDR      r3,[r3,#0x24]
00031c  e3c33b01          BIC      r3,r3,#0x400
000320  e2833b01          ADD      r3,r3,#0x400
000324  e3a04103          MOV      r4,#0xc0000000
000328  e5843024          STR      r3,[r4,#0x24]
                  |L1.812|
;;;215                    }
;;;216                }
;;;217                break;
00032c  ea0000ca          B        |L1.1628|
                  |L1.816|
;;;218            case CCR_GDC_0:
000330  e320f000          NOP      
;;;219                {
;;;220                    /* Unlock CCR for writing */
;;;221                    vCCR_PDS_UNLOCK();
000334  e59f3c04          LDR      r3,|L1.3904|
000338  e3a04103          MOV      r4,#0xc0000000
00033c  e5944000          LDR      r4,[r4,#0]
000340  e3a04103          MOV      r4,#0xc0000000
000344  e5843000          STR      r3,[r4,#0]
;;;222    
;;;223                    /* set value */
;;;224                    if (eEn == CCR_ENABLE)
000348  e3510001          CMP      r1,#1
00034c  1a000004          BNE      |L1.868|
;;;225                    {
;;;226                        vSetCCR_PERICLKGATE_CLK_GDC0_GATE(0U);
000350  e3a03103          MOV      r3,#0xc0000000
000354  e5933024          LDR      r3,[r3,#0x24]
000358  e3c33b02          BIC      r3,r3,#0x800
00035c  e5843024          STR      r3,[r4,#0x24]
000360  ea000005          B        |L1.892|
                  |L1.868|
;;;227                    }
;;;228                    else
;;;229                    {
;;;230                        vSetCCR_PERICLKGATE_CLK_GDC0_GATE(1U);
000364  e3a03103          MOV      r3,#0xc0000000
000368  e5933024          LDR      r3,[r3,#0x24]
00036c  e3c33b02          BIC      r3,r3,#0x800
000370  e2833b02          ADD      r3,r3,#0x800
000374  e3a04103          MOV      r4,#0xc0000000
000378  e5843024          STR      r3,[r4,#0x24]
                  |L1.892|
;;;231                    }
;;;232                }
;;;233                break;
00037c  ea0000b6          B        |L1.1628|
                  |L1.896|
;;;234            case CCR_GDC_1:
000380  e320f000          NOP      
;;;235                {
;;;236                    /* Unlock CCR for writing */
;;;237                    vCCR_PDS_UNLOCK();
000384  e59f3bb4          LDR      r3,|L1.3904|
000388  e3a04103          MOV      r4,#0xc0000000
00038c  e5944000          LDR      r4,[r4,#0]
000390  e3a04103          MOV      r4,#0xc0000000
000394  e5843000          STR      r3,[r4,#0]
;;;238    
;;;239                    /* set value */
;;;240                    if (eEn == CCR_ENABLE)
000398  e3510001          CMP      r1,#1
00039c  1a000004          BNE      |L1.948|
;;;241                    {
;;;242                        vSetCCR_PERICLKGATE_CLK_GDC1_GATE(0U);
0003a0  e3a03103          MOV      r3,#0xc0000000
0003a4  e5933024          LDR      r3,[r3,#0x24]
0003a8  e3c33a01          BIC      r3,r3,#0x1000
0003ac  e5843024          STR      r3,[r4,#0x24]
0003b0  ea000005          B        |L1.972|
                  |L1.948|
;;;243                    }
;;;244                    else
;;;245                    {
;;;246                        vSetCCR_PERICLKGATE_CLK_GDC1_GATE(1U);
0003b4  e3a03103          MOV      r3,#0xc0000000
0003b8  e5933024          LDR      r3,[r3,#0x24]
0003bc  e3c33a01          BIC      r3,r3,#0x1000
0003c0  e2833a01          ADD      r3,r3,#0x1000
0003c4  e3a04103          MOV      r4,#0xc0000000
0003c8  e5843024          STR      r3,[r4,#0x24]
                  |L1.972|
;;;247                    }
;;;248                }
;;;249                break;
0003cc  ea0000a2          B        |L1.1628|
                  |L1.976|
;;;250            case CCR_FG:
0003d0  e320f000          NOP      
;;;251                {
;;;252                    /* Unlock CCR for writing */
;;;253                    vCCR_PDS_UNLOCK();
0003d4  e59f3b64          LDR      r3,|L1.3904|
0003d8  e3a04103          MOV      r4,#0xc0000000
0003dc  e5944000          LDR      r4,[r4,#0]
0003e0  e3a04103          MOV      r4,#0xc0000000
0003e4  e5843000          STR      r3,[r4,#0]
;;;254    
;;;255                    /* set value */
;;;256                    if (eEn == CCR_ENABLE)
0003e8  e3510001          CMP      r1,#1
0003ec  1a000004          BNE      |L1.1028|
;;;257                    {
;;;258                        vSetCCR_PERICLKGATE_CLK_FG_GATE(0U);
0003f0  e3a03103          MOV      r3,#0xc0000000
0003f4  e5933024          LDR      r3,[r3,#0x24]
0003f8  e3c33a02          BIC      r3,r3,#0x2000
0003fc  e5843024          STR      r3,[r4,#0x24]
000400  ea000005          B        |L1.1052|
                  |L1.1028|
;;;259                    }
;;;260                    else
;;;261                    {
;;;262                        vSetCCR_PERICLKGATE_CLK_FG_GATE(1U);
000404  e3a03103          MOV      r3,#0xc0000000
000408  e5933024          LDR      r3,[r3,#0x24]
00040c  e3c33a02          BIC      r3,r3,#0x2000
000410  e2833a02          ADD      r3,r3,#0x2000
000414  e3a04103          MOV      r4,#0xc0000000
000418  e5843024          STR      r3,[r4,#0x24]
                  |L1.1052|
;;;263                    }
;;;264                }
;;;265                break;
00041c  ea00008e          B        |L1.1628|
                  |L1.1056|
;;;266            case CCR_MLB:
000420  e320f000          NOP      
;;;267                {
;;;268                    /* Unlock CCR for writing */
;;;269                    vCCR_PDS_UNLOCK();
000424  e59f3b14          LDR      r3,|L1.3904|
000428  e3a04103          MOV      r4,#0xc0000000
00042c  e5944000          LDR      r4,[r4,#0]
000430  e3a04103          MOV      r4,#0xc0000000
000434  e5843000          STR      r3,[r4,#0]
;;;270    
;;;271                    /* set value */
;;;272                    if (eEn == CCR_ENABLE)
000438  e3510001          CMP      r1,#1
00043c  1a000004          BNE      |L1.1108|
;;;273                    {
;;;274                        vSetCCR_PERICLKGATE_CLK_MLB_GATE(0U);
000440  e3a03103          MOV      r3,#0xc0000000
000444  e5933024          LDR      r3,[r3,#0x24]
000448  e3c33901          BIC      r3,r3,#0x4000
00044c  e5843024          STR      r3,[r4,#0x24]
000450  ea000005          B        |L1.1132|
                  |L1.1108|
;;;275                    }
;;;276                    else
;;;277                    {
;;;278                        vSetCCR_PERICLKGATE_CLK_MLB_GATE(1U);
000454  e3a03103          MOV      r3,#0xc0000000
000458  e5933024          LDR      r3,[r3,#0x24]
00045c  e3c33901          BIC      r3,r3,#0x4000
000460  e2833901          ADD      r3,r3,#0x4000
000464  e3a04103          MOV      r4,#0xc0000000
000468  e5843024          STR      r3,[r4,#0x24]
                  |L1.1132|
;;;279                    }
;;;280                }
;;;281                break;
00046c  ea00007a          B        |L1.1628|
                  |L1.1136|
;;;282            case CCR_SDRAM:
000470  e320f000          NOP      
;;;283                {
;;;284                    /* Unlock CCR for writing */
;;;285                    vCCR_PDS_UNLOCK();
000474  e59f3ac4          LDR      r3,|L1.3904|
000478  e3a04103          MOV      r4,#0xc0000000
00047c  e5944000          LDR      r4,[r4,#0]
000480  e3a04103          MOV      r4,#0xc0000000
000484  e5843000          STR      r3,[r4,#0]
;;;286    
;;;287                    /* set value */
;;;288                    if (eEn == CCR_ENABLE)
000488  e3510001          CMP      r1,#1
00048c  1a000004          BNE      |L1.1188|
;;;289                    {
;;;290                        vSetCCR_PERICLKGATE_CLK_SDRAM_GATE(0U);
000490  e3a03103          MOV      r3,#0xc0000000
000494  e5933024          LDR      r3,[r3,#0x24]
000498  e3c33902          BIC      r3,r3,#0x8000
00049c  e5843024          STR      r3,[r4,#0x24]
0004a0  ea000005          B        |L1.1212|
                  |L1.1188|
;;;291                    }
;;;292                    else
;;;293                    {
;;;294                        vSetCCR_PERICLKGATE_CLK_SDRAM_GATE(1U);
0004a4  e3a03103          MOV      r3,#0xc0000000
0004a8  e5933024          LDR      r3,[r3,#0x24]
0004ac  e3c33902          BIC      r3,r3,#0x8000
0004b0  e2833902          ADD      r3,r3,#0x8000
0004b4  e3a04103          MOV      r4,#0xc0000000
0004b8  e5843024          STR      r3,[r4,#0x24]
                  |L1.1212|
;;;295                    }
;;;296                }
;;;297                break;
0004bc  ea000066          B        |L1.1628|
                  |L1.1216|
;;;298            case CCR_SMC:
0004c0  e320f000          NOP      
;;;299                {
;;;300                    /* Unlock CCR for writing */
;;;301                    vCCR_PDS_UNLOCK();
0004c4  e59f3a74          LDR      r3,|L1.3904|
0004c8  e3a04103          MOV      r4,#0xc0000000
0004cc  e5944000          LDR      r4,[r4,#0]
0004d0  e3a04103          MOV      r4,#0xc0000000
0004d4  e5843000          STR      r3,[r4,#0]
;;;302    
;;;303                    /* set value */
;;;304                    if (eEn == CCR_ENABLE)
0004d8  e3510001          CMP      r1,#1
0004dc  1a000004          BNE      |L1.1268|
;;;305                    {
;;;306                        vSetCCR_PERICLKGATE_CLK_SMC_GATE(0U);
0004e0  e3a03103          MOV      r3,#0xc0000000
0004e4  e5933024          LDR      r3,[r3,#0x24]
0004e8  e3c33801          BIC      r3,r3,#0x10000
0004ec  e5843024          STR      r3,[r4,#0x24]
0004f0  ea000005          B        |L1.1292|
                  |L1.1268|
;;;307                    }
;;;308                    else
;;;309                    {
;;;310                        vSetCCR_PERICLKGATE_CLK_SMC_GATE(1U);
0004f4  e3a03103          MOV      r3,#0xc0000000
0004f8  e5933024          LDR      r3,[r3,#0x24]
0004fc  e3c33801          BIC      r3,r3,#0x10000
000500  e2833801          ADD      r3,r3,#0x10000
000504  e3a04103          MOV      r4,#0xc0000000
000508  e5843024          STR      r3,[r4,#0x24]
                  |L1.1292|
;;;311                    }
;;;312                }
;;;313                break;
00050c  ea000052          B        |L1.1628|
                  |L1.1296|
;;;314            case CCR_I2S:
000510  e320f000          NOP      
;;;315                {
;;;316                    /* Unlock CCR for writing */
;;;317                    vCCR_PDS_UNLOCK();
000514  e59f3a24          LDR      r3,|L1.3904|
000518  e3a04103          MOV      r4,#0xc0000000
00051c  e5944000          LDR      r4,[r4,#0]
000520  e3a04103          MOV      r4,#0xc0000000
000524  e5843000          STR      r3,[r4,#0]
;;;318    
;;;319                    /* set value */
;;;320                    if (eEn == CCR_ENABLE)
000528  e3510001          CMP      r1,#1
00052c  1a000004          BNE      |L1.1348|
;;;321                    {
;;;322                        vSetCCR_PERICLKGATE_CLK_I2S_GATE(0U);
000530  e3a03103          MOV      r3,#0xc0000000
000534  e5933024          LDR      r3,[r3,#0x24]
000538  e3c33701          BIC      r3,r3,#0x40000
00053c  e5843024          STR      r3,[r4,#0x24]
000540  ea000005          B        |L1.1372|
                  |L1.1348|
;;;323                    }
;;;324                    else
;;;325                    {
;;;326                        vSetCCR_PERICLKGATE_CLK_I2S_GATE(1U);
000544  e3a03103          MOV      r3,#0xc0000000
000548  e5933024          LDR      r3,[r3,#0x24]
00054c  e3c33701          BIC      r3,r3,#0x40000
000550  e2833701          ADD      r3,r3,#0x40000
000554  e3a04103          MOV      r4,#0xc0000000
000558  e5843024          STR      r3,[r4,#0x24]
                  |L1.1372|
;;;327                    }
;;;328                }
;;;329                break;
00055c  ea00003e          B        |L1.1628|
                  |L1.1376|
;;;330            case CCR_HSPWM:
000560  e320f000          NOP      
;;;331                {
;;;332                    /* Unlock CCR for writing */
;;;333                    vCCR_PDS_UNLOCK();
000564  e59f39d4          LDR      r3,|L1.3904|
000568  e3a04103          MOV      r4,#0xc0000000
00056c  e5944000          LDR      r4,[r4,#0]
000570  e3a04103          MOV      r4,#0xc0000000
000574  e5843000          STR      r3,[r4,#0]
;;;334    
;;;335                    /* set value */
;;;336                    if (eEn == CCR_ENABLE)
000578  e3510001          CMP      r1,#1
00057c  1a000004          BNE      |L1.1428|
;;;337                    {
;;;338                        vSetCCR_PERICLKGATE_CLK_HSPWM_GATE(0U);
000580  e3a03103          MOV      r3,#0xc0000000
000584  e5933024          LDR      r3,[r3,#0x24]
000588  e3c33702          BIC      r3,r3,#0x80000
00058c  e5843024          STR      r3,[r4,#0x24]
000590  ea000005          B        |L1.1452|
                  |L1.1428|
;;;339                    }
;;;340                    else
;;;341                    {
;;;342                        vSetCCR_PERICLKGATE_CLK_HSPWM_GATE(1U);
000594  e3a03103          MOV      r3,#0xc0000000
000598  e5933024          LDR      r3,[r3,#0x24]
00059c  e3c33702          BIC      r3,r3,#0x80000
0005a0  e2833702          ADD      r3,r3,#0x80000
0005a4  e3a04103          MOV      r4,#0xc0000000
0005a8  e5843024          STR      r3,[r4,#0x24]
                  |L1.1452|
;;;343                    }
;;;344                }
;;;345                break;
0005ac  ea00002a          B        |L1.1628|
                  |L1.1456|
;;;346            case CCR_I2SM:
0005b0  e320f000          NOP      
;;;347                {
;;;348                    /* Unlock CCR for writing */
;;;349                    vCCR_PDS_UNLOCK();
0005b4  e59f3984          LDR      r3,|L1.3904|
0005b8  e3a04103          MOV      r4,#0xc0000000
0005bc  e5944000          LDR      r4,[r4,#0]
0005c0  e3a04103          MOV      r4,#0xc0000000
0005c4  e5843000          STR      r3,[r4,#0]
;;;350    
;;;351                    /* set value */
;;;352                    if (eEn == CCR_ENABLE)
0005c8  e3510001          CMP      r1,#1
0005cc  1a000004          BNE      |L1.1508|
;;;353                    {
;;;354                        vSetCCR_PERICLKGATE_CLK_I2SM_GATE(0U);
0005d0  e3a03103          MOV      r3,#0xc0000000
0005d4  e5933024          LDR      r3,[r3,#0x24]
0005d8  e3c33601          BIC      r3,r3,#0x100000
0005dc  e5843024          STR      r3,[r4,#0x24]
0005e0  ea000005          B        |L1.1532|
                  |L1.1508|
;;;355                    }
;;;356                    else
;;;357                    {
;;;358                        vSetCCR_PERICLKGATE_CLK_I2SM_GATE(1U);
0005e4  e3a03103          MOV      r3,#0xc0000000
0005e8  e5933024          LDR      r3,[r3,#0x24]
0005ec  e3c33601          BIC      r3,r3,#0x100000
0005f0  e2833601          ADD      r3,r3,#0x100000
0005f4  e3a04103          MOV      r4,#0xc0000000
0005f8  e5843024          STR      r3,[r4,#0x24]
                  |L1.1532|
;;;359                    }
;;;360                }
;;;361                break;
0005fc  ea000016          B        |L1.1628|
                  |L1.1536|
;;;362            case CCR_TSM:
000600  e320f000          NOP      
;;;363                {
;;;364                    /* Unlock CCR for writing */
;;;365                    vCCR_PDS_UNLOCK();
000604  e59f3934          LDR      r3,|L1.3904|
000608  e3a04103          MOV      r4,#0xc0000000
00060c  e5944000          LDR      r4,[r4,#0]
000610  e3a04103          MOV      r4,#0xc0000000
000614  e5843000          STR      r3,[r4,#0]
;;;366    
;;;367                    /* set value */
;;;368                    if (eEn == CCR_ENABLE)
000618  e3510001          CMP      r1,#1
00061c  1a000004          BNE      |L1.1588|
;;;369                    {
;;;370                        vSetCCR_PERICLKGATE_CLK_TSM_GATE(0U);
000620  e3a03103          MOV      r3,#0xc0000000
000624  e5933024          LDR      r3,[r3,#0x24]
000628  e3c33602          BIC      r3,r3,#0x200000
00062c  e5843024          STR      r3,[r4,#0x24]
000630  ea000005          B        |L1.1612|
                  |L1.1588|
;;;371                    }
;;;372                    else
;;;373                    {
;;;374                        vSetCCR_PERICLKGATE_CLK_TSM_GATE(1U);
000634  e3a03103          MOV      r3,#0xc0000000
000638  e5933024          LDR      r3,[r3,#0x24]
00063c  e3c33602          BIC      r3,r3,#0x200000
000640  e2833602          ADD      r3,r3,#0x200000
000644  e3a04103          MOV      r4,#0xc0000000
000648  e5843024          STR      r3,[r4,#0x24]
                  |L1.1612|
;;;375                    }
;;;376                }
;;;377                break;
00064c  ea000002          B        |L1.1628|
                  |L1.1616|
;;;378            default:
000650  e320f000          NOP      
;;;379                {
;;;380                    i32Res = C_FAILED;
000654  e3e00000          MVN      r0,#0
;;;381                }
;;;382                break;
000658  e320f000          NOP      
                  |L1.1628|
00065c  e320f000          NOP                            ;105
;;;383        }
;;;384    
;;;385        return i32Res;
;;;386    }
000660  e8bd8010          POP      {r4,pc}
;;;387    
                          ENDP

                  i32CCR_GetEnabledModuleClock PROC
;;;390    /****************************************************************************/
;;;391    int32_t i32CCR_GetEnabledModuleClock(ccr_cntrl_e eCntrl, ccr_enable_e * peEn)
000664  e1a02000          MOV      r2,r0
;;;392    {
;;;393        int32_t i32Res = C_SUCCESS;
000668  e3a00000          MOV      r0,#0
;;;394    
;;;395        /* default value is disabled */
;;;396        *peEn = CCR_DISABLE;
00066c  e3a03000          MOV      r3,#0
000670  e5c13000          STRB     r3,[r1,#0]
;;;397    
;;;398        switch (eCntrl)
000674  e3520012          CMP      r2,#0x12
000678  308ff102          ADDCC    pc,pc,r2,LSL #2
00067c  ea0000b3          B        |L1.2384|
000680  ea000010          B        |L1.1736|
000684  ea000018          B        |L1.1772|
000688  ea000020          B        |L1.1808|
00068c  ea000079          B        |L1.2168|
000690  ea00008a          B        |L1.2240|
000694  ea000053          B        |L1.2024|
000698  ea00005b          B        |L1.2060|
00069c  ea000024          B        |L1.1844|
0006a0  ea00002c          B        |L1.1880|
0006a4  ea000034          B        |L1.1916|
0006a8  ea00003c          B        |L1.1952|
0006ac  ea000044          B        |L1.1988|
0006b0  ea00005e          B        |L1.2096|
0006b4  ea000066          B        |L1.2132|
0006b8  ea000077          B        |L1.2204|
0006bc  ea000088          B        |L1.2276|
0006c0  ea000090          B        |L1.2312|
0006c4  ea000098          B        |L1.2348|
                  |L1.1736|
;;;399        {
;;;400            case CCR_QSPI_0:
0006c8  e320f000          NOP      
;;;401                {
;;;402                    if ( 0 < biGetCCR_PERICLKGATE_CLK_QSPI0_GATE())
0006cc  e3a03103          MOV      r3,#0xc0000000
0006d0  e5933024          LDR      r3,[r3,#0x24]
0006d4  e2033001          AND      r3,r3,#1
0006d8  e3530000          CMP      r3,#0
0006dc  da000001          BLE      |L1.1768|
;;;403                    {
;;;404                        *peEn = CCR_ENABLE;
0006e0  e3a03001          MOV      r3,#1
0006e4  e5c13000          STRB     r3,[r1,#0]
                  |L1.1768|
;;;405                    }
;;;406                }
;;;407                break;
0006e8  ea00009b          B        |L1.2396|
                  |L1.1772|
;;;408            case CCR_QSPI_1:
0006ec  e320f000          NOP      
;;;409                {
;;;410                    if ( 0 < biGetCCR_PERICLKGATE_CLK_QSPI1_GATE())
0006f0  e3a03103          MOV      r3,#0xc0000000
0006f4  e5933024          LDR      r3,[r3,#0x24]
0006f8  e7e030d3          UBFX     r3,r3,#1,#1
0006fc  e3530000          CMP      r3,#0
000700  da000001          BLE      |L1.1804|
;;;411                    {
;;;412                        *peEn = CCR_ENABLE;
000704  e3a03001          MOV      r3,#1
000708  e5c13000          STRB     r3,[r1,#0]
                  |L1.1804|
;;;413                    }
;;;414                }
;;;415                break;
00070c  ea000092          B        |L1.2396|
                  |L1.1808|
;;;416            case CCR_QSPI_INT:
000710  e320f000          NOP      
;;;417                {
;;;418                    if ( 0 < biGetCCR_PERICLKGATE_CLK_QSPI2_GATE())
000714  e3a03103          MOV      r3,#0xc0000000
000718  e5933024          LDR      r3,[r3,#0x24]
00071c  e7e03153          UBFX     r3,r3,#2,#1
000720  e3530000          CMP      r3,#0
000724  da000001          BLE      |L1.1840|
;;;419                    {
;;;420                        *peEn = CCR_ENABLE;
000728  e3a03001          MOV      r3,#1
00072c  e5c13000          STRB     r3,[r1,#0]
                  |L1.1840|
;;;421                    }
;;;422                }
;;;423                break;
000730  ea000089          B        |L1.2396|
                  |L1.1844|
;;;424            case CCR_DMA:
000734  e320f000          NOP      
;;;425                {
;;;426                    if ( 0 < biGetCCR_PERICLKGATE_CLK_DMA_GATE())
000738  e3a03103          MOV      r3,#0xc0000000
00073c  e5933024          LDR      r3,[r3,#0x24]
000740  e7e031d3          UBFX     r3,r3,#3,#1
000744  e3530000          CMP      r3,#0
000748  da000001          BLE      |L1.1876|
;;;427                    {
;;;428                        *peEn = CCR_ENABLE;
00074c  e3a03001          MOV      r3,#1
000750  e5c13000          STRB     r3,[r1,#0]
                  |L1.1876|
;;;429                    }
;;;430                }
;;;431                break;
000754  ea000080          B        |L1.2396|
                  |L1.1880|
;;;432            case CCR_PARFLASH:
000758  e320f000          NOP      
;;;433                {
;;;434                    if ( 0 < biGetCCR_PERICLKGATE_CLK_PARFL_GATE())
00075c  e3a03103          MOV      r3,#0xc0000000
000760  e5933024          LDR      r3,[r3,#0x24]
000764  e7e03253          UBFX     r3,r3,#4,#1
000768  e3530000          CMP      r3,#0
00076c  da000001          BLE      |L1.1912|
;;;435                    {
;;;436                        *peEn = CCR_ENABLE;
000770  e3a03001          MOV      r3,#1
000774  e5c13000          STRB     r3,[r1,#0]
                  |L1.1912|
;;;437                    }
;;;438                }
;;;439                break;
000778  ea000077          B        |L1.2396|
                  |L1.1916|
;;;440            case CCR_DAP:
00077c  e320f000          NOP      
;;;441                {
;;;442                    if ( 0 < biGetCCR_PERICLKGATE_CLK_DAP_GATE())
000780  e3a03103          MOV      r3,#0xc0000000
000784  e5933024          LDR      r3,[r3,#0x24]
000788  e7e032d3          UBFX     r3,r3,#5,#1
00078c  e3530000          CMP      r3,#0
000790  da000001          BLE      |L1.1948|
;;;443                    {
;;;444                        *peEn = CCR_ENABLE;
000794  e3a03001          MOV      r3,#1
000798  e5c13000          STRB     r3,[r1,#0]
                  |L1.1948|
;;;445                    }
;;;446                }
;;;447                break;
00079c  ea00006e          B        |L1.2396|
                  |L1.1952|
;;;448            case CCR_GA:
0007a0  e320f000          NOP      
;;;449                {
;;;450                    if ( 0 < biGetCCR_PERICLKGATE_CLK_GA_GATE())
0007a4  e3a03103          MOV      r3,#0xc0000000
0007a8  e5933024          LDR      r3,[r3,#0x24]
0007ac  e7e03353          UBFX     r3,r3,#6,#1
0007b0  e3530000          CMP      r3,#0
0007b4  da000001          BLE      |L1.1984|
;;;451                    {
;;;452                        *peEn = CCR_ENABLE;
0007b8  e3a03001          MOV      r3,#1
0007bc  e5c13000          STRB     r3,[r1,#0]
                  |L1.1984|
;;;453                    }
;;;454                }
;;;455                break;
0007c0  ea000065          B        |L1.2396|
                  |L1.1988|
;;;456            case CCR_PNG:
0007c4  e320f000          NOP      
;;;457                {
;;;458                    if ( 0 < biGetCCR_PERICLKGATE_CLK_PNG_GATE())
0007c8  e3a03103          MOV      r3,#0xc0000000
0007cc  e5933024          LDR      r3,[r3,#0x24]
0007d0  e7e03553          UBFX     r3,r3,#10,#1
0007d4  e3530000          CMP      r3,#0
0007d8  da000001          BLE      |L1.2020|
;;;459                    {
;;;460                        *peEn = CCR_ENABLE;
0007dc  e3a03001          MOV      r3,#1
0007e0  e5c13000          STRB     r3,[r1,#0]
                  |L1.2020|
;;;461                    }
;;;462                }
;;;463                break;
0007e4  ea00005c          B        |L1.2396|
                  |L1.2024|
;;;464            case CCR_GDC_0:
0007e8  e320f000          NOP      
;;;465                {
;;;466                    if ( 0 < biGetCCR_PERICLKGATE_CLK_GDC0_GATE())
0007ec  e3a03103          MOV      r3,#0xc0000000
0007f0  e5933024          LDR      r3,[r3,#0x24]
0007f4  e7e035d3          UBFX     r3,r3,#11,#1
0007f8  e3530000          CMP      r3,#0
0007fc  da000001          BLE      |L1.2056|
;;;467                    {
;;;468                        *peEn = CCR_ENABLE;
000800  e3a03001          MOV      r3,#1
000804  e5c13000          STRB     r3,[r1,#0]
                  |L1.2056|
;;;469                    }
;;;470                }
;;;471                break;
000808  ea000053          B        |L1.2396|
                  |L1.2060|
;;;472            case CCR_GDC_1:
00080c  e320f000          NOP      
;;;473                {
;;;474                    if ( 0 < biGetCCR_PERICLKGATE_CLK_GDC1_GATE())
000810  e3a03103          MOV      r3,#0xc0000000
000814  e5933024          LDR      r3,[r3,#0x24]
000818  e7e03653          UBFX     r3,r3,#12,#1
00081c  e3530000          CMP      r3,#0
000820  da000001          BLE      |L1.2092|
;;;475                    {
;;;476                        *peEn = CCR_ENABLE;
000824  e3a03001          MOV      r3,#1
000828  e5c13000          STRB     r3,[r1,#0]
                  |L1.2092|
;;;477                    }
;;;478                }
;;;479                break;
00082c  ea00004a          B        |L1.2396|
                  |L1.2096|
;;;480            case CCR_FG:
000830  e320f000          NOP      
;;;481                {
;;;482                    if ( 0 < biGetCCR_PERICLKGATE_CLK_FG_GATE())
000834  e3a03103          MOV      r3,#0xc0000000
000838  e5933024          LDR      r3,[r3,#0x24]
00083c  e7e036d3          UBFX     r3,r3,#13,#1
000840  e3530000          CMP      r3,#0
000844  da000001          BLE      |L1.2128|
;;;483                    {
;;;484                        *peEn = CCR_ENABLE;
000848  e3a03001          MOV      r3,#1
00084c  e5c13000          STRB     r3,[r1,#0]
                  |L1.2128|
;;;485                    }
;;;486                }
;;;487                break;
000850  ea000041          B        |L1.2396|
                  |L1.2132|
;;;488            case CCR_MLB:
000854  e320f000          NOP      
;;;489                {
;;;490                    if ( 0 < biGetCCR_PERICLKGATE_CLK_MLB_GATE())
000858  e3a03103          MOV      r3,#0xc0000000
00085c  e5933024          LDR      r3,[r3,#0x24]
000860  e7e03753          UBFX     r3,r3,#14,#1
000864  e3530000          CMP      r3,#0
000868  da000001          BLE      |L1.2164|
;;;491                    {
;;;492                        *peEn = CCR_ENABLE;
00086c  e3a03001          MOV      r3,#1
000870  e5c13000          STRB     r3,[r1,#0]
                  |L1.2164|
;;;493                    }
;;;494                }
;;;495                break;
000874  ea000038          B        |L1.2396|
                  |L1.2168|
;;;496            case CCR_SDRAM:
000878  e320f000          NOP      
;;;497                {
;;;498                    if ( 0 < biGetCCR_PERICLKGATE_CLK_SDRAM_GATE())
00087c  e3a03103          MOV      r3,#0xc0000000
000880  e5933024          LDR      r3,[r3,#0x24]
000884  e7e037d3          UBFX     r3,r3,#15,#1
000888  e3530000          CMP      r3,#0
00088c  da000001          BLE      |L1.2200|
;;;499                    {
;;;500                        *peEn = CCR_ENABLE;
000890  e3a03001          MOV      r3,#1
000894  e5c13000          STRB     r3,[r1,#0]
                  |L1.2200|
;;;501                    }
;;;502                }
;;;503                break;
000898  ea00002f          B        |L1.2396|
                  |L1.2204|
;;;504            case CCR_SMC:
00089c  e320f000          NOP      
;;;505                {
;;;506                    if ( 0 < biGetCCR_PERICLKGATE_CLK_SMC_GATE())
0008a0  e3a03103          MOV      r3,#0xc0000000
0008a4  e5933024          LDR      r3,[r3,#0x24]
0008a8  e7e03853          UBFX     r3,r3,#16,#1
0008ac  e3530000          CMP      r3,#0
0008b0  da000001          BLE      |L1.2236|
;;;507                    {
;;;508                        *peEn = CCR_ENABLE;
0008b4  e3a03001          MOV      r3,#1
0008b8  e5c13000          STRB     r3,[r1,#0]
                  |L1.2236|
;;;509                    }
;;;510                }
;;;511                break;
0008bc  ea000026          B        |L1.2396|
                  |L1.2240|
;;;512            case CCR_I2S:
0008c0  e320f000          NOP      
;;;513                {
;;;514                    if ( 0 < biGetCCR_PERICLKGATE_CLK_I2S_GATE())
0008c4  e3a03103          MOV      r3,#0xc0000000
0008c8  e5933024          LDR      r3,[r3,#0x24]
0008cc  e7e03953          UBFX     r3,r3,#18,#1
0008d0  e3530000          CMP      r3,#0
0008d4  da000001          BLE      |L1.2272|
;;;515                    {
;;;516                        *peEn = CCR_ENABLE;
0008d8  e3a03001          MOV      r3,#1
0008dc  e5c13000          STRB     r3,[r1,#0]
                  |L1.2272|
;;;517                    }
;;;518                }
;;;519                break;
0008e0  ea00001d          B        |L1.2396|
                  |L1.2276|
;;;520            case CCR_HSPWM:
0008e4  e320f000          NOP      
;;;521                {
;;;522                    if ( 0 < biGetCCR_PERICLKGATE_CLK_HSPWM_GATE())
0008e8  e3a03103          MOV      r3,#0xc0000000
0008ec  e5933024          LDR      r3,[r3,#0x24]
0008f0  e7e039d3          UBFX     r3,r3,#19,#1
0008f4  e3530000          CMP      r3,#0
0008f8  da000001          BLE      |L1.2308|
;;;523                    {
;;;524                        *peEn = CCR_ENABLE;
0008fc  e3a03001          MOV      r3,#1
000900  e5c13000          STRB     r3,[r1,#0]
                  |L1.2308|
;;;525                    }
;;;526                }
;;;527                break;
000904  ea000014          B        |L1.2396|
                  |L1.2312|
;;;528            case CCR_I2SM:
000908  e320f000          NOP      
;;;529                {
;;;530                    if ( 0 < biGetCCR_PERICLKGATE_CLK_I2SM_GATE())
00090c  e3a03103          MOV      r3,#0xc0000000
000910  e5933024          LDR      r3,[r3,#0x24]
000914  e7e03a53          UBFX     r3,r3,#20,#1
000918  e3530000          CMP      r3,#0
00091c  da000001          BLE      |L1.2344|
;;;531                    {
;;;532                        *peEn = CCR_ENABLE;
000920  e3a03001          MOV      r3,#1
000924  e5c13000          STRB     r3,[r1,#0]
                  |L1.2344|
;;;533                    }
;;;534                }
;;;535                break;
000928  ea00000b          B        |L1.2396|
                  |L1.2348|
;;;536            case CCR_TSM:
00092c  e320f000          NOP      
;;;537                {
;;;538                    if ( 0 < biGetCCR_PERICLKGATE_CLK_TSM_GATE())
000930  e3a03103          MOV      r3,#0xc0000000
000934  e5933024          LDR      r3,[r3,#0x24]
000938  e7e03ad3          UBFX     r3,r3,#21,#1
00093c  e3530000          CMP      r3,#0
000940  da000001          BLE      |L1.2380|
;;;539                    {
;;;540                        *peEn = CCR_ENABLE;
000944  e3a03001          MOV      r3,#1
000948  e5c13000          STRB     r3,[r1,#0]
                  |L1.2380|
;;;541                    }
;;;542                }
;;;543                break;
00094c  ea000002          B        |L1.2396|
                  |L1.2384|
;;;544            default:
000950  e320f000          NOP      
;;;545                {
;;;546                    i32Res = C_FAILED;
000954  e3e00000          MVN      r0,#0
;;;547                }
;;;548                break;
000958  e320f000          NOP      
                  |L1.2396|
00095c  e320f000          NOP                            ;407
;;;549        }
;;;550    
;;;551        return i32Res;
;;;552    }
000960  e12fff1e          BX       lr
;;;553    
                          ENDP

                  i32CCR_SetClockFreq PROC
;;;554    /****************************************************************************/
;;;555    int32_t i32CCR_SetClockFreq(ccr_cntrl_e eCntrl, ccr_clk_freq_e eFreq, ccr_modulated_clk_e eModulated)
000964  e92d4030          PUSH     {r4,r5,lr}
;;;556    {
000968  e1a03000          MOV      r3,r0
;;;557        int32_t i32Res = C_SUCCESS;
00096c  e3a00000          MOV      r0,#0
;;;558    
;;;559        switch(eCntrl)
000970  e3530004          CMP      r3,#4
000974  0a00012c          BEQ      |L1.3628|
000978  ca000008          BGT      |L1.2464|
00097c  e3530000          CMP      r3,#0
000980  0a00000f          BEQ      |L1.2500|
000984  e3530001          CMP      r3,#1
000988  0a00002b          BEQ      |L1.2620|
00098c  e3530002          CMP      r3,#2
000990  0a000047          BEQ      |L1.2740|
000994  e3530003          CMP      r3,#3
000998  1a0001b6          BNE      |L1.4216|
00099c  ea000062          B        |L1.2860|
                  |L1.2464|
0009a0  e3530005          CMP      r3,#5
0009a4  0a00007e          BEQ      |L1.2980|
0009a8  e3530006          CMP      r3,#6
0009ac  0a0000cd          BEQ      |L1.3304|
0009b0  e3530008          CMP      r3,#8
0009b4  0a000162          BEQ      |L1.3908|
0009b8  e3530012          CMP      r3,#0x12
0009bc  1a0001ad          BNE      |L1.4216|
0009c0  ea00019c          B        |L1.4152|
                  |L1.2500|
;;;560        {
;;;561            case CCR_QSPI_0:
0009c4  e320f000          NOP      
;;;562                {
;;;563                    if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVM2_QSPI0())
0009c8  e3a04103          MOV      r4,#0xc0000000
0009cc  e5944008          LDR      r4,[r4,#8]
0009d0  e204401f          AND      r4,r4,#0x1f
0009d4  e1540001          CMP      r4,r1
0009d8  0a000016          BEQ      |L1.2616|
;;;564                    {
;;;565                        /* Unlock CCR for writing */
;;;566                        vCCR_PDS_UNLOCK();
0009dc  e59f455c          LDR      r4,|L1.3904|
0009e0  e3a05103          MOV      r5,#0xc0000000
0009e4  e5955000          LDR      r5,[r5,#0]
0009e8  e3a05103          MOV      r5,#0xc0000000
0009ec  e5854000          STR      r4,[r5,#0]
;;;567                        vClrCCR_CLKDIVACK_RELOADACK_MQSPI0();
0009f0  e3a04103          MOV      r4,#0xc0000000
0009f4  e1d441bc          LDRH     r4,[r4,#0x1c]
0009f8  e3c44004          BIC      r4,r4,#4
0009fc  e1c541bc          STRH     r4,[r5,#0x1c]
;;;568    
;;;569                        /* Set Quad-SPI0 clock frequency */
;;;570                        vCCR_PDS_UNLOCK();
000a00  e59f4538          LDR      r4,|L1.3904|
000a04  e5955000          LDR      r5,[r5,#0]
000a08  e3a05103          MOV      r5,#0xc0000000
000a0c  e5854000          STR      r4,[r5,#0]
;;;571                        vSetCCR_CLKDIVM2_QSPI0(eFreq);
000a10  e3a04103          MOV      r4,#0xc0000000
000a14  e5944008          LDR      r4,[r4,#8]
000a18  e7c44011          BFI      r4,r1,#0,#5
000a1c  e5854008          STR      r4,[r5,#8]
;;;572    
;;;573                        /* wait for stable clock */
;;;574                        while( 0U == biGetCCR_CLKDIVACK_RELOADACK_MQSPI0())
000a20  e320f000          NOP      
                  |L1.2596|
000a24  e3a04103          MOV      r4,#0xc0000000
000a28  e1d441bc          LDRH     r4,[r4,#0x1c]
000a2c  e7e04154          UBFX     r4,r4,#2,#1
000a30  e3540000          CMP      r4,#0
000a34  0afffffa          BEQ      |L1.2596|
                  |L1.2616|
;;;575                        {
;;;576                            ;
;;;577                        }
;;;578                    }
;;;579                }
;;;580                break;
000a38  ea000191          B        |L1.4228|
                  |L1.2620|
;;;581            case CCR_QSPI_1:
000a3c  e320f000          NOP      
;;;582                {
;;;583                    if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVM2_QSPI1())
000a40  e3a04103          MOV      r4,#0xc0000000
000a44  e5944008          LDR      r4,[r4,#8]
000a48  e7e44454          UBFX     r4,r4,#8,#5
000a4c  e1540001          CMP      r4,r1
000a50  0a000016          BEQ      |L1.2736|
;;;584                    {
;;;585                        /* Unlock CCR for writing */
;;;586                        vCCR_PDS_UNLOCK();
000a54  e59f44e4          LDR      r4,|L1.3904|
000a58  e3a05103          MOV      r5,#0xc0000000
000a5c  e5955000          LDR      r5,[r5,#0]
000a60  e3a05103          MOV      r5,#0xc0000000
000a64  e5854000          STR      r4,[r5,#0]
;;;587                        vClrCCR_CLKDIVACK_RELOADACK_MQSPI1();
000a68  e3a04103          MOV      r4,#0xc0000000
000a6c  e1d441bc          LDRH     r4,[r4,#0x1c]
000a70  e3c44008          BIC      r4,r4,#8
000a74  e1c541bc          STRH     r4,[r5,#0x1c]
;;;588    
;;;589                        /* Set Quad-SPI1 clock frequency */
;;;590                        vCCR_PDS_UNLOCK();
000a78  e59f44c0          LDR      r4,|L1.3904|
000a7c  e5955000          LDR      r5,[r5,#0]
000a80  e3a05103          MOV      r5,#0xc0000000
000a84  e5854000          STR      r4,[r5,#0]
;;;591                        vSetCCR_CLKDIVM2_QSPI1(eFreq);
000a88  e3a04103          MOV      r4,#0xc0000000
000a8c  e5944008          LDR      r4,[r4,#8]
000a90  e7cc4411          BFI      r4,r1,#8,#5
000a94  e5854008          STR      r4,[r5,#8]
;;;592    
;;;593                        /* wait for stable clock */
;;;594                        while(0U == biGetCCR_CLKDIVACK_RELOADACK_MQSPI1())
000a98  e320f000          NOP      
                  |L1.2716|
000a9c  e3a04103          MOV      r4,#0xc0000000
000aa0  e1d441bc          LDRH     r4,[r4,#0x1c]
000aa4  e7e041d4          UBFX     r4,r4,#3,#1
000aa8  e3540000          CMP      r4,#0
000aac  0afffffa          BEQ      |L1.2716|
                  |L1.2736|
;;;595                        {
;;;596                            ;
;;;597                        }
;;;598                    }
;;;599                }
;;;600                break;
000ab0  ea000173          B        |L1.4228|
                  |L1.2740|
;;;601            case CCR_QSPI_INT:
000ab4  e320f000          NOP      
;;;602                {
;;;603                    if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVM2_QSPI2())
000ab8  e3a04103          MOV      r4,#0xc0000000
000abc  e5944008          LDR      r4,[r4,#8]
000ac0  e7e44854          UBFX     r4,r4,#16,#5
000ac4  e1540001          CMP      r4,r1
000ac8  0a000016          BEQ      |L1.2856|
;;;604                    {
;;;605                        /* Unlock CCR for writing */
;;;606                        vCCR_PDS_UNLOCK();
000acc  e59f446c          LDR      r4,|L1.3904|
000ad0  e3a05103          MOV      r5,#0xc0000000
000ad4  e5955000          LDR      r5,[r5,#0]
000ad8  e3a05103          MOV      r5,#0xc0000000
000adc  e5854000          STR      r4,[r5,#0]
;;;607                        vClrCCR_CLKDIVACK_RELOADACK_MQSPI2();
000ae0  e3a04103          MOV      r4,#0xc0000000
000ae4  e1d441bc          LDRH     r4,[r4,#0x1c]
000ae8  e3c44010          BIC      r4,r4,#0x10
000aec  e1c541bc          STRH     r4,[r5,#0x1c]
;;;608    
;;;609                        /* Set Quad-SPI internal clock frequency */
;;;610                        vCCR_PDS_UNLOCK();
000af0  e59f4448          LDR      r4,|L1.3904|
000af4  e5955000          LDR      r5,[r5,#0]
000af8  e3a05103          MOV      r5,#0xc0000000
000afc  e5854000          STR      r4,[r5,#0]
;;;611                        vSetCCR_CLKDIVM2_QSPI2(eFreq);
000b00  e3a04103          MOV      r4,#0xc0000000
000b04  e5944008          LDR      r4,[r4,#8]
000b08  e7d44811          BFI      r4,r1,#16,#5
000b0c  e5854008          STR      r4,[r5,#8]
;;;612    
;;;613                        /* wait for stable clock */
;;;614                        while(0U == biGetCCR_CLKDIVACK_RELOADACK_MQSPI2())
000b10  e320f000          NOP      
                  |L1.2836|
000b14  e3a04103          MOV      r4,#0xc0000000
000b18  e1d441bc          LDRH     r4,[r4,#0x1c]
000b1c  e7e04254          UBFX     r4,r4,#4,#1
000b20  e3540000          CMP      r4,#0
000b24  0afffffa          BEQ      |L1.2836|
                  |L1.2856|
;;;615                        {
;;;616                            ;
;;;617                        }
;;;618                    }
;;;619                }
;;;620                break;
000b28  ea000155          B        |L1.4228|
                  |L1.2860|
;;;621            case CCR_SDRAM:
000b2c  e320f000          NOP      
;;;622                {
;;;623                    if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVM2_SDRAMIF())
000b30  e3a04103          MOV      r4,#0xc0000000
000b34  e5944008          LDR      r4,[r4,#8]
000b38  e7e34c54          UBFX     r4,r4,#24,#4
000b3c  e1540001          CMP      r4,r1
000b40  0a000016          BEQ      |L1.2976|
;;;624                    {
;;;625                        /* Unlock CCR for writing */
;;;626                        vCCR_PDS_UNLOCK();
000b44  e59f43f4          LDR      r4,|L1.3904|
000b48  e3a05103          MOV      r5,#0xc0000000
000b4c  e5955000          LDR      r5,[r5,#0]
000b50  e3a05103          MOV      r5,#0xc0000000
000b54  e5854000          STR      r4,[r5,#0]
;;;627                        vClrCCR_CLKDIVACK_RELOADACK_MSDRAM();
000b58  e3a04103          MOV      r4,#0xc0000000
000b5c  e1d441bc          LDRH     r4,[r4,#0x1c]
000b60  e3c44020          BIC      r4,r4,#0x20
000b64  e1c541bc          STRH     r4,[r5,#0x1c]
;;;628    
;;;629                        /* Set SDRAM clock frequency */
;;;630                        vCCR_PDS_UNLOCK();
000b68  e59f43d0          LDR      r4,|L1.3904|
000b6c  e5955000          LDR      r5,[r5,#0]
000b70  e3a05103          MOV      r5,#0xc0000000
000b74  e5854000          STR      r4,[r5,#0]
;;;631                        vSetCCR_CLKDIVM2_SDRAMIF(eFreq);
000b78  e3a04103          MOV      r4,#0xc0000000
000b7c  e5944008          LDR      r4,[r4,#8]
000b80  e7db4c11          BFI      r4,r1,#24,#4
000b84  e5854008          STR      r4,[r5,#8]
;;;632    
;;;633                        /* wait for stable clock */
;;;634                        while(0U == biGetCCR_CLKDIVACK_RELOADACK_MSDRAM())
000b88  e320f000          NOP      
                  |L1.2956|
000b8c  e3a04103          MOV      r4,#0xc0000000
000b90  e1d441bc          LDRH     r4,[r4,#0x1c]
000b94  e7e042d4          UBFX     r4,r4,#5,#1
000b98  e3540000          CMP      r4,#0
000b9c  0afffffa          BEQ      |L1.2956|
                  |L1.2976|
;;;635                        {
;;;636                            ;
;;;637                        }
;;;638                    }
;;;639                }
;;;640                break;
000ba0  ea000137          B        |L1.4228|
                  |L1.2980|
;;;641            case CCR_GDC_0:
000ba4  e320f000          NOP      
;;;642                {
;;;643                    if (eModulated == CCR_MODULATED)
000ba8  e3520000          CMP      r2,#0
000bac  1a000026          BNE      |L1.3148|
;;;644                    {
;;;645                        if (eFreq != biGetCCR_CLKDIVM1_GDC0())
000bb0  e3a04103          MOV      r4,#0xc0000000
000bb4  e5944004          LDR      r4,[r4,#4]
000bb8  e7df461f          BFC      r4,#12,#20
000bbc  e1540001          CMP      r4,r1
000bc0  0a000047          BEQ      |L1.3300|
;;;646                        {
;;;647                            /* Unlock CCR for writing */
;;;648                            vCCR_PDS_UNLOCK();
000bc4  e59f4374          LDR      r4,|L1.3904|
000bc8  e3a05103          MOV      r5,#0xc0000000
000bcc  e5955000          LDR      r5,[r5,#0]
000bd0  e3a05103          MOV      r5,#0xc0000000
000bd4  e5854000          STR      r4,[r5,#0]
;;;649                            vClrCCR_CLKDIVACK_RELOADACK_MGDC0();
000bd8  e3a04103          MOV      r4,#0xc0000000
000bdc  e1d441bc          LDRH     r4,[r4,#0x1c]
000be0  e3c44001          BIC      r4,r4,#1
000be4  e1c541bc          STRH     r4,[r5,#0x1c]
;;;650    
;;;651                            /* Set GDC0 clock frequency */
;;;652                            vCCR_PDS_UNLOCK();
000be8  e59f4350          LDR      r4,|L1.3904|
000bec  e5955000          LDR      r5,[r5,#0]
000bf0  e3a05103          MOV      r5,#0xc0000000
000bf4  e5854000          STR      r4,[r5,#0]
;;;653                            vSetCCR_CLKDIVM1_GDC0(eFreq);
000bf8  e3a04103          MOV      r4,#0xc0000000
000bfc  e5944004          LDR      r4,[r4,#4]
000c00  e7cb4011          BFI      r4,r1,#0,#12
000c04  e5854004          STR      r4,[r5,#4]
;;;654    
;;;655                            /* wait for stable clock */
;;;656                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_MGDC0())
000c08  e320f000          NOP      
                  |L1.3084|
000c0c  e3a04103          MOV      r4,#0xc0000000
000c10  e1d441bc          LDRH     r4,[r4,#0x1c]
000c14  e2044001          AND      r4,r4,#1
000c18  e3540000          CMP      r4,#0
000c1c  0afffffa          BEQ      |L1.3084|
;;;657                            {
;;;658                                ;
;;;659                            }
;;;660    
;;;661                            /* switch to modulated clock */
;;;662                            vCCR_PDS_UNLOCK();
000c20  e59f4318          LDR      r4,|L1.3904|
000c24  e3a05103          MOV      r5,#0xc0000000
000c28  e5955000          LDR      r5,[r5,#0]
000c2c  e3a05103          MOV      r5,#0xc0000000
000c30  e5854000          STR      r4,[r5,#0]
;;;663                            vSetCCR_CLKSEL_CLK_DOT0_SEL(0x01);
000c34  e3a04103          MOV      r4,#0xc0000000
000c38  e1d442b0          LDRH     r4,[r4,#0x20]
000c3c  e3c44003          BIC      r4,r4,#3
000c40  e2844001          ADD      r4,r4,#1
000c44  e1c542b0          STRH     r4,[r5,#0x20]
000c48  ea000025          B        |L1.3300|
                  |L1.3148|
;;;664                        }
;;;665                    }
;;;666                    else
;;;667                    {
;;;668                        if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVNM1_GDC0())
000c4c  e3a04103          MOV      r4,#0xc0000000
000c50  e5944010          LDR      r4,[r4,#0x10]
000c54  e20440ff          AND      r4,r4,#0xff
000c58  e1540001          CMP      r4,r1
000c5c  0a000020          BEQ      |L1.3300|
;;;669                        {
;;;670                            /* Unlock CCR for writing */
;;;671                            vCCR_PDS_UNLOCK();
000c60  e59f42d8          LDR      r4,|L1.3904|
000c64  e3a05103          MOV      r5,#0xc0000000
000c68  e5955000          LDR      r5,[r5,#0]
000c6c  e3a05103          MOV      r5,#0xc0000000
000c70  e5854000          STR      r4,[r5,#0]
;;;672                            vClrCCR_CLKDIVACK_RELOADACK_NMGDC0();
000c74  e3a04103          MOV      r4,#0xc0000000
000c78  e1d441bc          LDRH     r4,[r4,#0x1c]
000c7c  e3c44c01          BIC      r4,r4,#0x100
000c80  e1c541bc          STRH     r4,[r5,#0x1c]
;;;673    
;;;674                            /* Set GDC0 clock frequency */
;;;675                            vCCR_PDS_UNLOCK();
000c84  e59f42b4          LDR      r4,|L1.3904|
000c88  e5955000          LDR      r5,[r5,#0]
000c8c  e3a05103          MOV      r5,#0xc0000000
000c90  e5854000          STR      r4,[r5,#0]
;;;676                            vSetCCR_CLKDIVNM1_GDC0(eFreq);
000c94  e3a04103          MOV      r4,#0xc0000000
000c98  e5944010          LDR      r4,[r4,#0x10]
000c9c  e7cb4011          BFI      r4,r1,#0,#12
000ca0  e5854010          STR      r4,[r5,#0x10]
;;;677    
;;;678                            /* wait for stable clock */
;;;679                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_NMGDC0())
000ca4  e320f000          NOP      
                  |L1.3240|
000ca8  e3a04103          MOV      r4,#0xc0000000
000cac  e1d441bc          LDRH     r4,[r4,#0x1c]
000cb0  e7e04454          UBFX     r4,r4,#8,#1
000cb4  e3540000          CMP      r4,#0
000cb8  0afffffa          BEQ      |L1.3240|
;;;680                            {
;;;681                                ;
;;;682                            }
;;;683    
;;;684                            /* switch to non modulated clock */
;;;685                            vCCR_PDS_UNLOCK();
000cbc  e59f427c          LDR      r4,|L1.3904|
000cc0  e3a05103          MOV      r5,#0xc0000000
000cc4  e5955000          LDR      r5,[r5,#0]
000cc8  e3a05103          MOV      r5,#0xc0000000
000ccc  e5854000          STR      r4,[r5,#0]
;;;686                            vSetCCR_CLKSEL_CLK_DOT0_SEL(0x02);
000cd0  e3a04103          MOV      r4,#0xc0000000
000cd4  e1d442b0          LDRH     r4,[r4,#0x20]
000cd8  e3c44003          BIC      r4,r4,#3
000cdc  e2844002          ADD      r4,r4,#2
000ce0  e1c542b0          STRH     r4,[r5,#0x20]
                  |L1.3300|
;;;687                        }
;;;688                    }
;;;689                }
;;;690                break;
000ce4  ea0000e6          B        |L1.4228|
                  |L1.3304|
;;;691            case CCR_GDC_1:
000ce8  e320f000          NOP      
;;;692                {
;;;693                    if (eModulated == CCR_MODULATED)
000cec  e3520000          CMP      r2,#0
000cf0  1a000026          BNE      |L1.3472|
;;;694                    {
;;;695                        if (eFreq != biGetCCR_CLKDIVM1_GDC1())
000cf4  e3a04103          MOV      r4,#0xc0000000
000cf8  e5944004          LDR      r4,[r4,#4]
000cfc  e7eb4854          UBFX     r4,r4,#16,#12
000d00  e1540001          CMP      r4,r1
000d04  0a000047          BEQ      |L1.3624|
;;;696                        {
;;;697                            /* Unlock CCR for writing */
;;;698                            vCCR_PDS_UNLOCK();
000d08  e59f4230          LDR      r4,|L1.3904|
000d0c  e3a05103          MOV      r5,#0xc0000000
000d10  e5955000          LDR      r5,[r5,#0]
000d14  e3a05103          MOV      r5,#0xc0000000
000d18  e5854000          STR      r4,[r5,#0]
;;;699                            vClrCCR_CLKDIVACK_RELOADACK_MGDC1();
000d1c  e3a04103          MOV      r4,#0xc0000000
000d20  e1d441bc          LDRH     r4,[r4,#0x1c]
000d24  e3c44002          BIC      r4,r4,#2
000d28  e1c541bc          STRH     r4,[r5,#0x1c]
;;;700    
;;;701                            /* Set GDC1 clock frequency */
;;;702                            vCCR_PDS_UNLOCK();
000d2c  e59f420c          LDR      r4,|L1.3904|
000d30  e5955000          LDR      r5,[r5,#0]
000d34  e3a05103          MOV      r5,#0xc0000000
000d38  e5854000          STR      r4,[r5,#0]
;;;703                            vSetCCR_CLKDIVM1_GDC1(eFreq);
000d3c  e3a04103          MOV      r4,#0xc0000000
000d40  e5944004          LDR      r4,[r4,#4]
000d44  e7db4811          BFI      r4,r1,#16,#12
000d48  e5854004          STR      r4,[r5,#4]
;;;704    
;;;705                            /* wait for stable clock */
;;;706                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_MGDC1())
000d4c  e320f000          NOP      
                  |L1.3408|
000d50  e3a04103          MOV      r4,#0xc0000000
000d54  e1d441bc          LDRH     r4,[r4,#0x1c]
000d58  e7e040d4          UBFX     r4,r4,#1,#1
000d5c  e3540000          CMP      r4,#0
000d60  0afffffa          BEQ      |L1.3408|
;;;707                            {
;;;708                                ;
;;;709                            }
;;;710    
;;;711                            /* switch to modulated clock */
;;;712                            vCCR_PDS_UNLOCK();
000d64  e59f41d4          LDR      r4,|L1.3904|
000d68  e3a05103          MOV      r5,#0xc0000000
000d6c  e5955000          LDR      r5,[r5,#0]
000d70  e3a05103          MOV      r5,#0xc0000000
000d74  e5854000          STR      r4,[r5,#0]
;;;713                            vSetCCR_CLKSEL_CLK_DOT1_SEL(0x01);
000d78  e3a04103          MOV      r4,#0xc0000000
000d7c  e1d442b0          LDRH     r4,[r4,#0x20]
000d80  e3c4401c          BIC      r4,r4,#0x1c
000d84  e2844004          ADD      r4,r4,#4
000d88  e1c542b0          STRH     r4,[r5,#0x20]
000d8c  ea000025          B        |L1.3624|
                  |L1.3472|
;;;714                        }
;;;715                    }
;;;716                    else
;;;717                    {
;;;718                        if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVNM1_GDC1())
000d90  e3a04103          MOV      r4,#0xc0000000
000d94  e5944010          LDR      r4,[r4,#0x10]
000d98  e7e74854          UBFX     r4,r4,#16,#8
000d9c  e1540001          CMP      r4,r1
000da0  0a000020          BEQ      |L1.3624|
;;;719                        {
;;;720                            /* Unlock CCR for writing */
;;;721                            vCCR_PDS_UNLOCK();
000da4  e59f4194          LDR      r4,|L1.3904|
000da8  e3a05103          MOV      r5,#0xc0000000
000dac  e5955000          LDR      r5,[r5,#0]
000db0  e3a05103          MOV      r5,#0xc0000000
000db4  e5854000          STR      r4,[r5,#0]
;;;722                            vClrCCR_CLKDIVACK_RELOADACK_NMGDC1();
000db8  e3a04103          MOV      r4,#0xc0000000
000dbc  e1d441bc          LDRH     r4,[r4,#0x1c]
000dc0  e3c44c02          BIC      r4,r4,#0x200
000dc4  e1c541bc          STRH     r4,[r5,#0x1c]
;;;723    
;;;724                            /* Set GDC1 clock frequency */
;;;725                            vCCR_PDS_UNLOCK();
000dc8  e59f4170          LDR      r4,|L1.3904|
000dcc  e5955000          LDR      r5,[r5,#0]
000dd0  e3a05103          MOV      r5,#0xc0000000
000dd4  e5854000          STR      r4,[r5,#0]
;;;726                            vSetCCR_CLKDIVNM1_GDC1(eFreq);
000dd8  e3a04103          MOV      r4,#0xc0000000
000ddc  e5944010          LDR      r4,[r4,#0x10]
000de0  e7db4811          BFI      r4,r1,#16,#12
000de4  e5854010          STR      r4,[r5,#0x10]
;;;727    
;;;728                            /* wait for stable clock */
;;;729                            while( 0U == biGetCCR_CLKDIVACK_RELOADACK_NMGDC1())
000de8  e320f000          NOP      
                  |L1.3564|
000dec  e3a04103          MOV      r4,#0xc0000000
000df0  e1d441bc          LDRH     r4,[r4,#0x1c]
000df4  e7e044d4          UBFX     r4,r4,#9,#1
000df8  e3540000          CMP      r4,#0
000dfc  0afffffa          BEQ      |L1.3564|
;;;730                            {
;;;731                                ;
;;;732                            }
;;;733    
;;;734                            /* switch to non modulated clock */
;;;735                            vCCR_PDS_UNLOCK();
000e00  e59f4138          LDR      r4,|L1.3904|
000e04  e3a05103          MOV      r5,#0xc0000000
000e08  e5955000          LDR      r5,[r5,#0]
000e0c  e3a05103          MOV      r5,#0xc0000000
000e10  e5854000          STR      r4,[r5,#0]
;;;736                            vSetCCR_CLKSEL_CLK_DOT1_SEL(0x02);
000e14  e3a04103          MOV      r4,#0xc0000000
000e18  e1d442b0          LDRH     r4,[r4,#0x20]
000e1c  e3c4401c          BIC      r4,r4,#0x1c
000e20  e2844008          ADD      r4,r4,#8
000e24  e1c542b0          STRH     r4,[r5,#0x20]
                  |L1.3624|
;;;737                        }
;;;738                    }
;;;739                }
;;;740                break;
000e28  ea000095          B        |L1.4228|
                  |L1.3628|
;;;741            case CCR_I2S:
000e2c  e320f000          NOP      
;;;742                {
;;;743                    if (eModulated == CCR_MODULATED)
000e30  e3520000          CMP      r2,#0
000e34  1a00001c          BNE      |L1.3756|
;;;744                    {
;;;745                        if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVM3_I2S())
000e38  e3a04103          MOV      r4,#0xc0000000
000e3c  e594400c          LDR      r4,[r4,#0xc]
000e40  e20440ff          AND      r4,r4,#0xff
000e44  e1540001          CMP      r4,r1
000e48  0a000033          BEQ      |L1.3868|
;;;746                        {
;;;747                            /* Unlock CCR for writing */
;;;748                            vCCR_PDS_UNLOCK();
000e4c  e59f40ec          LDR      r4,|L1.3904|
000e50  e3a05103          MOV      r5,#0xc0000000
000e54  e5955000          LDR      r5,[r5,#0]
000e58  e3a05103          MOV      r5,#0xc0000000
000e5c  e5854000          STR      r4,[r5,#0]
;;;749                            vClrCCR_CLKDIVACK_RELOADACK_MI2S();
000e60  e3a04103          MOV      r4,#0xc0000000
000e64  e1d441bc          LDRH     r4,[r4,#0x1c]
000e68  e3c44040          BIC      r4,r4,#0x40
000e6c  e1c541bc          STRH     r4,[r5,#0x1c]
;;;750    
;;;751                            /* Set I2S clock frequency */
;;;752                            vCCR_PDS_UNLOCK();
000e70  e59f40c8          LDR      r4,|L1.3904|
000e74  e5955000          LDR      r5,[r5,#0]
000e78  e3a05103          MOV      r5,#0xc0000000
000e7c  e5854000          STR      r4,[r5,#0]
;;;753                            vSetCCR_CLKDIVM3_I2S(eFreq);
000e80  e3a04103          MOV      r4,#0xc0000000
000e84  e594400c          LDR      r4,[r4,#0xc]
000e88  e7c74011          BFI      r4,r1,#0,#8
000e8c  e585400c          STR      r4,[r5,#0xc]
;;;754    
;;;755                            /* wait for stable clock */
;;;756                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_MI2S())
000e90  e320f000          NOP      
                  |L1.3732|
000e94  e3a04103          MOV      r4,#0xc0000000
000e98  e1d441bc          LDRH     r4,[r4,#0x1c]
000e9c  e7e04354          UBFX     r4,r4,#6,#1
000ea0  e3540000          CMP      r4,#0
000ea4  0afffffa          BEQ      |L1.3732|
000ea8  ea00001b          B        |L1.3868|
                  |L1.3756|
;;;757                            {
;;;758                                ;
;;;759                            }
;;;760                        }
;;;761                    }
;;;762                    else
;;;763                    {
;;;764                        if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVNM3_I2S())
000eac  e3a04103          MOV      r4,#0xc0000000
000eb0  e5944018          LDR      r4,[r4,#0x18]
000eb4  e20440ff          AND      r4,r4,#0xff
000eb8  e1540001          CMP      r4,r1
000ebc  0a000016          BEQ      |L1.3868|
;;;765                        {
;;;766                            /* Unlock CCR for writing */
;;;767                            vCCR_PDS_UNLOCK();
000ec0  e59f4078          LDR      r4,|L1.3904|
000ec4  e3a05103          MOV      r5,#0xc0000000
000ec8  e5955000          LDR      r5,[r5,#0]
000ecc  e3a05103          MOV      r5,#0xc0000000
000ed0  e5854000          STR      r4,[r5,#0]
;;;768                            vClrCCR_CLKDIVACK_RELOADACK_NMI2S();
000ed4  e3a04103          MOV      r4,#0xc0000000
000ed8  e1d441bc          LDRH     r4,[r4,#0x1c]
000edc  e3c44901          BIC      r4,r4,#0x4000
000ee0  e1c541bc          STRH     r4,[r5,#0x1c]
;;;769    
;;;770                            /* Set I2S clock frequency */
;;;771                            vCCR_PDS_UNLOCK();
000ee4  e59f4054          LDR      r4,|L1.3904|
000ee8  e5955000          LDR      r5,[r5,#0]
000eec  e3a05103          MOV      r5,#0xc0000000
000ef0  e5854000          STR      r4,[r5,#0]
;;;772                            vSetCCR_CLKDIVNM3_I2S(eFreq);
000ef4  e3a04103          MOV      r4,#0xc0000000
000ef8  e5944018          LDR      r4,[r4,#0x18]
000efc  e7c74011          BFI      r4,r1,#0,#8
000f00  e5854018          STR      r4,[r5,#0x18]
;;;773    
;;;774                            /* wait for stable clock */
;;;775                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_NMI2S())
000f04  e320f000          NOP      
                  |L1.3848|
000f08  e3a04103          MOV      r4,#0xc0000000
000f0c  e1d441bc          LDRH     r4,[r4,#0x1c]
000f10  e7e04754          UBFX     r4,r4,#14,#1
000f14  e3540000          CMP      r4,#0
000f18  0afffffa          BEQ      |L1.3848|
                  |L1.3868|
;;;776                            {
;;;777                                ;
;;;778                            }
;;;779                        }
;;;780                    }
;;;781                }
;;;782                break;
000f1c  ea000058          B        |L1.4228|
                  |L1.3872|
                          DCD      au8LLDD_CCR_C_REVISION
                  |L1.3876|
                          DCD      au8LLDD_CCR_C_TAG
                  |L1.3880|
                          DCD      au8LLDD_CCR_H_REVISION
                  |L1.3884|
                          DCD      au8LLDD_CCR_H_TAG
                  |L1.3888|
                          DCD      au8LLDD_CCR_PDH_IO_H_REVISION
                  |L1.3892|
                          DCD      au8LLDD_CCR_PDH_IO_H_TAG
                  |L1.3896|
                          DCD      au8LLDD_CCR_PDS_IO_H_REVISION
                  |L1.3900|
                          DCD      au8LLDD_CCR_PDS_IO_H_TAG
                  |L1.3904|
                          DCD      0xa5c0f17b
                  |L1.3908|
;;;783            case CCR_PARFLASH:
000f44  e320f000          NOP      
;;;784                {
;;;785                    if (eModulated == CCR_MODULATED)
000f48  e3520000          CMP      r2,#0
000f4c  1a00001c          BNE      |L1.4036|
;;;786                    {
;;;787                        if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVM3_PL353())
000f50  e3a04103          MOV      r4,#0xc0000000
000f54  e594400c          LDR      r4,[r4,#0xc]
000f58  e7e74854          UBFX     r4,r4,#16,#8
000f5c  e1540001          CMP      r4,r1
000f60  0a000033          BEQ      |L1.4148|
;;;788                        {
;;;789                            /* Unlock CCR for writing */
;;;790                            vCCR_PDS_UNLOCK();
000f64  e51f402c          LDR      r4,|L1.3904|
000f68  e3a05103          MOV      r5,#0xc0000000
000f6c  e5955000          LDR      r5,[r5,#0]
000f70  e3a05103          MOV      r5,#0xc0000000
000f74  e5854000          STR      r4,[r5,#0]
;;;791                            vClrCCR_CLKDIVACK_RELOADACK_MPL353();
000f78  e3a04103          MOV      r4,#0xc0000000
000f7c  e1d441bc          LDRH     r4,[r4,#0x1c]
000f80  e3c44080          BIC      r4,r4,#0x80
000f84  e1c541bc          STRH     r4,[r5,#0x1c]
;;;792    
;;;793                            /* Set PL353 clock frequency */
;;;794                            vCCR_PDS_UNLOCK();
000f88  e51f4050          LDR      r4,|L1.3904|
000f8c  e5955000          LDR      r5,[r5,#0]
000f90  e3a05103          MOV      r5,#0xc0000000
000f94  e5854000          STR      r4,[r5,#0]
;;;795                            vSetCCR_CLKDIVM3_PL353(eFreq);
000f98  e3a04103          MOV      r4,#0xc0000000
000f9c  e594400c          LDR      r4,[r4,#0xc]
000fa0  e7db4811          BFI      r4,r1,#16,#12
000fa4  e585400c          STR      r4,[r5,#0xc]
;;;796    
;;;797                            /* wait for stable clock */
;;;798                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_MPL353())
000fa8  e320f000          NOP      
                  |L1.4012|
000fac  e3a04103          MOV      r4,#0xc0000000
000fb0  e1d441bc          LDRH     r4,[r4,#0x1c]
000fb4  e7e043d4          UBFX     r4,r4,#7,#1
000fb8  e3540000          CMP      r4,#0
000fbc  0afffffa          BEQ      |L1.4012|
000fc0  ea00001b          B        |L1.4148|
                  |L1.4036|
;;;799                            {
;;;800                                ;
;;;801                            }
;;;802                        }
;;;803                    }
;;;804                    else
;;;805                    {
;;;806                        if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVNM3_PL353())
000fc4  e3a04103          MOV      r4,#0xc0000000
000fc8  e5944018          LDR      r4,[r4,#0x18]
000fcc  e7e74854          UBFX     r4,r4,#16,#8
000fd0  e1540001          CMP      r4,r1
000fd4  0a000016          BEQ      |L1.4148|
;;;807                        {
;;;808                            /* Unlock CCR for writing */
;;;809                            vCCR_PDS_UNLOCK();
000fd8  e51f40a0          LDR      r4,|L1.3904|
000fdc  e3a05103          MOV      r5,#0xc0000000
000fe0  e5955000          LDR      r5,[r5,#0]
000fe4  e3a05103          MOV      r5,#0xc0000000
000fe8  e5854000          STR      r4,[r5,#0]
;;;810                            vClrCCR_CLKDIVACK_RELOADACK_NMPL353();
000fec  e3a04103          MOV      r4,#0xc0000000
000ff0  e1d441bc          LDRH     r4,[r4,#0x1c]
000ff4  e3c44902          BIC      r4,r4,#0x8000
000ff8  e1c541bc          STRH     r4,[r5,#0x1c]
;;;811    
;;;812                            /* Set PL353 clock frequency */
;;;813                            vCCR_PDS_UNLOCK();
000ffc  e51f40c4          LDR      r4,|L1.3904|
001000  e5955000          LDR      r5,[r5,#0]
001004  e3a05103          MOV      r5,#0xc0000000
001008  e5854000          STR      r4,[r5,#0]
;;;814                            vSetCCR_CLKDIVNM3_PL353(eFreq);
00100c  e3a04103          MOV      r4,#0xc0000000
001010  e5944018          LDR      r4,[r4,#0x18]
001014  e7db4811          BFI      r4,r1,#16,#12
001018  e5854018          STR      r4,[r5,#0x18]
;;;815    
;;;816                            /* wait for stable clock */
;;;817                            while(0U == biGetCCR_CLKDIVACK_RELOADACK_NMPL353())
00101c  e320f000          NOP      
                  |L1.4128|
001020  e3a04103          MOV      r4,#0xc0000000
001024  e1d441bc          LDRH     r4,[r4,#0x1c]
001028  e1a047a4          LSR      r4,r4,#15
00102c  e3540000          CMP      r4,#0
001030  0afffffa          BEQ      |L1.4128|
                  |L1.4148|
;;;818                            {
;;;819                                ;
;;;820                            }
;;;821    
;;;822                        }
;;;823                    }
;;;824                }
;;;825                break;
001034  ea000012          B        |L1.4228|
                  |L1.4152|
;;;826            case CCR_TRACE:
001038  e320f000          NOP      
;;;827                {
;;;828                    if (eFreq != (ccr_clk_freq_e)biGetCCR_CLKDIVNM2_TRACE())
00103c  e3a04103          MOV      r4,#0xc0000000
001040  e5d44014          LDRB     r4,[r4,#0x14]
001044  e204401f          AND      r4,r4,#0x1f
001048  e1540001          CMP      r4,r1
00104c  0a000008          BEQ      |L1.4212|
;;;829                    {
;;;830                        /* Unlock CCR for writing */
;;;831                        /* Set Quad-SPI input clock frequency */
;;;832                        vCCR_PDS_UNLOCK();
001050  e51f4118          LDR      r4,|L1.3904|
001054  e3a05103          MOV      r5,#0xc0000000
001058  e5955000          LDR      r5,[r5,#0]
00105c  e3a05103          MOV      r5,#0xc0000000
001060  e5854000          STR      r4,[r5,#0]
;;;833                        vSetCCR_CLKDIVNM2_TRACE((uint8_t)eFreq);
001064  e3a04103          MOV      r4,#0xc0000000
001068  e5d44014          LDRB     r4,[r4,#0x14]
00106c  e7c44011          BFI      r4,r1,#0,#5
001070  e5c54014          STRB     r4,[r5,#0x14]
                  |L1.4212|
;;;834    
;;;835                        /* wait for stable clock */
;;;836    /*                    while(0==biGetCCR_CLKDIVACK_RELOADACK_MSDRAM()){}; */
;;;837                    }
;;;838                }
;;;839                break;
001074  ea000002          B        |L1.4228|
                  |L1.4216|
;;;840            default:
001078  e320f000          NOP      
;;;841                {
;;;842                    i32Res = C_FAILED;
00107c  e3e00000          MVN      r0,#0
;;;843                }
;;;844            break;
001080  e320f000          NOP      
                  |L1.4228|
001084  e320f000          NOP                            ;580
;;;845        }
;;;846    
;;;847        return i32Res;
;;;848    }
001088  e8bd8030          POP      {r4,r5,pc}
;;;849    
                          ENDP

                  i32CCR_SelectClockType PROC
;;;851    /****************************************************************************/
;;;852    int32_t i32CCR_SelectClockType(ccr_cntrl_e eCntrl, ccr_clock_type_e eClockType)
00108c  e92d4010          PUSH     {r4,lr}
;;;853    {
001090  e1a02000          MOV      r2,r0
;;;854        int32_t i32Res = C_SUCCESS;
001094  e3a00000          MOV      r0,#0
;;;855    
;;;856        switch(eCntrl)
001098  e3520004          CMP      r2,#4
00109c  0a000081          BEQ      |L1.4776|
0010a0  e3520005          CMP      r2,#5
0010a4  0a000004          BEQ      |L1.4284|
0010a8  e3520006          CMP      r2,#6
0010ac  0a000033          BEQ      |L1.4480|
0010b0  e3520013          CMP      r2,#0x13
0010b4  1a0000ce          BNE      |L1.5108|
0010b8  ea0000ab          B        |L1.4972|
                  |L1.4284|
;;;857        {
;;;858            case CCR_GDC_0:
0010bc  e320f000          NOP      
;;;859                {
;;;860                    switch(eClockType)
0010c0  e3510000          CMP      r1,#0
0010c4  0a000004          BEQ      |L1.4316|
0010c8  e3510002          CMP      r1,#2
0010cc  0a00000e          BEQ      |L1.4364|
0010d0  e3510004          CMP      r1,#4
0010d4  1a000024          BNE      |L1.4460|
0010d8  ea000017          B        |L1.4412|
                  |L1.4316|
;;;861                    {
;;;862                        case CCR_MODULATED_GDC0:
0010dc  e320f000          NOP      
;;;863                            {
;;;864                                vCCR_PDS_UNLOCK();
0010e0  e51f31a8          LDR      r3,|L1.3904|
0010e4  e3a04103          MOV      r4,#0xc0000000
0010e8  e5944000          LDR      r4,[r4,#0]
0010ec  e3a04103          MOV      r4,#0xc0000000
0010f0  e5843000          STR      r3,[r4,#0]
;;;865                                vSetCCR_CLKSEL_CLK_DOT0_SEL(1U);
0010f4  e3a03103          MOV      r3,#0xc0000000
0010f8  e1d332b0          LDRH     r3,[r3,#0x20]
0010fc  e3c33003          BIC      r3,r3,#3
001100  e2833001          ADD      r3,r3,#1
001104  e1c432b0          STRH     r3,[r4,#0x20]
;;;866                            }
;;;867                            break;
001108  ea00001a          B        |L1.4472|
                  |L1.4364|
;;;868                        case CCR_NON_MODULATED_GDC0:
00110c  e320f000          NOP      
;;;869                            {
;;;870                                vCCR_PDS_UNLOCK();
001110  e51f31d8          LDR      r3,|L1.3904|
001114  e3a04103          MOV      r4,#0xc0000000
001118  e5944000          LDR      r4,[r4,#0]
00111c  e3a04103          MOV      r4,#0xc0000000
001120  e5843000          STR      r3,[r4,#0]
;;;871                                vSetCCR_CLKSEL_CLK_DOT0_SEL(2);
001124  e3a03103          MOV      r3,#0xc0000000
001128  e1d332b0          LDRH     r3,[r3,#0x20]
00112c  e3c33003          BIC      r3,r3,#3
001130  e2833002          ADD      r3,r3,#2
001134  e1c432b0          STRH     r3,[r4,#0x20]
;;;872                            }
;;;873                            break;
001138  ea00000e          B        |L1.4472|
                  |L1.4412|
;;;874                        case CCR_DOTCLKIN:
00113c  e320f000          NOP      
;;;875                            {
;;;876                                vCCR_PDS_UNLOCK();
001140  e51f3208          LDR      r3,|L1.3904|
001144  e3a04103          MOV      r4,#0xc0000000
001148  e5944000          LDR      r4,[r4,#0]
00114c  e3a04103          MOV      r4,#0xc0000000
001150  e5843000          STR      r3,[r4,#0]
;;;877                                vSetCCR_CLKSEL_CLK_DOT0_SEL(3);
001154  e3a03103          MOV      r3,#0xc0000000
001158  e1d332b0          LDRH     r3,[r3,#0x20]
00115c  e3c33003          BIC      r3,r3,#3
001160  e2833003          ADD      r3,r3,#3
001164  e1c432b0          STRH     r3,[r4,#0x20]
;;;878                            }
;;;879                            break;
001168  ea000002          B        |L1.4472|
                  |L1.4460|
;;;880                        default:
00116c  e320f000          NOP      
;;;881                            {
;;;882                                i32Res = C_FAILED;
001170  e3e00000          MVN      r0,#0
;;;883                            }
;;;884                break;
001174  e320f000          NOP      
                  |L1.4472|
001178  e320f000          NOP                            ;867
;;;885                    }
;;;886                }
;;;887                break;
00117c  ea00009f          B        |L1.5120|
                  |L1.4480|
;;;888            case CCR_GDC_1:
001180  e320f000          NOP      
;;;889                {
;;;890                    switch(eClockType)
001184  e3510005          CMP      r1,#5
001188  308ff101          ADDCC    pc,pc,r1,LSL #2
00118c  ea000040          B        |L1.4756|
001190  ea000003          B        |L1.4516|
001194  ea00000e          B        |L1.4564|
001198  ea000019          B        |L1.4612|
00119c  ea000024          B        |L1.4660|
0011a0  ea00002f          B        |L1.4708|
                  |L1.4516|
;;;891                    {
;;;892                        case CCR_MODULATED_GDC0:
0011a4  e320f000          NOP      
;;;893                            {
;;;894                                vCCR_PDS_UNLOCK();
0011a8  e51f3270          LDR      r3,|L1.3904|
0011ac  e3a04103          MOV      r4,#0xc0000000
0011b0  e5944000          LDR      r4,[r4,#0]
0011b4  e3a04103          MOV      r4,#0xc0000000
0011b8  e5843000          STR      r3,[r4,#0]
;;;895                                vSetCCR_CLKSEL_CLK_DOT1_SEL(1U);
0011bc  e3a03103          MOV      r3,#0xc0000000
0011c0  e1d332b0          LDRH     r3,[r3,#0x20]
0011c4  e3c3301c          BIC      r3,r3,#0x1c
0011c8  e2833004          ADD      r3,r3,#4
0011cc  e1c432b0          STRH     r3,[r4,#0x20]
;;;896                            }
;;;897                            break;
0011d0  ea000032          B        |L1.4768|
                  |L1.4564|
;;;898                        case CCR_MODULATED_GDC1:
0011d4  e320f000          NOP      
;;;899                            {
;;;900                                vCCR_PDS_UNLOCK();
0011d8  e51f32a0          LDR      r3,|L1.3904|
0011dc  e3a04103          MOV      r4,#0xc0000000
0011e0  e5944000          LDR      r4,[r4,#0]
0011e4  e3a04103          MOV      r4,#0xc0000000
0011e8  e5843000          STR      r3,[r4,#0]
;;;901                                vSetCCR_CLKSEL_CLK_DOT1_SEL(2);
0011ec  e3a03103          MOV      r3,#0xc0000000
0011f0  e1d332b0          LDRH     r3,[r3,#0x20]
0011f4  e3c3301c          BIC      r3,r3,#0x1c
0011f8  e2833008          ADD      r3,r3,#8
0011fc  e1c432b0          STRH     r3,[r4,#0x20]
;;;902                            }
;;;903                            break;
001200  ea000026          B        |L1.4768|
                  |L1.4612|
;;;904                        case CCR_NON_MODULATED_GDC0:
001204  e320f000          NOP      
;;;905                            {
;;;906                                vCCR_PDS_UNLOCK();
001208  e51f32d0          LDR      r3,|L1.3904|
00120c  e3a04103          MOV      r4,#0xc0000000
001210  e5944000          LDR      r4,[r4,#0]
001214  e3a04103          MOV      r4,#0xc0000000
001218  e5843000          STR      r3,[r4,#0]
;;;907                                vSetCCR_CLKSEL_CLK_DOT1_SEL(3);
00121c  e3a03103          MOV      r3,#0xc0000000
001220  e1d332b0          LDRH     r3,[r3,#0x20]
001224  e3c3301c          BIC      r3,r3,#0x1c
001228  e283300c          ADD      r3,r3,#0xc
00122c  e1c432b0          STRH     r3,[r4,#0x20]
;;;908                            }
;;;909                            break;
001230  ea00001a          B        |L1.4768|
                  |L1.4660|
;;;910                        case CCR_NON_MODULATED_GDC1:
001234  e320f000          NOP      
;;;911                            {
;;;912                                vCCR_PDS_UNLOCK();
001238  e51f3300          LDR      r3,|L1.3904|
00123c  e3a04103          MOV      r4,#0xc0000000
001240  e5944000          LDR      r4,[r4,#0]
001244  e3a04103          MOV      r4,#0xc0000000
001248  e5843000          STR      r3,[r4,#0]
;;;913                                vSetCCR_CLKSEL_CLK_DOT1_SEL(4);
00124c  e3a03103          MOV      r3,#0xc0000000
001250  e1d332b0          LDRH     r3,[r3,#0x20]
001254  e3c3301c          BIC      r3,r3,#0x1c
001258  e2833010          ADD      r3,r3,#0x10
00125c  e1c432b0          STRH     r3,[r4,#0x20]
;;;914                            }
;;;915                            break;
001260  ea00000e          B        |L1.4768|
                  |L1.4708|
;;;916                        case CCR_DOTCLKIN:
001264  e320f000          NOP      
;;;917                            {
;;;918                                vCCR_PDS_UNLOCK();
001268  e51f3330          LDR      r3,|L1.3904|
00126c  e3a04103          MOV      r4,#0xc0000000
001270  e5944000          LDR      r4,[r4,#0]
001274  e3a04103          MOV      r4,#0xc0000000
001278  e5843000          STR      r3,[r4,#0]
;;;919                                vSetCCR_CLKSEL_CLK_DOT1_SEL(5);
00127c  e3a03103          MOV      r3,#0xc0000000
001280  e1d332b0          LDRH     r3,[r3,#0x20]
001284  e3c3301c          BIC      r3,r3,#0x1c
001288  e2833014          ADD      r3,r3,#0x14
00128c  e1c432b0          STRH     r3,[r4,#0x20]
;;;920                            }
;;;921                            break;
001290  ea000002          B        |L1.4768|
                  |L1.4756|
;;;922                        default:
001294  e320f000          NOP      
;;;923                            {
;;;924                                i32Res = C_FAILED;
001298  e3e00000          MVN      r0,#0
;;;925                            }
;;;926                break;
00129c  e320f000          NOP      
                  |L1.4768|
0012a0  e320f000          NOP                            ;897
;;;927                    }
;;;928                }
;;;929                break;
0012a4  ea000055          B        |L1.5120|
                  |L1.4776|
;;;930            case CCR_I2S:
0012a8  e320f000          NOP      
;;;931                {
;;;932                    switch(eClockType)
0012ac  e3510005          CMP      r1,#5
0012b0  0a000004          BEQ      |L1.4808|
0012b4  e3510006          CMP      r1,#6
0012b8  0a00000e          BEQ      |L1.4856|
0012bc  e3510007          CMP      r1,#7
0012c0  1a000024          BNE      |L1.4952|
0012c4  ea000017          B        |L1.4904|
                  |L1.4808|
;;;933                    {
;;;934                        case CCR_MODULATED_I2S:
0012c8  e320f000          NOP      
;;;935                            {
;;;936                                vCCR_PDS_UNLOCK();
0012cc  e51f3394          LDR      r3,|L1.3904|
0012d0  e3a04103          MOV      r4,#0xc0000000
0012d4  e5944000          LDR      r4,[r4,#0]
0012d8  e3a04103          MOV      r4,#0xc0000000
0012dc  e5843000          STR      r3,[r4,#0]
;;;937                                vSetCCR_CLKSEL_CLK_I2S_SEL(1U);
0012e0  e3a03103          MOV      r3,#0xc0000000
0012e4  e1d332b0          LDRH     r3,[r3,#0x20]
0012e8  e3c33060          BIC      r3,r3,#0x60
0012ec  e2833020          ADD      r3,r3,#0x20
0012f0  e1c432b0          STRH     r3,[r4,#0x20]
;;;938                            }
;;;939                            break;
0012f4  ea00001a          B        |L1.4964|
                  |L1.4856|
;;;940                        case CCR_NON_MODULATED_I2S:
0012f8  e320f000          NOP      
;;;941                            {
;;;942                                vCCR_PDS_UNLOCK();
0012fc  e51f33c4          LDR      r3,|L1.3904|
001300  e3a04103          MOV      r4,#0xc0000000
001304  e5944000          LDR      r4,[r4,#0]
001308  e3a04103          MOV      r4,#0xc0000000
00130c  e5843000          STR      r3,[r4,#0]
;;;943                                vSetCCR_CLKSEL_CLK_I2S_SEL(2);
001310  e3a03103          MOV      r3,#0xc0000000
001314  e1d332b0          LDRH     r3,[r3,#0x20]
001318  e3c33060          BIC      r3,r3,#0x60
00131c  e2833040          ADD      r3,r3,#0x40
001320  e1c432b0          STRH     r3,[r4,#0x20]
;;;944                            }
;;;945                            break;
001324  ea00000e          B        |L1.4964|
                  |L1.4904|
;;;946                        case CCR_I2SMCLKIN:
001328  e320f000          NOP      
;;;947                            {
;;;948                                vCCR_PDS_UNLOCK();
00132c  e51f33f4          LDR      r3,|L1.3904|
001330  e3a04103          MOV      r4,#0xc0000000
001334  e5944000          LDR      r4,[r4,#0]
001338  e3a04103          MOV      r4,#0xc0000000
00133c  e5843000          STR      r3,[r4,#0]
;;;949                                vSetCCR_CLKSEL_CLK_I2S_SEL(3);
001340  e3a03103          MOV      r3,#0xc0000000
001344  e1d332b0          LDRH     r3,[r3,#0x20]
001348  e3c33060          BIC      r3,r3,#0x60
00134c  e2833060          ADD      r3,r3,#0x60
001350  e1c432b0          STRH     r3,[r4,#0x20]
;;;950                            }
;;;951                            break;
001354  ea000002          B        |L1.4964|
                  |L1.4952|
;;;952                        default:
001358  e320f000          NOP      
;;;953                            {
;;;954                                i32Res = C_FAILED;
00135c  e3e00000          MVN      r0,#0
;;;955                            }
;;;956                break;
001360  e320f000          NOP      
                  |L1.4964|
001364  e320f000          NOP                            ;939
;;;957                    }
;;;958                }
;;;959                break;
001368  ea000024          B        |L1.5120|
                  |L1.4972|
;;;960            case CCR_320MHz:
00136c  e320f000          NOP      
;;;961                {
;;;962                    switch(eClockType)
001370  e3510008          CMP      r1,#8
001374  0a000002          BEQ      |L1.4996|
001378  e3510009          CMP      r1,#9
00137c  1a000017          BNE      |L1.5088|
001380  ea00000a          B        |L1.5040|
                  |L1.4996|
;;;963                    {
;;;964                        case CCR_MODULATED_320MHZ:
001384  e320f000          NOP      
;;;965                            {
;;;966                                vCCR_PDS_UNLOCK();
001388  e51f3450          LDR      r3,|L1.3904|
00138c  e3a04103          MOV      r4,#0xc0000000
001390  e5944000          LDR      r4,[r4,#0]
001394  e3a04103          MOV      r4,#0xc0000000
001398  e5843000          STR      r3,[r4,#0]
;;;967                                vSetCCR_CLKSEL_CLK_300_SEL(0U);
00139c  e3a03103          MOV      r3,#0xc0000000
0013a0  e1d332b0          LDRH     r3,[r3,#0x20]
0013a4  e3c33b01          BIC      r3,r3,#0x400
0013a8  e1c432b0          STRH     r3,[r4,#0x20]
;;;968                            }
;;;969                            break;
0013ac  ea00000e          B        |L1.5100|
                  |L1.5040|
;;;970                        case CCR_NON_MODULATED_320MHZ:
0013b0  e320f000          NOP      
;;;971                            {
;;;972                                vCCR_PDS_UNLOCK();
0013b4  e51f347c          LDR      r3,|L1.3904|
0013b8  e3a04103          MOV      r4,#0xc0000000
0013bc  e5944000          LDR      r4,[r4,#0]
0013c0  e3a04103          MOV      r4,#0xc0000000
0013c4  e5843000          STR      r3,[r4,#0]
;;;973                                vSetCCR_CLKSEL_CLK_300_SEL(1U);
0013c8  e3a03103          MOV      r3,#0xc0000000
0013cc  e1d332b0          LDRH     r3,[r3,#0x20]
0013d0  e3c33b01          BIC      r3,r3,#0x400
0013d4  e2833b01          ADD      r3,r3,#0x400
0013d8  e1c432b0          STRH     r3,[r4,#0x20]
;;;974                            }
;;;975                            break;
0013dc  ea000002          B        |L1.5100|
                  |L1.5088|
;;;976                        default:
0013e0  e320f000          NOP      
;;;977                            {
;;;978                                i32Res = C_FAILED;
0013e4  e3e00000          MVN      r0,#0
;;;979                            }
;;;980                break;
0013e8  e320f000          NOP      
                  |L1.5100|
0013ec  e320f000          NOP                            ;969
;;;981                    }
;;;982                }
;;;983                break;
0013f0  ea000002          B        |L1.5120|
                  |L1.5108|
;;;984            default:
0013f4  e320f000          NOP      
;;;985                {
;;;986                    i32Res = C_FAILED;
0013f8  e3e00000          MVN      r0,#0
;;;987                }
;;;988            break;
0013fc  e320f000          NOP      
                  |L1.5120|
001400  e320f000          NOP                            ;887
;;;989        }
;;;990    
;;;991        return i32Res;
;;;992    }
001404  e8bd8010          POP      {r4,pc}
;;;993    
                          ENDP

                  vCCR_SetPllClockStabilizationCompareValue PROC
;;;995    /****************************************************************************/
;;;996    void vCCR_SetPllClockStabilizationCompareValue(uint8_t u8Value)
001408  e51f14d0          LDR      r1,|L1.3904|
;;;997    {
;;;998        vCCR_PDS_UNLOCK();
00140c  e3a02103          MOV      r2,#0xc0000000
001410  e5922000          LDR      r2,[r2,#0]
001414  e3a02103          MOV      r2,#0xc0000000
001418  e5821000          STR      r1,[r2,#0]
;;;999        vSetCCR_SBCR_PLLSTBC(u8Value);
00141c  e3a01103          MOV      r1,#0xc0000000
001420  e5d11028          LDRB     r1,[r1,#0x28]
001424  e7c41010          BFI      r1,r0,#0,#5
001428  e5c21028          STRB     r1,[r2,#0x28]
;;;1000   }
00142c  e12fff1e          BX       lr
;;;1001   
                          ENDP

                  eCCR_ReadClockStability PROC
;;;1003   /****************************************************************************/
;;;1004   ccr_clock_stability_e eCCR_ReadClockStability(ccr_clocks_e eClk)
001430  e1a01000          MOV      r1,r0
;;;1005   {
;;;1006       ccr_clock_stability_e eStability;
;;;1007   
;;;1008       switch (eClk)
001434  e3510005          CMP      r1,#5
001438  308ff101          ADDCC    pc,pc,r1,LSL #2
00143c  ea000036          B        |L1.5404|
001440  ea000003          B        |L1.5204|
001444  ea00000c          B        |L1.5244|
001448  ea000015          B        |L1.5284|
00144c  ea00001e          B        |L1.5324|
001450  ea000027          B        |L1.5364|
                  |L1.5204|
;;;1009       {
;;;1010           case CCR_OSC10M:
001454  e320f000          NOP      
;;;1011               {
;;;1012                   if (biGetCCR_SBSR_OSC10MRDY() == 0)
001458  e3a02103          MOV      r2,#0xc0000000
00145c  e5d2202c          LDRB     r2,[r2,#0x2c]
001460  e2022001          AND      r2,r2,#1
001464  e3520000          CMP      r2,#0
001468  1a000001          BNE      |L1.5236|
;;;1013                   {
;;;1014                       eStability = CCR_CLOCK_NOT_STABLE;
00146c  e3a00000          MOV      r0,#0
001470  ea000000          B        |L1.5240|
                  |L1.5236|
;;;1015                   }
;;;1016                   else
;;;1017                   {
;;;1018                       eStability = CCR_CLOCK_STABLE;
001474  e3a00001          MOV      r0,#1
                  |L1.5240|
;;;1019                   }
;;;1020               }
;;;1021               break;
001478  ea00002a          B        |L1.5416|
                  |L1.5244|
;;;1022           case CCR_OSC32K:
00147c  e320f000          NOP      
;;;1023               {
;;;1024                   if (biGetCCR_SBSR_OSC32KRDY() == 0)
001480  e3a02103          MOV      r2,#0xc0000000
001484  e5d2202c          LDRB     r2,[r2,#0x2c]
001488  e7e020d2          UBFX     r2,r2,#1,#1
00148c  e3520000          CMP      r2,#0
001490  1a000001          BNE      |L1.5276|
;;;1025                   {
;;;1026                       eStability = CCR_CLOCK_NOT_STABLE;
001494  e3a00000          MOV      r0,#0
001498  ea000000          B        |L1.5280|
                  |L1.5276|
;;;1027                   }
;;;1028                   else
;;;1029                   {
;;;1030                       eStability = CCR_CLOCK_STABLE;
00149c  e3a00001          MOV      r0,#1
                  |L1.5280|
;;;1031                   }
;;;1032               }
;;;1033               break;
0014a0  ea000020          B        |L1.5416|
                  |L1.5284|
;;;1034           case CCR_RC100K:
0014a4  e320f000          NOP      
;;;1035               {
;;;1036                   if (biGetCCR_SBSR_RC100KRDY() == 0)
0014a8  e3a02103          MOV      r2,#0xc0000000
0014ac  e5d2202c          LDRB     r2,[r2,#0x2c]
0014b0  e7e02152          UBFX     r2,r2,#2,#1
0014b4  e3520000          CMP      r2,#0
0014b8  1a000001          BNE      |L1.5316|
;;;1037                   {
;;;1038                       eStability = CCR_CLOCK_NOT_STABLE;
0014bc  e3a00000          MOV      r0,#0
0014c0  ea000000          B        |L1.5320|
                  |L1.5316|
;;;1039                   }
;;;1040                   else
;;;1041                   {
;;;1042                       eStability = CCR_CLOCK_STABLE;
0014c4  e3a00001          MOV      r0,#1
                  |L1.5320|
;;;1043                   }
;;;1044               }
;;;1045               break;
0014c8  ea000016          B        |L1.5416|
                  |L1.5324|
;;;1046           case CCR_MODULATED_PLL:
0014cc  e320f000          NOP      
;;;1047               {
;;;1048                   if (biGetCCR_SBSR_MPLLRDY() == 0)
0014d0  e3a02103          MOV      r2,#0xc0000000
0014d4  e5d2202c          LDRB     r2,[r2,#0x2c]
0014d8  e7e021d2          UBFX     r2,r2,#3,#1
0014dc  e3520000          CMP      r2,#0
0014e0  1a000001          BNE      |L1.5356|
;;;1049                   {
;;;1050                       eStability = CCR_CLOCK_NOT_STABLE;
0014e4  e3a00000          MOV      r0,#0
0014e8  ea000000          B        |L1.5360|
                  |L1.5356|
;;;1051                   }
;;;1052                   else
;;;1053                   {
;;;1054                       eStability = CCR_CLOCK_STABLE;
0014ec  e3a00001          MOV      r0,#1
                  |L1.5360|
;;;1055                   }
;;;1056               }
;;;1057               break;
0014f0  ea00000c          B        |L1.5416|
                  |L1.5364|
;;;1058           case CCR_NON_MODULATED_PLL:
0014f4  e320f000          NOP      
;;;1059               {
;;;1060                   if (biGetCCR_SBSR_NMPLLRDY() == 0)
0014f8  e3a02103          MOV      r2,#0xc0000000
0014fc  e5d2202c          LDRB     r2,[r2,#0x2c]
001500  e7e02252          UBFX     r2,r2,#4,#1
001504  e3520000          CMP      r2,#0
001508  1a000001          BNE      |L1.5396|
;;;1061                   {
;;;1062                       eStability = CCR_CLOCK_NOT_STABLE;
00150c  e3a00000          MOV      r0,#0
001510  ea000000          B        |L1.5400|
                  |L1.5396|
;;;1063                   }
;;;1064                   else
;;;1065                   {
;;;1066                       eStability = CCR_CLOCK_STABLE;
001514  e3a00001          MOV      r0,#1
                  |L1.5400|
;;;1067                   }
;;;1068               }
;;;1069               break;
001518  ea000002          B        |L1.5416|
                  |L1.5404|
;;;1070           default:
00151c  e320f000          NOP      
;;;1071               {
;;;1072                   eStability = CCR_CLOCK_STABILITY_FAIL;
001520  e3a00002          MOV      r0,#2
;;;1073               }
;;;1074           break;
001524  e320f000          NOP      
                  |L1.5416|
001528  e320f000          NOP                            ;1021
;;;1075       }
;;;1076   
;;;1077       return eStability;
;;;1078   }
00152c  e12fff1e          BX       lr
;;;1079   
                          ENDP

                  i32CCR_GenerateReset PROC
;;;1081   /****************************************************************************/
;;;1082   int32_t i32CCR_GenerateReset(ccr_reset_type_e eResetType)
001530  e1a01000          MOV      r1,r0
;;;1083   {
;;;1084       int32_t i32Res = C_SUCCESS;
001534  e3a00000          MOV      r0,#0
;;;1085   
;;;1086       switch(eResetType)
001538  e3510000          CMP      r1,#0
00153c  0a000004          BEQ      |L1.5460|
001540  e3510001          CMP      r1,#1
001544  0a00000e          BEQ      |L1.5508|
001548  e3510002          CMP      r1,#2
00154c  1a000024          BNE      |L1.5604|
001550  ea000017          B        |L1.5556|
                  |L1.5460|
;;;1087       {
;;;1088           case CCR_FULL_RST:
001554  e320f000          NOP      
;;;1089               {
;;;1090                   vCCR_PDS_UNLOCK();
001558  e51f2620          LDR      r2,|L1.3904|
00155c  e3a03103          MOV      r3,#0xc0000000
001560  e5933000          LDR      r3,[r3,#0]
001564  e3a03103          MOV      r3,#0xc0000000
001568  e5832000          STR      r2,[r3,#0]
;;;1091                   vSetCCR_RSTCR_SW_FULL_RST(0x5F);
00156c  e3a02103          MOV      r2,#0xc0000000
001570  e5922030          LDR      r2,[r2,#0x30]
001574  e3c220ff          BIC      r2,r2,#0xff
001578  e282205f          ADD      r2,r2,#0x5f
00157c  e5832030          STR      r2,[r3,#0x30]
;;;1092               }
;;;1093               break;
001580  ea00001a          B        |L1.5616|
                  |L1.5508|
;;;1094           case CCR_DBG_RST:
001584  e320f000          NOP      
;;;1095               {
;;;1096                   vCCR_PDS_UNLOCK();
001588  e51f2650          LDR      r2,|L1.3904|
00158c  e3a03103          MOV      r3,#0xc0000000
001590  e5933000          LDR      r3,[r3,#0]
001594  e3a03103          MOV      r3,#0xc0000000
001598  e5832000          STR      r2,[r3,#0]
;;;1097                   vSetCCR_RSTCR_DBGRST(0xDE);
00159c  e3a02103          MOV      r2,#0xc0000000
0015a0  e5922030          LDR      r2,[r2,#0x30]
0015a4  e3c228ff          BIC      r2,r2,#0xff0000
0015a8  e28228de          ADD      r2,r2,#0xde0000
0015ac  e5832030          STR      r2,[r3,#0x30]
;;;1098               }
;;;1099               break;
0015b0  ea00000e          B        |L1.5616|
                  |L1.5556|
;;;1100           case CCR_SW_PART_RST:
0015b4  e320f000          NOP      
;;;1101               {
;;;1102                   vCCR_PDS_UNLOCK();
0015b8  e51f2680          LDR      r2,|L1.3904|
0015bc  e3a03103          MOV      r3,#0xc0000000
0015c0  e5933000          LDR      r3,[r3,#0]
0015c4  e3a03103          MOV      r3,#0xc0000000
0015c8  e5832000          STR      r2,[r3,#0]
;;;1103                   vSetCCR_RSTCR_SW_PART_RST(0x58);
0015cc  e3a02103          MOV      r2,#0xc0000000
0015d0  e5922030          LDR      r2,[r2,#0x30]
0015d4  e3c224ff          BIC      r2,r2,#0xff000000
0015d8  e2822316          ADD      r2,r2,#0x58000000
0015dc  e5832030          STR      r2,[r3,#0x30]
;;;1104               }
;;;1105               break;
0015e0  ea000002          B        |L1.5616|
                  |L1.5604|
;;;1106           default:
0015e4  e320f000          NOP      
;;;1107               {
;;;1108                   i32Res = C_FAILED;
0015e8  e3e00000          MVN      r0,#0
;;;1109               }
;;;1110           break;
0015ec  e320f000          NOP      
                  |L1.5616|
0015f0  e320f000          NOP                            ;1093
;;;1111       }
;;;1112   
;;;1113       return i32Res;
;;;1114   }
0015f4  e12fff1e          BX       lr
;;;1115   
                          ENDP

                  i32CCR_SetDeviceMode PROC
;;;1124   /****************************************************************************/
;;;1125   int32_t i32CCR_SetDeviceMode(ccr_device_mode_e eMode)
0015f8  e1a01000          MOV      r1,r0
;;;1126   {
;;;1127       int32_t i32Res = C_SUCCESS;
0015fc  e3a00000          MOV      r0,#0
;;;1128   
;;;1129       switch (eMode)
001600  e59f3f48          LDR      r3,|L1.9552|
001604  e0412003          SUB      r2,r1,r3
001608  e1510003          CMP      r1,r3
00160c  0a000052          BEQ      |L1.5980|
001610  ca000008          BGT      |L1.5688|
001614  e3e02717          MVN      r2,#0x5c0000
001618  e0822001          ADD      r2,r2,r1
00161c  e3520000          CMP      r2,#0
001620  0a00000b          BEQ      |L1.5716|
001624  e3520001          CMP      r2,#1
001628  0a000025          BEQ      |L1.5828|
00162c  e3520003          CMP      r2,#3
001630  1a00007d          BNE      |L1.6188|
001634  ea00003e          B        |L1.5940|
                  |L1.5688|
001638  e3520008          CMP      r2,#8
00163c  0a000050          BEQ      |L1.6020|
001640  e3520018          CMP      r2,#0x18
001644  0a000058          BEQ      |L1.6060|
001648  e3520038          CMP      r2,#0x38
00164c  1a000076          BNE      |L1.6188|
001650  ea000065          B        |L1.6124|
                  |L1.5716|
;;;1130       {
;;;1131           case CCR_DEVICE_MODE_M_PLL:      /* M_PLL */
001654  e320f000          NOP      
;;;1132               /* if Device is currently performing state transition, then wait: */
;;;1133               while (biGetCCR_SYSDSR_MODESTAT() == 0)
001658  e320f000          NOP      
                  |L1.5724|
00165c  e3a02103          MOV      r2,#0xc0000000
001660  e5d2204c          LDRB     r2,[r2,#0x4c]
001664  e202207f          AND      r2,r2,#0x7f
001668  e3520000          CMP      r2,#0
00166c  0afffffa          BEQ      |L1.5724|
;;;1134               {
;;;1135                   ;
;;;1136               }
;;;1137               if (biGetCCR_SYSDSR_MODESTAT() != 1)
001670  e3a02103          MOV      r2,#0xc0000000
001674  e5d2204c          LDRB     r2,[r2,#0x4c]
001678  e202207f          AND      r2,r2,#0x7f
00167c  e3520001          CMP      r2,#1
001680  0a00000d          BEQ      |L1.5820|
;;;1138               {
;;;1139                   vCCR_PDS_UNLOCK();
001684  e51f274c          LDR      r2,|L1.3904|
001688  e3a03103          MOV      r3,#0xc0000000
00168c  e5933000          LDR      r3,[r3,#0]
001690  e3a03103          MOV      r3,#0xc0000000
001694  e5832000          STR      r2,[r3,#0]
;;;1140                   vSetCCR_SCR(eMode);
001698  e3a02103          MOV      r2,#0xc0000000
00169c  e582103c          STR      r1,[r2,#0x3c]
;;;1141   
;;;1142                   while (biGetCCR_SYSDSR_MODESTAT() == 0)
0016a0  e320f000          NOP      
                  |L1.5796|
0016a4  e3a02103          MOV      r2,#0xc0000000
0016a8  e5d2204c          LDRB     r2,[r2,#0x4c]
0016ac  e202207f          AND      r2,r2,#0x7f
0016b0  e3520000          CMP      r2,#0
0016b4  0afffffa          BEQ      |L1.5796|
0016b8  ea000000          B        |L1.5824|
                  |L1.5820|
;;;1143                   {
;;;1144                       ;
;;;1145                   }
;;;1146               }
;;;1147               else
;;;1148               {
;;;1149                   i32Res = C_FAILED;
0016bc  e3e00000          MVN      r0,#0
                  |L1.5824|
;;;1150               }
;;;1151               break;
0016c0  ea00005c          B        |L1.6200|
                  |L1.5828|
;;;1152           case CCR_DEVICE_MODE_M_OSC10:    /* M_OSC10 */
0016c4  e320f000          NOP      
;;;1153               /* if Device is currently performing state transition, then wait: */
;;;1154               while (biGetCCR_SYSDSR_MODESTAT() == 0)
0016c8  e320f000          NOP      
                  |L1.5836|
0016cc  e3a02103          MOV      r2,#0xc0000000
0016d0  e5d2204c          LDRB     r2,[r2,#0x4c]
0016d4  e202207f          AND      r2,r2,#0x7f
0016d8  e3520000          CMP      r2,#0
0016dc  0afffffa          BEQ      |L1.5836|
;;;1155               {
;;;1156                   ;
;;;1157               }
;;;1158               if (biGetCCR_SYSDSR_MODESTAT() != 2)
0016e0  e3a02103          MOV      r2,#0xc0000000
0016e4  e5d2204c          LDRB     r2,[r2,#0x4c]
0016e8  e202207f          AND      r2,r2,#0x7f
0016ec  e3520002          CMP      r2,#2
0016f0  0a00000d          BEQ      |L1.5932|
;;;1159               {
;;;1160                   vCCR_PDS_UNLOCK();
0016f4  e51f27bc          LDR      r2,|L1.3904|
0016f8  e3a03103          MOV      r3,#0xc0000000
0016fc  e5933000          LDR      r3,[r3,#0]
001700  e3a03103          MOV      r3,#0xc0000000
001704  e5832000          STR      r2,[r3,#0]
;;;1161                   vSetCCR_SCR(eMode);
001708  e3a02103          MOV      r2,#0xc0000000
00170c  e582103c          STR      r1,[r2,#0x3c]
;;;1162   
;;;1163                   while (biGetCCR_SYSDSR_MODESTAT() == 0)
001710  e320f000          NOP      
                  |L1.5908|
001714  e3a02103          MOV      r2,#0xc0000000
001718  e5d2204c          LDRB     r2,[r2,#0x4c]
00171c  e202207f          AND      r2,r2,#0x7f
001720  e3520000          CMP      r2,#0
001724  0afffffa          BEQ      |L1.5908|
001728  ea000000          B        |L1.5936|
                  |L1.5932|
;;;1164                   {
;;;1165                       ;
;;;1166                   }
;;;1167               }
;;;1168               else
;;;1169               {
;;;1170                   i32Res = C_FAILED;
00172c  e3e00000          MVN      r0,#0
                  |L1.5936|
;;;1171               }
;;;1172               break;
001730  ea000040          B        |L1.6200|
                  |L1.5940|
;;;1173           case CCR_DEVICE_MODE_STB_OSC10:  /* STB_OSC10 */
001734  e320f000          NOP      
;;;1174               vCCR_PDS_UNLOCK();
001738  e51f2800          LDR      r2,|L1.3904|
00173c  e3a03103          MOV      r3,#0xc0000000
001740  e5933000          LDR      r3,[r3,#0]
001744  e3a03103          MOV      r3,#0xc0000000
001748  e5832000          STR      r2,[r3,#0]
;;;1175               vSetCCR_SCR(eMode);
00174c  e3a02103          MOV      r2,#0xc0000000
001750  e582103c          STR      r1,[r2,#0x3c]
;;;1176               __wfi();
001754  e320f003          WFI      
;;;1177               break;
001758  ea000036          B        |L1.6200|
                  |L1.5980|
;;;1178           case CCR_DEVICE_MODE_SLP_OSC10:  /* SLP_OSC10 */
00175c  e320f000          NOP      
;;;1179               vCCR_PDS_UNLOCK();
001760  e51f2828          LDR      r2,|L1.3904|
001764  e3a03103          MOV      r3,#0xc0000000
001768  e5933000          LDR      r3,[r3,#0]
00176c  e3a03103          MOV      r3,#0xc0000000
001770  e5832000          STR      r2,[r3,#0]
;;;1180               vSetCCR_SCR(eMode);
001774  e3a02103          MOV      r2,#0xc0000000
001778  e582103c          STR      r1,[r2,#0x3c]
;;;1181               __wfi();
00177c  e320f003          WFI      
;;;1182               break;
001780  ea00002c          B        |L1.6200|
                  |L1.6020|
;;;1183           case CCR_DEVICE_MODE_SLP_RC10:   /* SLP_RC10 */
001784  e320f000          NOP      
;;;1184               vCCR_PDS_UNLOCK();
001788  e51f2850          LDR      r2,|L1.3904|
00178c  e3a03103          MOV      r3,#0xc0000000
001790  e5933000          LDR      r3,[r3,#0]
001794  e3a03103          MOV      r3,#0xc0000000
001798  e5832000          STR      r2,[r3,#0]
;;;1185               vSetCCR_SCR(eMode);
00179c  e3a02103          MOV      r2,#0xc0000000
0017a0  e582103c          STR      r1,[r2,#0x3c]
;;;1186               __wfi();
0017a4  e320f003          WFI      
;;;1187               break;
0017a8  ea000022          B        |L1.6200|
                  |L1.6060|
;;;1188           case CCR_DEVICE_MODE_STOP_R:     /* STOP_R */
0017ac  e320f000          NOP      
;;;1189               /* if Device is currently performing state transition, then wait: */
;;;1190               while (biGetCCR_SYSDSR_MODESTAT() == 0)
0017b0  e320f000          NOP      
                  |L1.6068|
0017b4  e3a02103          MOV      r2,#0xc0000000
0017b8  e5d2204c          LDRB     r2,[r2,#0x4c]
0017bc  e202207f          AND      r2,r2,#0x7f
0017c0  e3520000          CMP      r2,#0
0017c4  0afffffa          BEQ      |L1.6068|
;;;1191               {
;;;1192                   ;
;;;1193               }
;;;1194               vCCR_PDS_UNLOCK();
0017c8  e51f2890          LDR      r2,|L1.3904|
0017cc  e3a03103          MOV      r3,#0xc0000000
0017d0  e5933000          LDR      r3,[r3,#0]
0017d4  e3a03103          MOV      r3,#0xc0000000
0017d8  e5832000          STR      r2,[r3,#0]
;;;1195               vSetCCR_SCR(eMode);
0017dc  e3a02103          MOV      r2,#0xc0000000
0017e0  e582103c          STR      r1,[r2,#0x3c]
;;;1196               __wfi();
0017e4  e320f003          WFI      
;;;1197               break;
0017e8  ea000012          B        |L1.6200|
                  |L1.6124|
;;;1198           case CCR_DEVICE_MODE_STOP:       /* STOP */
0017ec  e320f000          NOP      
;;;1199               /* if Device is currently performing state transition, then wait: */
;;;1200               while (biGetCCR_SYSDSR_MODESTAT() == 0)
0017f0  e320f000          NOP      
                  |L1.6132|
0017f4  e3a02103          MOV      r2,#0xc0000000
0017f8  e5d2204c          LDRB     r2,[r2,#0x4c]
0017fc  e202207f          AND      r2,r2,#0x7f
001800  e3520000          CMP      r2,#0
001804  0afffffa          BEQ      |L1.6132|
;;;1201               {
;;;1202                   ;
;;;1203               }
;;;1204               vCCR_PDS_UNLOCK();
001808  e51f28d0          LDR      r2,|L1.3904|
00180c  e3a03103          MOV      r3,#0xc0000000
001810  e5933000          LDR      r3,[r3,#0]
001814  e3a03103          MOV      r3,#0xc0000000
001818  e5832000          STR      r2,[r3,#0]
;;;1205               vSetCCR_SCR(eMode);
00181c  e3a02103          MOV      r2,#0xc0000000
001820  e582103c          STR      r1,[r2,#0x3c]
;;;1206               __wfi();
001824  e320f003          WFI      
;;;1207               break;
001828  ea000002          B        |L1.6200|
                  |L1.6188|
;;;1208           default:
00182c  e320f000          NOP      
;;;1209               i32Res = C_FAILED;
001830  e3e00000          MVN      r0,#0
;;;1210           break;
001834  e320f000          NOP      
                  |L1.6200|
001838  e320f000          NOP                            ;1151
;;;1211       }
;;;1212   
;;;1213       return i32Res;
;;;1214   }
00183c  e12fff1e          BX       lr
;;;1215   
                          ENDP

                  i32CCR_EnableInterrupt PROC
;;;1217   /****************************************************************************/
;;;1218   int32_t i32CCR_EnableInterrupt(ccr_interrupts_e eInterrupt, ccr_enable_e eEn)
001840  e92d4010          PUSH     {r4,lr}
;;;1219   {
001844  e1a02000          MOV      r2,r0
;;;1220       int32_t i32Res = C_SUCCESS;
001848  e3a00000          MOV      r0,#0
;;;1221   
;;;1222       switch(eInterrupt)
00184c  e3520000          CMP      r2,#0
001850  0a000004          BEQ      |L1.6248|
001854  e3520001          CMP      r2,#1
001858  0a00000d          BEQ      |L1.6292|
00185c  e3520002          CMP      r2,#2
001860  1a000021          BNE      |L1.6380|
001864  ea000015          B        |L1.6336|
                  |L1.6248|
;;;1223       {
;;;1224           case CCR_INTERRUPTS_STATE_CHANGE:
001868  e320f000          NOP      
;;;1225               {
;;;1226                   vCCR_PDS_UNLOCK();
00186c  e51f3934          LDR      r3,|L1.3904|
001870  e3a04103          MOV      r4,#0xc0000000
001874  e5944000          LDR      r4,[r4,#0]
001878  e3a04103          MOV      r4,#0xc0000000
00187c  e5843000          STR      r3,[r4,#0]
;;;1227                   vSetCCR_INTER_MODEINTEN(eEn);
001880  e3a03103          MOV      r3,#0xc0000000
001884  e5933040          LDR      r3,[r3,#0x40]
001888  e7c03011          BFI      r3,r1,#0,#1
00188c  e5843040          STR      r3,[r4,#0x40]
;;;1228               }
;;;1229               break;
001890  ea000018          B        |L1.6392|
                  |L1.6292|
;;;1230           case CCR_INTERRUPTS_ALARM_0:
001894  e320f000          NOP      
;;;1231               {
;;;1232                   vCCR_PDS_UNLOCK();
001898  e51f3960          LDR      r3,|L1.3904|
00189c  e3a04103          MOV      r4,#0xc0000000
0018a0  e5944000          LDR      r4,[r4,#0]
0018a4  e3a04103          MOV      r4,#0xc0000000
0018a8  e5843000          STR      r3,[r4,#0]
;;;1233                   vSetCCR_INTER_ALARMINT0EN(eEn);
0018ac  e3a03103          MOV      r3,#0xc0000000
0018b0  e5933040          LDR      r3,[r3,#0x40]
0018b4  e7d03811          BFI      r3,r1,#16,#1
0018b8  e5843040          STR      r3,[r4,#0x40]
;;;1234               }
;;;1235               break;
0018bc  ea00000d          B        |L1.6392|
                  |L1.6336|
;;;1236           case CCR_INTERRUPTS_ALARM_1:
0018c0  e320f000          NOP      
;;;1237               {
;;;1238                   vCCR_PDS_UNLOCK();
0018c4  e51f398c          LDR      r3,|L1.3904|
0018c8  e3a04103          MOV      r4,#0xc0000000
0018cc  e5944000          LDR      r4,[r4,#0]
0018d0  e3a04103          MOV      r4,#0xc0000000
0018d4  e5843000          STR      r3,[r4,#0]
;;;1239                   vSetCCR_INTER_ALARMINT1EN(eEn);
0018d8  e3a03103          MOV      r3,#0xc0000000
0018dc  e5933040          LDR      r3,[r3,#0x40]
0018e0  e7d13891          BFI      r3,r1,#17,#1
0018e4  e5843040          STR      r3,[r4,#0x40]
;;;1240               }
;;;1241               break;
0018e8  ea000002          B        |L1.6392|
                  |L1.6380|
;;;1242           default:
0018ec  e320f000          NOP      
;;;1243               {
;;;1244                   i32Res = C_FAILED;
0018f0  e3e00000          MVN      r0,#0
;;;1245               }
;;;1246           break;
0018f4  e320f000          NOP      
                  |L1.6392|
0018f8  e320f000          NOP                            ;1229
;;;1247       }
;;;1248   
;;;1249       return i32Res;
;;;1250   }
0018fc  e8bd8010          POP      {r4,pc}
;;;1251   
                          ENDP

                  u32CCR_GetInterruptStatusAll PROC
;;;1253   /****************************************************************************/
;;;1254   uint32_t u32CCR_GetInterruptStatusAll(void)
001900  e3a00103          MOV      r0,#0xc0000000
;;;1255   {
;;;1256       return u32GetCCR_INTSR();
001904  e5900044          LDR      r0,[r0,#0x44]
;;;1257   }
001908  e12fff1e          BX       lr
;;;1258   
                          ENDP

                  i32CCR_GetInterruptStatusSingle PROC
;;;1260   /****************************************************************************/
;;;1261   int32_t i32CCR_GetInterruptStatusSingle(ccr_interrupts_e eInterrupt, ccr_int_occurred_e * peIntOccurred)
00190c  e1a02000          MOV      r2,r0
;;;1262   {
;;;1263       int32_t i32Res = C_SUCCESS;
001910  e3a00000          MOV      r0,#0
;;;1264   
;;;1265       if (0x00 != peIntOccurred)
001914  e3510000          CMP      r1,#0
001918  0a000029          BEQ      |L1.6596|
;;;1266       {
;;;1267           switch(eInterrupt)
00191c  e3520005          CMP      r2,#5
001920  308ff102          ADDCC    pc,pc,r2,LSL #2
001924  ea000022          B        |L1.6580|
001928  ea000003          B        |L1.6460|
00192c  ea000008          B        |L1.6484|
001930  ea00000d          B        |L1.6508|
001934  ea000012          B        |L1.6532|
001938  ea000017          B        |L1.6556|
                  |L1.6460|
;;;1268           {
;;;1269               case CCR_INTERRUPTS_STATE_CHANGE:
00193c  e320f000          NOP      
;;;1270                   {
;;;1271                       *peIntOccurred = (ccr_int_occurred_e)biGetCCR_INTSR_MODEINT();
001940  e3a03103          MOV      r3,#0xc0000000
001944  e5933044          LDR      r3,[r3,#0x44]
001948  e2033001          AND      r3,r3,#1
00194c  e5c13000          STRB     r3,[r1,#0]
;;;1272                   }
;;;1273                   break;
001950  ea00001a          B        |L1.6592|
                  |L1.6484|
;;;1274               case CCR_INTERRUPTS_ALARM_0:
001954  e320f000          NOP      
;;;1275                   {
;;;1276                       *peIntOccurred = (ccr_int_occurred_e)biGetCCR_INTSR_ALARMINT0();
001958  e3a03103          MOV      r3,#0xc0000000
00195c  e5933044          LDR      r3,[r3,#0x44]
001960  e7e03853          UBFX     r3,r3,#16,#1
001964  e5c13000          STRB     r3,[r1,#0]
;;;1277                   }
;;;1278                   break;
001968  ea000014          B        |L1.6592|
                  |L1.6508|
;;;1279               case CCR_INTERRUPTS_ALARM_1:
00196c  e320f000          NOP      
;;;1280                   {
;;;1281                       *peIntOccurred = (ccr_int_occurred_e)biGetCCR_INTSR_ALARMINT1();
001970  e3a03103          MOV      r3,#0xc0000000
001974  e5933044          LDR      r3,[r3,#0x44]
001978  e7e038d3          UBFX     r3,r3,#17,#1
00197c  e5c13000          STRB     r3,[r1,#0]
;;;1282                   }
;;;1283                   break;
001980  ea00000e          B        |L1.6592|
                  |L1.6532|
;;;1284               case CCR_INTERRUPTS_BECC:
001984  e320f000          NOP      
;;;1285                   {
;;;1286                       *peIntOccurred = (ccr_int_occurred_e)biGetCCR_INTSR_BKPRAM_ECCINT();
001988  e3a03103          MOV      r3,#0xc0000000
00198c  e5933044          LDR      r3,[r3,#0x44]
001990  e7e03c53          UBFX     r3,r3,#24,#1
001994  e5c13000          STRB     r3,[r1,#0]
;;;1287                   }
;;;1288                   break;
001998  ea000008          B        |L1.6592|
                  |L1.6556|
;;;1289               case CCR_INTERRUPTS_MECC:
00199c  e320f000          NOP      
;;;1290                   {
;;;1291                       *peIntOccurred = (ccr_int_occurred_e)biGetCCR_INTSR_MM_ECCINT();
0019a0  e3a03103          MOV      r3,#0xc0000000
0019a4  e5933044          LDR      r3,[r3,#0x44]
0019a8  e7e03cd3          UBFX     r3,r3,#25,#1
0019ac  e5c13000          STRB     r3,[r1,#0]
;;;1292                   }
;;;1293                   break;
0019b0  ea000002          B        |L1.6592|
                  |L1.6580|
;;;1294               default:
0019b4  e320f000          NOP      
;;;1295                   {
;;;1296                       i32Res = C_FAILED;
0019b8  e3e00000          MVN      r0,#0
;;;1297                   }
;;;1298               break;
0019bc  e320f000          NOP      
                  |L1.6592|
0019c0  ea000000          B        |L1.6600|
                  |L1.6596|
;;;1299           }
;;;1300       }
;;;1301       else
;;;1302       {
;;;1303           i32Res = C_FAILED;
0019c4  e3e00000          MVN      r0,#0
                  |L1.6600|
;;;1304       }
;;;1305       return i32Res;
;;;1306   }
0019c8  e12fff1e          BX       lr
;;;1307   
                          ENDP

                  vCCR_ClearInterruptsAll PROC
;;;1309   /****************************************************************************/
;;;1310   void vCCR_ClearInterruptsAll(void)
0019cc  e51f0a94          LDR      r0,|L1.3904|
;;;1311   {
;;;1312       vCCR_PDS_UNLOCK();
0019d0  e3a01103          MOV      r1,#0xc0000000
0019d4  e5911000          LDR      r1,[r1,#0]
0019d8  e3a01103          MOV      r1,#0xc0000000
0019dc  e5810000          STR      r0,[r1,#0]
;;;1313       vSetCCR_INTCR(0x00030001);
0019e0  e59f0b6c          LDR      r0,|L1.9556|
0019e4  e5810048          STR      r0,[r1,#0x48]
;;;1314   }
0019e8  e12fff1e          BX       lr
;;;1315   
                          ENDP

                  i32CCR_ClearInterruptSingle PROC
;;;1317   /****************************************************************************/
;;;1318   int32_t i32CCR_ClearInterruptSingle(ccr_interrupts_e eInterrupt)
0019ec  e1a01000          MOV      r1,r0
;;;1319   {
;;;1320       int32_t i32Res = C_SUCCESS;
0019f0  e3a00000          MOV      r0,#0
;;;1321   
;;;1322       switch(eInterrupt)
0019f4  e3510000          CMP      r1,#0
0019f8  0a000004          BEQ      |L1.6672|
0019fc  e3510001          CMP      r1,#1
001a00  0a00000e          BEQ      |L1.6720|
001a04  e3510002          CMP      r1,#2
001a08  1a000024          BNE      |L1.6816|
001a0c  ea000017          B        |L1.6768|
                  |L1.6672|
;;;1323       {
;;;1324           case CCR_INTERRUPTS_STATE_CHANGE:
001a10  e320f000          NOP      
;;;1325               {
;;;1326                   vCCR_PDS_UNLOCK();
001a14  e51f2adc          LDR      r2,|L1.3904|
001a18  e3a03103          MOV      r3,#0xc0000000
001a1c  e5933000          LDR      r3,[r3,#0]
001a20  e3a03103          MOV      r3,#0xc0000000
001a24  e5832000          STR      r2,[r3,#0]
;;;1327                   vSetCCR_INTCR_MODEINTC(1U);
001a28  e3a02103          MOV      r2,#0xc0000000
001a2c  e5922048          LDR      r2,[r2,#0x48]
001a30  e3c22001          BIC      r2,r2,#1
001a34  e2822001          ADD      r2,r2,#1
001a38  e5832048          STR      r2,[r3,#0x48]
;;;1328               }
;;;1329               break;
001a3c  ea00001a          B        |L1.6828|
                  |L1.6720|
;;;1330           case CCR_INTERRUPTS_ALARM_0:
001a40  e320f000          NOP      
;;;1331               {
;;;1332                   vCCR_PDS_UNLOCK();
001a44  e51f2b0c          LDR      r2,|L1.3904|
001a48  e3a03103          MOV      r3,#0xc0000000
001a4c  e5933000          LDR      r3,[r3,#0]
001a50  e3a03103          MOV      r3,#0xc0000000
001a54  e5832000          STR      r2,[r3,#0]
;;;1333                   vSetCCR_INTCR_ALARMINT0C(1U);
001a58  e3a02103          MOV      r2,#0xc0000000
001a5c  e5922048          LDR      r2,[r2,#0x48]
001a60  e3c22801          BIC      r2,r2,#0x10000
001a64  e2822801          ADD      r2,r2,#0x10000
001a68  e5832048          STR      r2,[r3,#0x48]
;;;1334               }
;;;1335               break;
001a6c  ea00000e          B        |L1.6828|
                  |L1.6768|
;;;1336           case CCR_INTERRUPTS_ALARM_1:
001a70  e320f000          NOP      
;;;1337               {
;;;1338                   vCCR_PDS_UNLOCK();
001a74  e51f2b3c          LDR      r2,|L1.3904|
001a78  e3a03103          MOV      r3,#0xc0000000
001a7c  e5933000          LDR      r3,[r3,#0]
001a80  e3a03103          MOV      r3,#0xc0000000
001a84  e5832000          STR      r2,[r3,#0]
;;;1339                   vSetCCR_INTCR_ALARMINT1C(1U);
001a88  e3a02103          MOV      r2,#0xc0000000
001a8c  e5922048          LDR      r2,[r2,#0x48]
001a90  e3c22802          BIC      r2,r2,#0x20000
001a94  e2822802          ADD      r2,r2,#0x20000
001a98  e5832048          STR      r2,[r3,#0x48]
;;;1340               }
;;;1341               break;
001a9c  ea000002          B        |L1.6828|
                  |L1.6816|
;;;1342           default:
001aa0  e320f000          NOP      
;;;1343               {
;;;1344                   i32Res = C_FAILED;
001aa4  e3e00000          MVN      r0,#0
;;;1345               }
;;;1346           break;
001aa8  e320f000          NOP      
                  |L1.6828|
001aac  e320f000          NOP                            ;1329
;;;1347       }
;;;1348   
;;;1349       return i32Res;
;;;1350   }
001ab0  e12fff1e          BX       lr
;;;1351   
                          ENDP

                  eCCR_GetCurrentDeviceMode PROC
;;;1353   /****************************************************************************/
;;;1354   ccr_device_mode_e eCCR_GetCurrentDeviceMode(void)
001ab4  e3a02103          MOV      r2,#0xc0000000
;;;1355   {
;;;1356       uint32_t u32DeviceMode;
;;;1357       ccr_device_mode_e eResult;
;;;1358   
;;;1359       u32DeviceMode = biGetCCR_SYSDSR_MODESTAT();
001ab8  e5d2204c          LDRB     r2,[r2,#0x4c]
001abc  e202107f          AND      r1,r2,#0x7f
;;;1360       switch (u32DeviceMode)
001ac0  e3510a01          CMP      r1,#0x1000
001ac4  0a000017          BEQ      |L1.6952|
001ac8  ca000006          BGT      |L1.6888|
001acc  e3510001          CMP      r1,#1
001ad0  0a00000b          BEQ      |L1.6916|
001ad4  e3510010          CMP      r1,#0x10
001ad8  0a00000c          BEQ      |L1.6928|
001adc  e3510c01          CMP      r1,#0x100
001ae0  1a00001c          BNE      |L1.7000|
001ae4  ea00000c          B        |L1.6940|
                  |L1.6888|
001ae8  e3510801          CMP      r1,#0x10000
001aec  0a000010          BEQ      |L1.6964|
001af0  e3510601          CMP      r1,#0x100000
001af4  0a000011          BEQ      |L1.6976|
001af8  e3510401          CMP      r1,#0x1000000
001afc  1a000015          BNE      |L1.7000|
001b00  ea000011          B        |L1.6988|
                  |L1.6916|
;;;1361       {
;;;1362           case 0x00000001:
001b04  e320f000          NOP      
;;;1363               {
;;;1364                   eResult = CCR_DEVICE_MODE_M_PLL;
001b08  e59f0a48          LDR      r0,|L1.9560|
;;;1365               }
;;;1366               break;
001b0c  ea000014          B        |L1.7012|
                  |L1.6928|
;;;1367           case 0x00000010:
001b10  e320f000          NOP      
;;;1368               {
;;;1369                   eResult = CCR_DEVICE_MODE_M_OSC10;
001b14  e59f0a40          LDR      r0,|L1.9564|
;;;1370               }
;;;1371               break;
001b18  ea000011          B        |L1.7012|
                  |L1.6940|
;;;1372           case 0x00000100:
001b1c  e320f000          NOP      
;;;1373               {
;;;1374                   eResult = CCR_DEVICE_MODE_STB_OSC10;
001b20  e59f0a38          LDR      r0,|L1.9568|
;;;1375               }
;;;1376               break;
001b24  ea00000e          B        |L1.7012|
                  |L1.6952|
;;;1377           case 0x00001000:
001b28  e320f000          NOP      
;;;1378               {
;;;1379                   eResult = CCR_DEVICE_MODE_SLP_OSC10;
001b2c  e59f0a1c          LDR      r0,|L1.9552|
;;;1380               }
;;;1381               break;
001b30  ea00000b          B        |L1.7012|
                  |L1.6964|
;;;1382           case 0x00010000:
001b34  e320f000          NOP      
;;;1383               {
;;;1384                   eResult = CCR_DEVICE_MODE_SLP_RC10;
001b38  e59f0a24          LDR      r0,|L1.9572|
;;;1385               }
;;;1386               break;
001b3c  ea000008          B        |L1.7012|
                  |L1.6976|
;;;1387           case 0x00100000:
001b40  e320f000          NOP      
;;;1388               {
;;;1389                   eResult = CCR_DEVICE_MODE_STOP_R;
001b44  e59f0a1c          LDR      r0,|L1.9576|
;;;1390               }
;;;1391               break;
001b48  ea000005          B        |L1.7012|
                  |L1.6988|
;;;1392           case 0x01000000:
001b4c  e320f000          NOP      
;;;1393               {
;;;1394                   eResult = CCR_DEVICE_MODE_STOP;
001b50  e59f0a14          LDR      r0,|L1.9580|
;;;1395               }
;;;1396               break;
001b54  ea000002          B        |L1.7012|
                  |L1.7000|
;;;1397           default:
001b58  e320f000          NOP      
;;;1398               {
;;;1399                   eResult = CCR_DEVICE_MODE_TRANSITION;
001b5c  e3a00000          MOV      r0,#0
;;;1400               }
;;;1401               break;
001b60  e320f000          NOP      
                  |L1.7012|
001b64  e320f000          NOP                            ;1366
;;;1402       }
;;;1403       return eResult;
;;;1404   }
001b68  e12fff1e          BX       lr
;;;1405   
                          ENDP

                  vCCR_ConfigureSSCG PROC
;;;1407   /****************************************************************************/
;;;1408   void vCCR_ConfigureSSCG(ccr_sscg_congig_st * pstSSCGConfig)
001b6c  e3500000          CMP      r0,#0
;;;1409   {
;;;1410       if (0x00 != pstSSCGConfig)
001b70  0a000027          BEQ      |L1.7188|
;;;1411       {
;;;1412           vCCR_PDS_UNLOCK();
001b74  e51f1c3c          LDR      r1,|L1.3904|
001b78  e3a02103          MOV      r2,#0xc0000000
001b7c  e5922000          LDR      r2,[r2,#0]
001b80  e3a02103          MOV      r2,#0xc0000000
001b84  e5821000          STR      r1,[r2,#0]
;;;1413            vSetCCR_SSCPLL_CTRL0_SSCPLL_MODTYPE( (uint8_t)(pstSSCGConfig->eModulationDirection) );
001b88  e5d02000          LDRB     r2,[r0,#0]
001b8c  e3a01103          MOV      r1,#0xc0000000
001b90  e5d11050          LDRB     r1,[r1,#0x50]
001b94  e7c61312          BFI      r1,r2,#6,#1
001b98  e3a02103          MOV      r2,#0xc0000000
001b9c  e5c21050          STRB     r1,[r2,#0x50]
;;;1414   
;;;1415            vCCR_PDS_UNLOCK();
001ba0  e51f1c68          LDR      r1,|L1.3904|
001ba4  e5922000          LDR      r2,[r2,#0]
001ba8  e3a02103          MOV      r2,#0xc0000000
001bac  e5821000          STR      r1,[r2,#0]
;;;1416            vSetCCR_SSCPLL_CTRL2_SSCPLL_FNLEN( (uint8_t)(pstSSCGConfig->u8ModulationCycleLengthFractionalN) );
001bb0  e5d02001          LDRB     r2,[r0,#1]
001bb4  e3a01103          MOV      r1,#0xc0000000
001bb8  e5911058          LDR      r1,[r1,#0x58]
001bbc  e7c61012          BFI      r1,r2,#0,#7
001bc0  e3a02103          MOV      r2,#0xc0000000
001bc4  e5821058          STR      r1,[r2,#0x58]
;;;1417   
;;;1418            vCCR_PDS_UNLOCK();
001bc8  e51f1c90          LDR      r1,|L1.3904|
001bcc  e5922000          LDR      r2,[r2,#0]
001bd0  e3a02103          MOV      r2,#0xc0000000
001bd4  e5821000          STR      r1,[r2,#0]
;;;1419            vSetCCR_SSCPLL_CTRL2_SSCPLL_DSFT( (uint32_t)(pstSSCGConfig->u16ModulationDegree) );
001bd8  e1d020b2          LDRH     r2,[r0,#2]
001bdc  e3a01103          MOV      r1,#0xc0000000
001be0  e5911058          LDR      r1,[r1,#0x58]
001be4  e7df1812          BFI      r1,r2,#16,#16
001be8  e3a02103          MOV      r2,#0xc0000000
001bec  e5821058          STR      r1,[r2,#0x58]
;;;1420   
;;;1421            /* give reset to SSCG to apply new settings */
;;;1422            vCCR_PDS_UNLOCK();
001bf0  e51f1cb8          LDR      r1,|L1.3904|
001bf4  e5922000          LDR      r2,[r2,#0]
001bf8  e3a02103          MOV      r2,#0xc0000000
001bfc  e5821000          STR      r1,[r2,#0]
;;;1423            vSetCCR_SSCPLL_CTRL0_SSCPLL_RESET(1U);
001c00  e3a01103          MOV      r1,#0xc0000000
001c04  e5d11050          LDRB     r1,[r1,#0x50]
001c08  e3c11001          BIC      r1,r1,#1
001c0c  e2811001          ADD      r1,r1,#1
001c10  e5c21050          STRB     r1,[r2,#0x50]
                  |L1.7188|
;;;1424       }
;;;1425   }
001c14  e12fff1e          BX       lr
;;;1426   
                          ENDP

                  vCCR_SetWDTAlarmType PROC
;;;1428   /****************************************************************************/
;;;1429   void vCCR_SetWDTAlarmType(ccr_wdt_alarm_type_e eAlarmType)
001c18  e51f1ce0          LDR      r1,|L1.3904|
;;;1430   {
;;;1431       vCCR_PDS_UNLOCK();
001c1c  e3a02103          MOV      r2,#0xc0000000
001c20  e5922000          LDR      r2,[r2,#0]
001c24  e3a02103          MOV      r2,#0xc0000000
001c28  e5821000          STR      r1,[r2,#0]
;;;1432       vSetCCR_GENERIC_REG0_ALMWDT_RST_NMI(eAlarmType);
001c2c  e3a01103          MOV      r1,#0xc0000000
001c30  e5911064          LDR      r1,[r1,#0x64]
001c34  e7c01010          BFI      r1,r0,#0,#1
001c38  e5821064          STR      r1,[r2,#0x64]
;;;1433   }
001c3c  e12fff1e          BX       lr
;;;1434   
                          ENDP

                  vCCR_EnableBitErrorInjectionInRAM PROC
;;;1436   /****************************************************************************/
;;;1437   void vCCR_EnableBitErrorInjectionInRAM(ccr_enable_e eEn)
001c40  e51f1d08          LDR      r1,|L1.3904|
;;;1438   {
;;;1439       vCCR_PDS_UNLOCK();
001c44  e3a02103          MOV      r2,#0xc0000000
001c48  e5922000          LDR      r2,[r2,#0]
001c4c  e3a02103          MOV      r2,#0xc0000000
001c50  e5821000          STR      r1,[r2,#0]
;;;1440       vSetCCR_GENERIC_REG0_BEINJB(eEn);
001c54  e3a01103          MOV      r1,#0xc0000000
001c58  e5911064          LDR      r1,[r1,#0x64]
001c5c  e7c11090          BFI      r1,r0,#1,#1
001c60  e5821064          STR      r1,[r2,#0x64]
;;;1441   }
001c64  e12fff1e          BX       lr
;;;1442   
                          ENDP

                  vCCR_SetPositionOfBitErrorInjectionInRAM PROC
;;;1444   /****************************************************************************/
;;;1445   void vCCR_SetPositionOfBitErrorInjectionInRAM(uint8_t u8FirstPosition, uint8_t u8SecondPosition)
001c68  e51f2d30          LDR      r2,|L1.3904|
;;;1446   {
;;;1447       vCCR_PDS_UNLOCK();
001c6c  e3a03103          MOV      r3,#0xc0000000
001c70  e5933000          LDR      r3,[r3,#0]
001c74  e3a03103          MOV      r3,#0xc0000000
001c78  e5832000          STR      r2,[r3,#0]
;;;1448       vSetCCR_GENERIC_REG0_BEPAB(u8FirstPosition);
001c7c  e3a02103          MOV      r2,#0xc0000000
001c80  e5922064          LDR      r2,[r2,#0x64]
001c84  e7c72110          BFI      r2,r0,#2,#6
001c88  e5832064          STR      r2,[r3,#0x64]
;;;1449       vCCR_PDS_UNLOCK();
001c8c  e51f2d54          LDR      r2,|L1.3904|
001c90  e5933000          LDR      r3,[r3,#0]
001c94  e3a03103          MOV      r3,#0xc0000000
001c98  e5832000          STR      r2,[r3,#0]
;;;1450       vSetCCR_GENERIC_REG0_BEPBB(u8SecondPosition);
001c9c  e3a02103          MOV      r2,#0xc0000000
001ca0  e5922064          LDR      r2,[r2,#0x64]
001ca4  e7cd2411          BFI      r2,r1,#8,#6
001ca8  e5832064          STR      r2,[r3,#0x64]
;;;1451   }
001cac  e12fff1e          BX       lr
;;;1452   
                          ENDP

                  vCCR_SetCANMode PROC
;;;1454   /****************************************************************************/
;;;1455   void vCCR_SetCANMode(ccr_can_mode_e eCANMode)
001cb0  e51f1d78          LDR      r1,|L1.3904|
;;;1456   {
;;;1457       vCCR_PDS_UNLOCK();
001cb4  e3a02103          MOV      r2,#0xc0000000
001cb8  e5922000          LDR      r2,[r2,#0]
001cbc  e3a02103          MOV      r2,#0xc0000000
001cc0  e5821000          STR      r1,[r2,#0]
;;;1458       vSetCCR_GENERIC_REG1_CANMODE(eCANMode);
001cc4  e3a01103          MOV      r1,#0xc0000000
001cc8  e5911068          LDR      r1,[r1,#0x68]
001ccc  e7c31010          BFI      r1,r0,#0,#4
001cd0  e5821068          STR      r1,[r2,#0x68]
;;;1459   }
001cd4  e12fff1e          BX       lr
;;;1460   
                          ENDP

                  vCCR_SetECCMode PROC
;;;1462   /****************************************************************************/
;;;1463   void vCCR_SetECCMode(ccr_ecc_mode_e eECCMode)
001cd8  e51f1da0          LDR      r1,|L1.3904|
;;;1464   {
;;;1465       vCCR_PDS_UNLOCK();
001cdc  e3a02103          MOV      r2,#0xc0000000
001ce0  e5922000          LDR      r2,[r2,#0]
001ce4  e3a02103          MOV      r2,#0xc0000000
001ce8  e5821000          STR      r1,[r2,#0]
;;;1466       vSetCCR_GENERIC_REG1_ECCM(eECCMode);
001cec  e3a01103          MOV      r1,#0xc0000000
001cf0  e5911068          LDR      r1,[r1,#0x68]
001cf4  e7c51210          BFI      r1,r0,#4,#2
001cf8  e5821068          STR      r1,[r2,#0x68]
;;;1467   }
001cfc  e12fff1e          BX       lr
;;;1468   
                          ENDP

                  i32CCR_SetTBIODirection PROC
;;;1470   /****************************************************************************/
;;;1471   int32_t i32CCR_SetTBIODirection(ccr_tbio_channel_e eTBIOChannel, ccr_tbio_direction_e eDirection)
001d00  e92d4010          PUSH     {r4,lr}
;;;1472   {
001d04  e1a02000          MOV      r2,r0
;;;1473       int32_t i32Res = C_SUCCESS;
001d08  e3a00000          MOV      r0,#0
;;;1474   
;;;1475       switch(eTBIOChannel)
001d0c  e352000a          CMP      r2,#0xa
001d10  308ff102          ADDCC    pc,pc,r2,LSL #2
001d14  ea000061          B        |L1.7840|
001d18  ea000008          B        |L1.7488|
001d1c  ea000012          B        |L1.7532|
001d20  ea00001c          B        |L1.7576|
001d24  ea000026          B        |L1.7620|
001d28  ea00005c          B        |L1.7840|
001d2c  ea00005b          B        |L1.7840|
001d30  ea00002e          B        |L1.7664|
001d34  ea000038          B        |L1.7708|
001d38  ea000042          B        |L1.7752|
001d3c  ea00004c          B        |L1.7796|
                  |L1.7488|
;;;1476       {
;;;1477           case CCR_TBIO_0:
001d40  e320f000          NOP      
;;;1478               {
;;;1479                   vCCR_PDS_UNLOCK();
001d44  e51f3e0c          LDR      r3,|L1.3904|
001d48  e3a04103          MOV      r4,#0xc0000000
001d4c  e5944000          LDR      r4,[r4,#0]
001d50  e3a04103          MOV      r4,#0xc0000000
001d54  e5843000          STR      r3,[r4,#0]
;;;1480                   vSetCCR_GENERIC_REG1_TBIO0_DIR(eDirection);
001d58  e3a03103          MOV      r3,#0xc0000000
001d5c  e5933068          LDR      r3,[r3,#0x68]
001d60  e7c83411          BFI      r3,r1,#8,#1
001d64  e5843068          STR      r3,[r4,#0x68]
;;;1481               }
;;;1482               break;
001d68  ea00004f          B        |L1.7852|
                  |L1.7532|
;;;1483           case CCR_TBIO_1:
001d6c  e320f000          NOP      
;;;1484               {
;;;1485                   vCCR_PDS_UNLOCK();
001d70  e51f3e38          LDR      r3,|L1.3904|
001d74  e3a04103          MOV      r4,#0xc0000000
001d78  e5944000          LDR      r4,[r4,#0]
001d7c  e3a04103          MOV      r4,#0xc0000000
001d80  e5843000          STR      r3,[r4,#0]
;;;1486                   vSetCCR_GENERIC_REG1_TBIO1_DIR(eDirection);
001d84  e3a03103          MOV      r3,#0xc0000000
001d88  e5933068          LDR      r3,[r3,#0x68]
001d8c  e7c93491          BFI      r3,r1,#9,#1
001d90  e5843068          STR      r3,[r4,#0x68]
;;;1487               }
;;;1488               break;
001d94  ea000044          B        |L1.7852|
                  |L1.7576|
;;;1489           case CCR_TBIO_2:
001d98  e320f000          NOP      
;;;1490               {
;;;1491                   vCCR_PDS_UNLOCK();
001d9c  e51f3e64          LDR      r3,|L1.3904|
001da0  e3a04103          MOV      r4,#0xc0000000
001da4  e5944000          LDR      r4,[r4,#0]
001da8  e3a04103          MOV      r4,#0xc0000000
001dac  e5843000          STR      r3,[r4,#0]
;;;1492                   vSetCCR_GENERIC_REG1_TBIO2_DIR(eDirection);
001db0  e3a03103          MOV      r3,#0xc0000000
001db4  e5933068          LDR      r3,[r3,#0x68]
001db8  e7ca3511          BFI      r3,r1,#10,#1
001dbc  e5843068          STR      r3,[r4,#0x68]
;;;1493               }
;;;1494               break;
001dc0  ea000039          B        |L1.7852|
                  |L1.7620|
;;;1495           case CCR_TBIO_3:
001dc4  e320f000          NOP      
;;;1496               {
;;;1497                   vCCR_PDS_UNLOCK();
001dc8  e51f3e90          LDR      r3,|L1.3904|
001dcc  e3a04103          MOV      r4,#0xc0000000
001dd0  e5944000          LDR      r4,[r4,#0]
001dd4  e3a04103          MOV      r4,#0xc0000000
001dd8  e5843000          STR      r3,[r4,#0]
;;;1498                   vSetCCR_GENERIC_REG1_TBIO3_DIR(eDirection);
001ddc  e3a03103          MOV      r3,#0xc0000000
001de0  e5933068          LDR      r3,[r3,#0x68]
001de4  e7cb3591          BFI      r3,r1,#11,#1
001de8  e5843068          STR      r3,[r4,#0x68]
;;;1499               }
;;;1500               break;
001dec  ea00002e          B        |L1.7852|
                  |L1.7664|
;;;1501           case CCR_TBIO_6:
001df0  e320f000          NOP      
;;;1502               {
;;;1503                   vCCR_PDS_UNLOCK();
001df4  e51f3ebc          LDR      r3,|L1.3904|
001df8  e3a04103          MOV      r4,#0xc0000000
001dfc  e5944000          LDR      r4,[r4,#0]
001e00  e3a04103          MOV      r4,#0xc0000000
001e04  e5843000          STR      r3,[r4,#0]
;;;1504                   vSetCCR_GENERIC_REG1_TBIO6_DIR(eDirection);
001e08  e3a03103          MOV      r3,#0xc0000000
001e0c  e5933068          LDR      r3,[r3,#0x68]
001e10  e7cc3611          BFI      r3,r1,#12,#1
001e14  e5843068          STR      r3,[r4,#0x68]
;;;1505               }
;;;1506               break;
001e18  ea000023          B        |L1.7852|
                  |L1.7708|
;;;1507           case CCR_TBIO_7:
001e1c  e320f000          NOP      
;;;1508               {
;;;1509                   vCCR_PDS_UNLOCK();
001e20  e51f3ee8          LDR      r3,|L1.3904|
001e24  e3a04103          MOV      r4,#0xc0000000
001e28  e5944000          LDR      r4,[r4,#0]
001e2c  e3a04103          MOV      r4,#0xc0000000
001e30  e5843000          STR      r3,[r4,#0]
;;;1510                   vSetCCR_GENERIC_REG1_TBIO7_DIR(eDirection);
001e34  e3a03103          MOV      r3,#0xc0000000
001e38  e5933068          LDR      r3,[r3,#0x68]
001e3c  e7cd3691          BFI      r3,r1,#13,#1
001e40  e5843068          STR      r3,[r4,#0x68]
;;;1511               }
;;;1512               break;
001e44  ea000018          B        |L1.7852|
                  |L1.7752|
;;;1513           case CCR_TBIO_8:
001e48  e320f000          NOP      
;;;1514               {
;;;1515                   vCCR_PDS_UNLOCK();
001e4c  e51f3f14          LDR      r3,|L1.3904|
001e50  e3a04103          MOV      r4,#0xc0000000
001e54  e5944000          LDR      r4,[r4,#0]
001e58  e3a04103          MOV      r4,#0xc0000000
001e5c  e5843000          STR      r3,[r4,#0]
;;;1516                   vSetCCR_GENERIC_REG1_TBIO8_DIR(eDirection);
001e60  e3a03103          MOV      r3,#0xc0000000
001e64  e5933068          LDR      r3,[r3,#0x68]
001e68  e7ce3711          BFI      r3,r1,#14,#1
001e6c  e5843068          STR      r3,[r4,#0x68]
;;;1517               }
;;;1518               break;
001e70  ea00000d          B        |L1.7852|
                  |L1.7796|
;;;1519           case CCR_TBIO_9:
001e74  e320f000          NOP      
;;;1520               {
;;;1521                   vCCR_PDS_UNLOCK();
001e78  e51f3f40          LDR      r3,|L1.3904|
001e7c  e3a04103          MOV      r4,#0xc0000000
001e80  e5944000          LDR      r4,[r4,#0]
001e84  e3a04103          MOV      r4,#0xc0000000
001e88  e5843000          STR      r3,[r4,#0]
;;;1522                   vSetCCR_GENERIC_REG1_TBIO9_SEL(eDirection);
001e8c  e3a03103          MOV      r3,#0xc0000000
001e90  e5933068          LDR      r3,[r3,#0x68]
001e94  e7cf3791          BFI      r3,r1,#15,#1
001e98  e5843068          STR      r3,[r4,#0x68]
;;;1523               }
;;;1524               break;
001e9c  ea000002          B        |L1.7852|
                  |L1.7840|
;;;1525           default:
001ea0  e320f000          NOP      
;;;1526               {
;;;1527                   i32Res = C_FAILED;
001ea4  e3e00000          MVN      r0,#0
;;;1528               }
;;;1529               break;
001ea8  e320f000          NOP      
                  |L1.7852|
001eac  e320f000          NOP                            ;1482
;;;1530       }
;;;1531   
;;;1532       return i32Res;
;;;1533   }
001eb0  e8bd8010          POP      {r4,pc}
;;;1534   
                          ENDP

                  vCCR_SetInputForComplexTimer4 PROC
;;;1536   /****************************************************************************/
;;;1537   void vCCR_SetInputForComplexTimer4(ccr_tbin_source_ctimer4_e eSource)
001eb4  e51f1f7c          LDR      r1,|L1.3904|
;;;1538   {
;;;1539       vCCR_PDS_UNLOCK();
001eb8  e3a02103          MOV      r2,#0xc0000000
001ebc  e5922000          LDR      r2,[r2,#0]
001ec0  e3a02103          MOV      r2,#0xc0000000
001ec4  e5821000          STR      r1,[r2,#0]
;;;1540       vSetCCR_GENERIC_REG1_TBIN4_SEL(eSource);
001ec8  e3a01103          MOV      r1,#0xc0000000
001ecc  e5911068          LDR      r1,[r1,#0x68]
001ed0  e7d31810          BFI      r1,r0,#16,#4
001ed4  e5821068          STR      r1,[r2,#0x68]
;;;1541   }
001ed8  e12fff1e          BX       lr
;;;1542   
                          ENDP

                  vCCR_SetInputForComplexTimer5 PROC
;;;1544   /****************************************************************************/
;;;1545   void vCCR_SetInputForComplexTimer5(ccr_tbin_source_ctimer5_e eSource)
001edc  e51f1fa4          LDR      r1,|L1.3904|
;;;1546   {
;;;1547       vCCR_PDS_UNLOCK();
001ee0  e3a02103          MOV      r2,#0xc0000000
001ee4  e5922000          LDR      r2,[r2,#0]
001ee8  e3a02103          MOV      r2,#0xc0000000
001eec  e5821000          STR      r1,[r2,#0]
;;;1548       vSetCCR_GENERIC_REG1_TBIN5_SEL(eSource);
001ef0  e3a01103          MOV      r1,#0xc0000000
001ef4  e5911068          LDR      r1,[r1,#0x68]
001ef8  e7d71a10          BFI      r1,r0,#20,#4
001efc  e5821068          STR      r1,[r2,#0x68]
;;;1549   }
001f00  e12fff1e          BX       lr
;;;1550   
                          ENDP

                  vCCR_EnableGDC0Interface PROC
;;;1552   /****************************************************************************/
;;;1553   void vCCR_EnableGDC0Interface(ccr_enable_e eEn)
001f04  e51f1fcc          LDR      r1,|L1.3904|
;;;1554   {
;;;1555       vCCR_PDS_UNLOCK();
001f08  e3a02103          MOV      r2,#0xc0000000
001f0c  e5922000          LDR      r2,[r2,#0]
001f10  e3a02103          MOV      r2,#0xc0000000
001f14  e5821000          STR      r1,[r2,#0]
;;;1556       vSetCCR_GENERIC_REG1_DISP0ON(eEn);
001f18  e3a01103          MOV      r1,#0xc0000000
001f1c  e5911068          LDR      r1,[r1,#0x68]
001f20  e7d81c10          BFI      r1,r0,#24,#1
001f24  e5821068          STR      r1,[r2,#0x68]
;;;1557   }
001f28  e12fff1e          BX       lr
;;;1558   
                          ENDP

                  vCCR_EnableGDC1Interface PROC
;;;1560   /****************************************************************************/
;;;1561   void vCCR_EnableGDC1Interface(ccr_enable_e eEn)
001f2c  e51f1ff4          LDR      r1,|L1.3904|
;;;1562   {
;;;1563       vCCR_PDS_UNLOCK();
001f30  e3a02103          MOV      r2,#0xc0000000
001f34  e5922000          LDR      r2,[r2,#0]
001f38  e3a02103          MOV      r2,#0xc0000000
001f3c  e5821000          STR      r1,[r2,#0]
;;;1564       vSetCCR_GENERIC_REG1_DISP1ON(eEn);
001f40  e3a01103          MOV      r1,#0xc0000000
001f44  e5911068          LDR      r1,[r1,#0x68]
001f48  e7d91c90          BFI      r1,r0,#25,#1
001f4c  e5821068          STR      r1,[r2,#0x68]
;;;1565   }
001f50  e12fff1e          BX       lr
;;;1566   
                          ENDP

                  vCCR_EnableGDCPanelInterface PROC
;;;1568   /****************************************************************************/
;;;1569   void vCCR_EnableGDCPanelInterface(ccr_enable_e eEn)
001f54  e59f1614          LDR      r1,|L1.9584|
;;;1570   {
;;;1571       vCCR_PDS_UNLOCK();
001f58  e3a02103          MOV      r2,#0xc0000000
001f5c  e5922000          LDR      r2,[r2,#0]
001f60  e3a02103          MOV      r2,#0xc0000000
001f64  e5821000          STR      r1,[r2,#0]
;;;1572       vSetCCR_GENERIC_REG1_PNLON(eEn);
001f68  e3a01103          MOV      r1,#0xc0000000
001f6c  e5911068          LDR      r1,[r1,#0x68]
001f70  e7da1d10          BFI      r1,r0,#26,#1
001f74  e5821068          STR      r1,[r2,#0x68]
;;;1573   }
001f78  e12fff1e          BX       lr
;;;1574   
                          ENDP

                  vCCR_SetGDCSynchronisation PROC
;;;1576   /****************************************************************************/
;;;1577   void vCCR_SetGDCSynchronisation(ccr_gdc_sync_e eGDCSync)
001f7c  e59f15ec          LDR      r1,|L1.9584|
;;;1578   {
;;;1579       vCCR_PDS_UNLOCK();
001f80  e3a02103          MOV      r2,#0xc0000000
001f84  e5922000          LDR      r2,[r2,#0]
001f88  e3a02103          MOV      r2,#0xc0000000
001f8c  e5821000          STR      r1,[r2,#0]
;;;1580       vSetCCR_GENERIC_REG1_S0EXTS1(eGDCSync);
001f90  e3a01103          MOV      r1,#0xc0000000
001f94  e5911068          LDR      r1,[r1,#0x68]
001f98  e7db1d90          BFI      r1,r0,#27,#1
001f9c  e5821068          STR      r1,[r2,#0x68]
;;;1581   }
001fa0  e12fff1e          BX       lr
;;;1582   
                          ENDP

                  i32CCR_SetNORAddressMask PROC
;;;1584   /****************************************************************************/
;;;1585   int32_t i32CCR_SetNORAddressMask(ccr_nor_channel_e eChannel, uint16_t u16AddressMask)
001fa4  e92d4010          PUSH     {r4,lr}
;;;1586   {
001fa8  e1a02000          MOV      r2,r0
;;;1587       int32_t i32Res = C_SUCCESS;
001fac  e3a00000          MOV      r0,#0
;;;1588   
;;;1589       switch(eChannel)
001fb0  e3520000          CMP      r2,#0
001fb4  0a000002          BEQ      |L1.8132|
001fb8  e3520001          CMP      r2,#1
001fbc  1a000016          BNE      |L1.8220|
001fc0  ea00000a          B        |L1.8176|
                  |L1.8132|
;;;1590       {
;;;1591           case CCR_NOR_CHANNEL_0:
001fc4  e320f000          NOP      
;;;1592               {
;;;1593                   vCCR_PDS_UNLOCK();
001fc8  e59f35a0          LDR      r3,|L1.9584|
001fcc  e3a04103          MOV      r4,#0xc0000000
001fd0  e5944000          LDR      r4,[r4,#0]
001fd4  e3a04103          MOV      r4,#0xc0000000
001fd8  e5843000          STR      r3,[r4,#0]
;;;1594                   vSetCCR_GENERIC_REG2_ADDR_MASK0_0(u16AddressMask);
001fdc  e3a03103          MOV      r3,#0xc0000000
001fe0  e593306c          LDR      r3,[r3,#0x6c]
001fe4  e7c73011          BFI      r3,r1,#0,#8
001fe8  e584306c          STR      r3,[r4,#0x6c]
;;;1595               }
;;;1596               break;
001fec  ea00000d          B        |L1.8232|
                  |L1.8176|
;;;1597           case CCR_NOR_CHANNEL_1:
001ff0  e320f000          NOP      
;;;1598               {
;;;1599                   vCCR_PDS_UNLOCK();
001ff4  e59f3574          LDR      r3,|L1.9584|
001ff8  e3a04103          MOV      r4,#0xc0000000
001ffc  e5944000          LDR      r4,[r4,#0]
002000  e3a04103          MOV      r4,#0xc0000000
002004  e5843000          STR      r3,[r4,#0]
;;;1600                   vSetCCR_GENERIC_REG2_ADDR_MASK0_1(u16AddressMask);
002008  e3a03103          MOV      r3,#0xc0000000
00200c  e593306c          LDR      r3,[r3,#0x6c]
002010  e7d73811          BFI      r3,r1,#16,#8
002014  e584306c          STR      r3,[r4,#0x6c]
;;;1601               }
;;;1602               break;
002018  ea000002          B        |L1.8232|
                  |L1.8220|
;;;1603           default:
00201c  e320f000          NOP      
;;;1604               {
;;;1605                   i32Res = C_FAILED;
002020  e3e00000          MVN      r0,#0
;;;1606               }
;;;1607               break;
002024  e320f000          NOP      
                  |L1.8232|
002028  e320f000          NOP                            ;1596
;;;1608       }
;;;1609   
;;;1610       return i32Res;
;;;1611   }
00202c  e8bd8010          POP      {r4,pc}
;;;1612   
                          ENDP

                  i32CCR_SetNORAddressMatch PROC
;;;1614   /****************************************************************************/
;;;1615   int32_t i32CCR_SetNORAddressMatch(ccr_nor_channel_e eChannel, uint16_t u16AddressMatch)
002030  e92d4010          PUSH     {r4,lr}
;;;1616   {
002034  e1a02000          MOV      r2,r0
;;;1617       int32_t i32Res = C_SUCCESS;
002038  e3a00000          MOV      r0,#0
;;;1618   
;;;1619       switch(eChannel)
00203c  e3520000          CMP      r2,#0
002040  0a000002          BEQ      |L1.8272|
002044  e3520001          CMP      r2,#1
002048  1a000016          BNE      |L1.8360|
00204c  ea00000a          B        |L1.8316|
                  |L1.8272|
;;;1620       {
;;;1621           case CCR_NOR_CHANNEL_0:
002050  e320f000          NOP      
;;;1622               {
;;;1623                   vCCR_PDS_UNLOCK();
002054  e59f3514          LDR      r3,|L1.9584|
002058  e3a04103          MOV      r4,#0xc0000000
00205c  e5944000          LDR      r4,[r4,#0]
002060  e3a04103          MOV      r4,#0xc0000000
002064  e5843000          STR      r3,[r4,#0]
;;;1624                   vSetCCR_GENERIC_REG2_ADDR_MATCH0_0(u16AddressMatch);
002068  e3a03103          MOV      r3,#0xc0000000
00206c  e593306c          LDR      r3,[r3,#0x6c]
002070  e7cf3411          BFI      r3,r1,#8,#8
002074  e584306c          STR      r3,[r4,#0x6c]
;;;1625               }
;;;1626               break;
002078  ea00000d          B        |L1.8372|
                  |L1.8316|
;;;1627           case CCR_NOR_CHANNEL_1:
00207c  e320f000          NOP      
;;;1628               {
;;;1629                   vCCR_PDS_UNLOCK();
002080  e59f34e8          LDR      r3,|L1.9584|
002084  e3a04103          MOV      r4,#0xc0000000
002088  e5944000          LDR      r4,[r4,#0]
00208c  e3a04103          MOV      r4,#0xc0000000
002090  e5843000          STR      r3,[r4,#0]
;;;1630                   vSetCCR_GENERIC_REG2_ADDR_MATCH0_1(u16AddressMatch);
002094  e3a03103          MOV      r3,#0xc0000000
002098  e593306c          LDR      r3,[r3,#0x6c]
00209c  e7df3c11          BFI      r3,r1,#24,#8
0020a0  e584306c          STR      r3,[r4,#0x6c]
;;;1631               }
;;;1632               break;
0020a4  ea000002          B        |L1.8372|
                  |L1.8360|
;;;1633           default:
0020a8  e320f000          NOP      
;;;1634               {
;;;1635                   i32Res = C_FAILED;
0020ac  e3e00000          MVN      r0,#0
;;;1636               }
;;;1637               break;
0020b0  e320f000          NOP      
                  |L1.8372|
0020b4  e320f000          NOP                            ;1626
;;;1638       }
;;;1639   
;;;1640       return i32Res;
;;;1641   }
0020b8  e8bd8010          POP      {r4,pc}
;;;1642   
                          ENDP

                  i32CCR_SetNANDAddressMask PROC
;;;1644   /****************************************************************************/
;;;1645   int32_t i32CCR_SetNANDAddressMask(ccr_nand_channel_e eChannel, uint16_t u16AddressMask)
0020bc  e92d4010          PUSH     {r4,lr}
;;;1646   {
0020c0  e1a02000          MOV      r2,r0
;;;1647       int32_t i32Res = C_SUCCESS;
0020c4  e3a00000          MOV      r0,#0
;;;1648   
;;;1649       switch(eChannel)
0020c8  e3520000          CMP      r2,#0
0020cc  0a000002          BEQ      |L1.8412|
0020d0  e3520001          CMP      r2,#1
0020d4  1a000016          BNE      |L1.8500|
0020d8  ea00000a          B        |L1.8456|
                  |L1.8412|
;;;1650       {
;;;1651           case CCR_NAND_CHANNEL_0:
0020dc  e320f000          NOP      
;;;1652               {
;;;1653                   vCCR_PDS_UNLOCK();
0020e0  e59f3488          LDR      r3,|L1.9584|
0020e4  e3a04103          MOV      r4,#0xc0000000
0020e8  e5944000          LDR      r4,[r4,#0]
0020ec  e3a04103          MOV      r4,#0xc0000000
0020f0  e5843000          STR      r3,[r4,#0]
;;;1654                   vSetCCR_GENERIC_REG3_ADDR_MASK1_0(u16AddressMask);
0020f4  e3a03103          MOV      r3,#0xc0000000
0020f8  e5933070          LDR      r3,[r3,#0x70]
0020fc  e7c73011          BFI      r3,r1,#0,#8
002100  e5843070          STR      r3,[r4,#0x70]
;;;1655               }
;;;1656               break;
002104  ea00000d          B        |L1.8512|
                  |L1.8456|
;;;1657           case CCR_NAND_CHANNEL_1:
002108  e320f000          NOP      
;;;1658               {
;;;1659                   vCCR_PDS_UNLOCK();
00210c  e59f345c          LDR      r3,|L1.9584|
002110  e3a04103          MOV      r4,#0xc0000000
002114  e5944000          LDR      r4,[r4,#0]
002118  e3a04103          MOV      r4,#0xc0000000
00211c  e5843000          STR      r3,[r4,#0]
;;;1660                   vSetCCR_GENERIC_REG3_ADDR_MASK1_1(u16AddressMask);
002120  e3a03103          MOV      r3,#0xc0000000
002124  e5933070          LDR      r3,[r3,#0x70]
002128  e7d73811          BFI      r3,r1,#16,#8
00212c  e5843070          STR      r3,[r4,#0x70]
;;;1661               }
;;;1662               break;
002130  ea000002          B        |L1.8512|
                  |L1.8500|
;;;1663           default:
002134  e320f000          NOP      
;;;1664               {
;;;1665                   i32Res = C_FAILED;
002138  e3e00000          MVN      r0,#0
;;;1666               }
;;;1667               break;
00213c  e320f000          NOP      
                  |L1.8512|
002140  e320f000          NOP                            ;1656
;;;1668       }
;;;1669   
;;;1670       return i32Res;
;;;1671   }
002144  e8bd8010          POP      {r4,pc}
;;;1672   
                          ENDP

                  i32CCR_SetNANDAddressMatch PROC
;;;1674   /****************************************************************************/
;;;1675   int32_t i32CCR_SetNANDAddressMatch(ccr_nand_channel_e eChannel, uint16_t u16AddressMatch)
002148  e92d4010          PUSH     {r4,lr}
;;;1676   {
00214c  e1a02000          MOV      r2,r0
;;;1677       int32_t i32Res = C_SUCCESS;
002150  e3a00000          MOV      r0,#0
;;;1678   
;;;1679       switch(eChannel)
002154  e3520000          CMP      r2,#0
002158  0a000002          BEQ      |L1.8552|
00215c  e3520001          CMP      r2,#1
002160  1a000016          BNE      |L1.8640|
002164  ea00000a          B        |L1.8596|
                  |L1.8552|
;;;1680       {
;;;1681           case CCR_NAND_CHANNEL_0:
002168  e320f000          NOP      
;;;1682               {
;;;1683                   vCCR_PDS_UNLOCK();
00216c  e59f33fc          LDR      r3,|L1.9584|
002170  e3a04103          MOV      r4,#0xc0000000
002174  e5944000          LDR      r4,[r4,#0]
002178  e3a04103          MOV      r4,#0xc0000000
00217c  e5843000          STR      r3,[r4,#0]
;;;1684                   vSetCCR_GENERIC_REG3_ADDR_MATCH1_0(u16AddressMatch);
002180  e3a03103          MOV      r3,#0xc0000000
002184  e5933070          LDR      r3,[r3,#0x70]
002188  e7cf3411          BFI      r3,r1,#8,#8
00218c  e5843070          STR      r3,[r4,#0x70]
;;;1685               }
;;;1686               break;
002190  ea00000d          B        |L1.8652|
                  |L1.8596|
;;;1687           case CCR_NAND_CHANNEL_1:
002194  e320f000          NOP      
;;;1688               {
;;;1689                   vCCR_PDS_UNLOCK();
002198  e59f33d0          LDR      r3,|L1.9584|
00219c  e3a04103          MOV      r4,#0xc0000000
0021a0  e5944000          LDR      r4,[r4,#0]
0021a4  e3a04103          MOV      r4,#0xc0000000
0021a8  e5843000          STR      r3,[r4,#0]
;;;1690                   vSetCCR_GENERIC_REG3_ADDR_MATCH1_1(u16AddressMatch);
0021ac  e3a03103          MOV      r3,#0xc0000000
0021b0  e5933070          LDR      r3,[r3,#0x70]
0021b4  e7df3c11          BFI      r3,r1,#24,#8
0021b8  e5843070          STR      r3,[r4,#0x70]
;;;1691               }
;;;1692               break;
0021bc  ea000002          B        |L1.8652|
                  |L1.8640|
;;;1693           default:
0021c0  e320f000          NOP      
;;;1694               {
;;;1695                   i32Res = C_FAILED;
0021c4  e3e00000          MVN      r0,#0
;;;1696               }
;;;1697               break;
0021c8  e320f000          NOP      
                  |L1.8652|
0021cc  e320f000          NOP                            ;1686
;;;1698       }
;;;1699   
;;;1700       return i32Res;
;;;1701   }
0021d0  e8bd8010          POP      {r4,pc}
;;;1702   
                          ENDP

                  vCCR_SetNORChipSelect PROC
;;;1704   /****************************************************************************/
;;;1705   void  vCCR_SetNORChipSelect(uint32_t u32Value)
0021d4  e59f1394          LDR      r1,|L1.9584|
;;;1706   {
;;;1707       vCCR_PDS_UNLOCK();
0021d8  e3a02103          MOV      r2,#0xc0000000
0021dc  e5922000          LDR      r2,[r2,#0]
0021e0  e3a02103          MOV      r2,#0xc0000000
0021e4  e5821000          STR      r1,[r2,#0]
;;;1708   
;;;1709       /* write complete register for NOT chip select:*/
;;;1710       vSetCCR_GENERIC_REG2(u32Value);
0021e8  e3a01103          MOV      r1,#0xc0000000
0021ec  e581006c          STR      r0,[r1,#0x6c]
;;;1711   }
0021f0  e12fff1e          BX       lr
;;;1712   
                          ENDP

                  vCCR_SetNANDChipSelect PROC
;;;1714   /****************************************************************************/
;;;1715   void  vCCR_SetNANDChipSelect(uint32_t u32Value)
0021f4  e59f1374          LDR      r1,|L1.9584|
;;;1716   {
;;;1717       vCCR_PDS_UNLOCK();
0021f8  e3a02103          MOV      r2,#0xc0000000
0021fc  e5922000          LDR      r2,[r2,#0]
002200  e3a02103          MOV      r2,#0xc0000000
002204  e5821000          STR      r1,[r2,#0]
;;;1718   
;;;1719       /* write complete register for NOT chip select:*/
;;;1720       vSetCCR_GENERIC_REG3(u32Value);
002208  e3a01103          MOV      r1,#0xc0000000
00220c  e5810070          STR      r0,[r1,#0x70]
;;;1721   }
002210  e12fff1e          BX       lr
;;;1722   
                          ENDP

                  i32CCR_EnableSRAMBitErrorInspection PROC
;;;1724   /****************************************************************************/
;;;1725   int32_t i32CCR_EnableSRAMBitErrorInspection(ccr_sram_channel_e eChannel, ccr_enable_e eEn)
002214  e92d4010          PUSH     {r4,lr}
;;;1726   {
002218  e1a02000          MOV      r2,r0
;;;1727       int32_t i32Res = C_SUCCESS;
00221c  e3a00000          MOV      r0,#0
;;;1728   
;;;1729       switch(eChannel)
002220  e3520000          CMP      r2,#0
002224  0a000006          BEQ      |L1.8772|
002228  e3520001          CMP      r2,#1
00222c  0a00000f          BEQ      |L1.8816|
002230  e3520002          CMP      r2,#2
002234  0a000018          BEQ      |L1.8860|
002238  e3520003          CMP      r2,#3
00223c  1a00002c          BNE      |L1.8948|
002240  ea000020          B        |L1.8904|
                  |L1.8772|
;;;1730       {
;;;1731           case CCR_SRAM_CHANNEL_0:
002244  e320f000          NOP      
;;;1732               {
;;;1733                   vCCR_PDS_UNLOCK();
002248  e59f3320          LDR      r3,|L1.9584|
00224c  e3a04103          MOV      r4,#0xc0000000
002250  e5944000          LDR      r4,[r4,#0]
002254  e3a04103          MOV      r4,#0xc0000000
002258  e5843000          STR      r3,[r4,#0]
;;;1734                   vSetCCR_GENERIC_REG4_BEINJ0(eEn);
00225c  e3a03103          MOV      r3,#0xc0000000
002260  e5933074          LDR      r3,[r3,#0x74]
002264  e7c03011          BFI      r3,r1,#0,#1
002268  e5843074          STR      r3,[r4,#0x74]
;;;1735               }
;;;1736               break;
00226c  ea000023          B        |L1.8960|
                  |L1.8816|
;;;1737           case CCR_SRAM_CHANNEL_1:
002270  e320f000          NOP      
;;;1738               {
;;;1739                   vCCR_PDS_UNLOCK();
002274  e59f32f4          LDR      r3,|L1.9584|
002278  e3a04103          MOV      r4,#0xc0000000
00227c  e5944000          LDR      r4,[r4,#0]
002280  e3a04103          MOV      r4,#0xc0000000
002284  e5843000          STR      r3,[r4,#0]
;;;1740                   vSetCCR_GENERIC_REG4_BEINJ1(eEn);
002288  e3a03103          MOV      r3,#0xc0000000
00228c  e5933074          LDR      r3,[r3,#0x74]
002290  e7d03811          BFI      r3,r1,#16,#1
002294  e5843074          STR      r3,[r4,#0x74]
;;;1741               }
;;;1742               break;
002298  ea000018          B        |L1.8960|
                  |L1.8860|
;;;1743           case CCR_SRAM_CHANNEL_2:
00229c  e320f000          NOP      
;;;1744               {
;;;1745                   vCCR_PDS_UNLOCK();
0022a0  e59f32c8          LDR      r3,|L1.9584|
0022a4  e3a04103          MOV      r4,#0xc0000000
0022a8  e5944000          LDR      r4,[r4,#0]
0022ac  e3a04103          MOV      r4,#0xc0000000
0022b0  e5843000          STR      r3,[r4,#0]
;;;1746                   vSetCCR_GENERIC_REG5_BEINJ2(eEn);
0022b4  e3a03103          MOV      r3,#0xc0000000
0022b8  e5933078          LDR      r3,[r3,#0x78]
0022bc  e7c03011          BFI      r3,r1,#0,#1
0022c0  e5843078          STR      r3,[r4,#0x78]
;;;1747               }
;;;1748               break;
0022c4  ea00000d          B        |L1.8960|
                  |L1.8904|
;;;1749           case CCR_SRAM_CHANNEL_3:
0022c8  e320f000          NOP      
;;;1750               {
;;;1751                   vCCR_PDS_UNLOCK();
0022cc  e59f329c          LDR      r3,|L1.9584|
0022d0  e3a04103          MOV      r4,#0xc0000000
0022d4  e5944000          LDR      r4,[r4,#0]
0022d8  e3a04103          MOV      r4,#0xc0000000
0022dc  e5843000          STR      r3,[r4,#0]
;;;1752                   vSetCCR_GENERIC_REG5_BEINJ3(eEn);
0022e0  e3a03103          MOV      r3,#0xc0000000
0022e4  e5933078          LDR      r3,[r3,#0x78]
0022e8  e7d03811          BFI      r3,r1,#16,#1
0022ec  e5843078          STR      r3,[r4,#0x78]
;;;1753               }
;;;1754               break;
0022f0  ea000002          B        |L1.8960|
                  |L1.8948|
;;;1755           default:
0022f4  e320f000          NOP      
;;;1756               {
;;;1757                   i32Res = C_FAILED;
0022f8  e3e00000          MVN      r0,#0
;;;1758               }
;;;1759               break;
0022fc  e320f000          NOP      
                  |L1.8960|
002300  e320f000          NOP                            ;1736
;;;1760       }
;;;1761   
;;;1762       return i32Res;
;;;1763   }
002304  e8bd8010          POP      {r4,pc}
;;;1764   
                          ENDP

                  i32CCR_SetSRAMBitErrorInspectionConfiguration PROC
;;;1766   /****************************************************************************/
;;;1767   int32_t i32CCR_SetSRAMBitErrorInspectionConfiguration(ccr_sram_channel_e eChannel, ccr_sram_bit_error_insp_config_st * pstConfig)
002308  e92d4010          PUSH     {r4,lr}
;;;1768   {
00230c  e1a02000          MOV      r2,r0
;;;1769       int32_t i32Res = C_SUCCESS;
002310  e3a00000          MOV      r0,#0
;;;1770   
;;;1771       if (0x00 != pstConfig)
002314  e3510000          CMP      r1,#0
002318  0a000099          BEQ      |L1.9604|
;;;1772       {
;;;1773           switch(eChannel)
00231c  e3520000          CMP      r2,#0
002320  0a000006          BEQ      |L1.9024|
002324  e3520001          CMP      r2,#1
002328  0a000025          BEQ      |L1.9156|
00232c  e3520002          CMP      r2,#2
002330  0a000044          BEQ      |L1.9288|
002334  e3520003          CMP      r2,#3
002338  1a00008d          BNE      |L1.9588|
00233c  ea000062          B        |L1.9420|
                  |L1.9024|
;;;1774           {
;;;1775               case CCR_SRAM_CHANNEL_0:
002340  e320f000          NOP      
;;;1776                   {
;;;1777                       vCCR_PDS_UNLOCK();
002344  e59f3224          LDR      r3,|L1.9584|
002348  e3a04103          MOV      r4,#0xc0000000
00234c  e5944000          LDR      r4,[r4,#0]
002350  e3a04103          MOV      r4,#0xc0000000
002354  e5843000          STR      r3,[r4,#0]
;;;1778                       vSetCCR_GENERIC_REG4_BEPA0(pstConfig -> u8PosFirstError);
002358  e5d14000          LDRB     r4,[r1,#0]
00235c  e3a03103          MOV      r3,#0xc0000000
002360  e5933074          LDR      r3,[r3,#0x74]
002364  e7c43094          BFI      r3,r4,#1,#4
002368  e3a04103          MOV      r4,#0xc0000000
00236c  e5843074          STR      r3,[r4,#0x74]
;;;1779                       vCCR_PDS_UNLOCK();
002370  e59f31f8          LDR      r3,|L1.9584|
002374  e5944000          LDR      r4,[r4,#0]
002378  e3a04103          MOV      r4,#0xc0000000
00237c  e5843000          STR      r3,[r4,#0]
;;;1780                       vSetCCR_GENERIC_REG4_BEPB0(pstConfig -> u8PosSecondError);
002380  e5d14001          LDRB     r4,[r1,#1]
002384  e3a03103          MOV      r3,#0xc0000000
002388  e5933074          LDR      r3,[r3,#0x74]
00238c  e7c83294          BFI      r3,r4,#5,#4
002390  e3a04103          MOV      r4,#0xc0000000
002394  e5843074          STR      r3,[r4,#0x74]
;;;1781                       vCCR_PDS_UNLOCK();
002398  e59f31d0          LDR      r3,|L1.9584|
00239c  e5944000          LDR      r4,[r4,#0]
0023a0  e3a04103          MOV      r4,#0xc0000000
0023a4  e5843000          STR      r3,[r4,#0]
;;;1782                       vSetCCR_GENERIC_REG4_BEBSEL0(pstConfig -> u8ByteSelect);
0023a8  e5d14002          LDRB     r4,[r1,#2]
0023ac  e3a03103          MOV      r3,#0xc0000000
0023b0  e5933074          LDR      r3,[r3,#0x74]
0023b4  e7cb3494          BFI      r3,r4,#9,#3
0023b8  e3a04103          MOV      r4,#0xc0000000
0023bc  e5843074          STR      r3,[r4,#0x74]
;;;1783                   }
;;;1784                   break;
0023c0  ea00006e          B        |L1.9600|
                  |L1.9156|
;;;1785               case CCR_SRAM_CHANNEL_1:
0023c4  e320f000          NOP      
;;;1786                   {
;;;1787                       vCCR_PDS_UNLOCK();
0023c8  e59f31a0          LDR      r3,|L1.9584|
0023cc  e3a04103          MOV      r4,#0xc0000000
0023d0  e5944000          LDR      r4,[r4,#0]
0023d4  e3a04103          MOV      r4,#0xc0000000
0023d8  e5843000          STR      r3,[r4,#0]
;;;1788                       vSetCCR_GENERIC_REG4_BEPA1(pstConfig -> u8PosFirstError);
0023dc  e5d14000          LDRB     r4,[r1,#0]
0023e0  e3a03103          MOV      r3,#0xc0000000
0023e4  e5933074          LDR      r3,[r3,#0x74]
0023e8  e7d43894          BFI      r3,r4,#17,#4
0023ec  e3a04103          MOV      r4,#0xc0000000
0023f0  e5843074          STR      r3,[r4,#0x74]
;;;1789                       vCCR_PDS_UNLOCK();
0023f4  e59f3174          LDR      r3,|L1.9584|
0023f8  e5944000          LDR      r4,[r4,#0]
0023fc  e3a04103          MOV      r4,#0xc0000000
002400  e5843000          STR      r3,[r4,#0]
;;;1790                       vSetCCR_GENERIC_REG4_BEPB1(pstConfig -> u8PosSecondError);
002404  e5d14001          LDRB     r4,[r1,#1]
002408  e3a03103          MOV      r3,#0xc0000000
00240c  e5933074          LDR      r3,[r3,#0x74]
002410  e7d83a94          BFI      r3,r4,#21,#4
002414  e3a04103          MOV      r4,#0xc0000000
002418  e5843074          STR      r3,[r4,#0x74]
;;;1791                       vCCR_PDS_UNLOCK();
00241c  e59f314c          LDR      r3,|L1.9584|
002420  e5944000          LDR      r4,[r4,#0]
002424  e3a04103          MOV      r4,#0xc0000000
002428  e5843000          STR      r3,[r4,#0]
;;;1792                       vSetCCR_GENERIC_REG4_BEBSEL1(pstConfig -> u8ByteSelect);
00242c  e5d14002          LDRB     r4,[r1,#2]
002430  e3a03103          MOV      r3,#0xc0000000
002434  e5933074          LDR      r3,[r3,#0x74]
002438  e7db3c94          BFI      r3,r4,#25,#3
00243c  e3a04103          MOV      r4,#0xc0000000
002440  e5843074          STR      r3,[r4,#0x74]
;;;1793                   }
;;;1794                   break;
002444  ea00004d          B        |L1.9600|
                  |L1.9288|
;;;1795               case CCR_SRAM_CHANNEL_2:
002448  e320f000          NOP      
;;;1796                   {
;;;1797                       vCCR_PDS_UNLOCK();
00244c  e59f311c          LDR      r3,|L1.9584|
002450  e3a04103          MOV      r4,#0xc0000000
002454  e5944000          LDR      r4,[r4,#0]
002458  e3a04103          MOV      r4,#0xc0000000
00245c  e5843000          STR      r3,[r4,#0]
;;;1798                       vSetCCR_GENERIC_REG5_BEPA2(pstConfig -> u8PosFirstError);
002460  e5d14000          LDRB     r4,[r1,#0]
002464  e3a03103          MOV      r3,#0xc0000000
002468  e5933078          LDR      r3,[r3,#0x78]
00246c  e7c43094          BFI      r3,r4,#1,#4
002470  e3a04103          MOV      r4,#0xc0000000
002474  e5843078          STR      r3,[r4,#0x78]
;;;1799                       vCCR_PDS_UNLOCK();
002478  e59f30f0          LDR      r3,|L1.9584|
00247c  e5944000          LDR      r4,[r4,#0]
002480  e3a04103          MOV      r4,#0xc0000000
002484  e5843000          STR      r3,[r4,#0]
;;;1800                       vSetCCR_GENERIC_REG5_BEPB2(pstConfig -> u8PosSecondError);
002488  e5d14001          LDRB     r4,[r1,#1]
00248c  e3a03103          MOV      r3,#0xc0000000
002490  e5933078          LDR      r3,[r3,#0x78]
002494  e7c83294          BFI      r3,r4,#5,#4
002498  e3a04103          MOV      r4,#0xc0000000
00249c  e5843078          STR      r3,[r4,#0x78]
;;;1801                       vCCR_PDS_UNLOCK();
0024a0  e59f30c8          LDR      r3,|L1.9584|
0024a4  e5944000          LDR      r4,[r4,#0]
0024a8  e3a04103          MOV      r4,#0xc0000000
0024ac  e5843000          STR      r3,[r4,#0]
;;;1802                       vSetCCR_GENERIC_REG5_BEBSEL2(pstConfig -> u8ByteSelect);
0024b0  e5d14002          LDRB     r4,[r1,#2]
0024b4  e3a03103          MOV      r3,#0xc0000000
0024b8  e5933078          LDR      r3,[r3,#0x78]
0024bc  e7cb3494          BFI      r3,r4,#9,#3
0024c0  e3a04103          MOV      r4,#0xc0000000
0024c4  e5843078          STR      r3,[r4,#0x78]
;;;1803                   }
;;;1804                   break;
0024c8  ea00002c          B        |L1.9600|
                  |L1.9420|
;;;1805               case CCR_SRAM_CHANNEL_3:
0024cc  e320f000          NOP      
;;;1806                   {
;;;1807                       vCCR_PDS_UNLOCK();
0024d0  e59f3098          LDR      r3,|L1.9584|
0024d4  e3a04103          MOV      r4,#0xc0000000
0024d8  e5944000          LDR      r4,[r4,#0]
0024dc  e3a04103          MOV      r4,#0xc0000000
0024e0  e5843000          STR      r3,[r4,#0]
;;;1808                       vSetCCR_GENERIC_REG5_BEPA3(pstConfig -> u8PosFirstError);
0024e4  e5d14000          LDRB     r4,[r1,#0]
0024e8  e3a03103          MOV      r3,#0xc0000000
0024ec  e5933078          LDR      r3,[r3,#0x78]
0024f0  e7d43894          BFI      r3,r4,#17,#4
0024f4  e3a04103          MOV      r4,#0xc0000000
0024f8  e5843078          STR      r3,[r4,#0x78]
;;;1809                       vCCR_PDS_UNLOCK();
0024fc  e59f306c          LDR      r3,|L1.9584|
002500  e5944000          LDR      r4,[r4,#0]
002504  e3a04103          MOV      r4,#0xc0000000
002508  e5843000          STR      r3,[r4,#0]
;;;1810                       vSetCCR_GENERIC_REG5_BEPB3(pstConfig -> u8PosSecondError);
00250c  e5d14001          LDRB     r4,[r1,#1]
002510  e3a03103          MOV      r3,#0xc0000000
002514  e5933078          LDR      r3,[r3,#0x78]
002518  e7d83a94          BFI      r3,r4,#21,#4
00251c  e3a04103          MOV      r4,#0xc0000000
002520  e5843078          STR      r3,[r4,#0x78]
;;;1811                       vCCR_PDS_UNLOCK();
002524  e59f3044          LDR      r3,|L1.9584|
002528  e5944000          LDR      r4,[r4,#0]
00252c  e3a04103          MOV      r4,#0xc0000000
002530  e5843000          STR      r3,[r4,#0]
;;;1812                       vSetCCR_GENERIC_REG5_BEBSEL3(pstConfig -> u8ByteSelect);
002534  e5d14002          LDRB     r4,[r1,#2]
002538  e3a03103          MOV      r3,#0xc0000000
00253c  e5933078          LDR      r3,[r3,#0x78]
002540  e7db3c94          BFI      r3,r4,#25,#3
002544  e3a04103          MOV      r4,#0xc0000000
002548  e5843078          STR      r3,[r4,#0x78]
;;;1813                   }
;;;1814                   break;
00254c  ea00000b          B        |L1.9600|
                  |L1.9552|
                          DCD      0x005c0008
                  |L1.9556|
                          DCD      0x00030001
                  |L1.9560|
                          DCD      0x005c0001
                  |L1.9564|
                          DCD      0x005c0002
                  |L1.9568|
                          DCD      0x005c0004
                  |L1.9572|
                          DCD      0x005c0010
                  |L1.9576|
                          DCD      0x005c0020
                  |L1.9580|
                          DCD      0x005c0040
                  |L1.9584|
                          DCD      0xa5c0f17b
                  |L1.9588|
;;;1815               default:
002574  e320f000          NOP      
;;;1816                   {
;;;1817                       i32Res = C_FAILED;
002578  e3e00000          MVN      r0,#0
;;;1818                   }
;;;1819                   break;
00257c  e320f000          NOP      
                  |L1.9600|
002580  ea000000          B        |L1.9608|
                  |L1.9604|
;;;1820           }
;;;1821       }
;;;1822       else
;;;1823       {
;;;1824           i32Res = C_FAILED;
002584  e3e00000          MVN      r0,#0
                  |L1.9608|
;;;1825   
;;;1826       }
;;;1827       return i32Res;
;;;1828   }
002588  e8bd8010          POP      {r4,pc}
;;;1829   
                          ENDP

                  vCCR_ClearWDTAlarm PROC
;;;1831   /****************************************************************************/
;;;1832   void vCCR_ClearWDTAlarm(void)
00258c  e51f0024          LDR      r0,|L1.9584|
;;;1833   {
;;;1834       vCCR_PDS_UNLOCK();
002590  e3a01103          MOV      r1,#0xc0000000
002594  e5911000          LDR      r1,[r1,#0]
002598  e3a01103          MOV      r1,#0xc0000000
00259c  e5810000          STR      r0,[r1,#0]
;;;1835       vSetCCR_GENERICAC_REG0_WDT_ALMCLR(1U);
0025a0  e3a00103          MOV      r0,#0xc0000000
0025a4  e5900084          LDR      r0,[r0,#0x84]
0025a8  e3c00001          BIC      r0,r0,#1
0025ac  e2800001          ADD      r0,r0,#1
0025b0  e5810084          STR      r0,[r1,#0x84]
;;;1836   }
0025b4  e12fff1e          BX       lr
;;;1837   
                          ENDP

                  vCCR_ClearErrorIrgFlagOfBackupRAM PROC
;;;1839   /****************************************************************************/
;;;1840   void vCCR_ClearErrorIrgFlagOfBackupRAM(void)
0025b8  e51f0050          LDR      r0,|L1.9584|
;;;1841   {
;;;1842       vCCR_PDS_UNLOCK();
0025bc  e3a01103          MOV      r1,#0xc0000000
0025c0  e5911000          LDR      r1,[r1,#0]
0025c4  e3a01103          MOV      r1,#0xc0000000
0025c8  e5810000          STR      r0,[r1,#0]
;;;1843       vSetCCR_GENERICAC_REG0_ECCECLRB(1U);
0025cc  e3a00103          MOV      r0,#0xc0000000
0025d0  e5900084          LDR      r0,[r0,#0x84]
0025d4  e3c00002          BIC      r0,r0,#2
0025d8  e2800002          ADD      r0,r0,#2
0025dc  e5810084          STR      r0,[r1,#0x84]
;;;1844   }
0025e0  e12fff1e          BX       lr
;;;1845   
                          ENDP

                  vCCR_ClearWarningIrgFlagOfBackupRAM PROC
;;;1847   /****************************************************************************/
;;;1848   void vCCR_ClearWarningIrgFlagOfBackupRAM(void)
0025e4  e51f007c          LDR      r0,|L1.9584|
;;;1849   {
;;;1850       vCCR_PDS_UNLOCK();
0025e8  e3a01103          MOV      r1,#0xc0000000
0025ec  e5911000          LDR      r1,[r1,#0]
0025f0  e3a01103          MOV      r1,#0xc0000000
0025f4  e5810000          STR      r0,[r1,#0]
;;;1851       vSetCCR_GENERICAC_REG0_ECCWCLRB(1U);
0025f8  e3a00103          MOV      r0,#0xc0000000
0025fc  e5900084          LDR      r0,[r0,#0x84]
002600  e3c00004          BIC      r0,r0,#4
002604  e2800004          ADD      r0,r0,#4
002608  e5810084          STR      r0,[r1,#0x84]
;;;1852   }
00260c  e12fff1e          BX       lr
;;;1853   
                          ENDP

                  i32CCR_ClearErrorIrgFlagOfSRAM PROC
;;;1855   /****************************************************************************/
;;;1856   int32_t i32CCR_ClearErrorIrgFlagOfSRAM(ccr_sram_channel_e eChannel)
002610  e1a01000          MOV      r1,r0
;;;1857   {
;;;1858       int32_t i32Res = C_SUCCESS;
002614  e3a00000          MOV      r0,#0
;;;1859   
;;;1860       vCCR_PDS_UNLOCK();
002618  e51f20b0          LDR      r2,|L1.9584|
00261c  e3a03103          MOV      r3,#0xc0000000
002620  e5933000          LDR      r3,[r3,#0]
002624  e3a03103          MOV      r3,#0xc0000000
002628  e5832000          STR      r2,[r3,#0]
;;;1861       vSetCCR_GENERICAC_REG0_ECCECLRB(1U);
00262c  e3a02103          MOV      r2,#0xc0000000
002630  e5922084          LDR      r2,[r2,#0x84]
002634  e3c22002          BIC      r2,r2,#2
002638  e2822002          ADD      r2,r2,#2
00263c  e5832084          STR      r2,[r3,#0x84]
;;;1862   
;;;1863       switch(eChannel)
002640  e3510000          CMP      r1,#0
002644  0a000006          BEQ      |L1.9828|
002648  e3510001          CMP      r1,#1
00264c  0a000010          BEQ      |L1.9876|
002650  e3510002          CMP      r1,#2
002654  0a00001a          BEQ      |L1.9924|
002658  e3510003          CMP      r1,#3
00265c  1a000030          BNE      |L1.10020|
002660  ea000023          B        |L1.9972|
                  |L1.9828|
;;;1864       {
;;;1865           case CCR_SRAM_CHANNEL_0:
002664  e320f000          NOP      
;;;1866               {
;;;1867                   vCCR_PDS_UNLOCK();
002668  e51f2100          LDR      r2,|L1.9584|
00266c  e3a03103          MOV      r3,#0xc0000000
002670  e5933000          LDR      r3,[r3,#0]
002674  e3a03103          MOV      r3,#0xc0000000
002678  e5832000          STR      r2,[r3,#0]
;;;1868                   vSetCCR_GENERICAC_REG0_ECCECLRS(0x1);
00267c  e3a02103          MOV      r2,#0xc0000000
002680  e5922084          LDR      r2,[r2,#0x84]
002684  e3c22c0f          BIC      r2,r2,#0xf00
002688  e2822c01          ADD      r2,r2,#0x100
00268c  e5832084          STR      r2,[r3,#0x84]
;;;1869               }
;;;1870               break;
002690  ea00002a          B        |L1.10048|
                  |L1.9876|
;;;1871           case CCR_SRAM_CHANNEL_1:
002694  e320f000          NOP      
;;;1872               {
;;;1873                   vCCR_PDS_UNLOCK();
002698  e51f2130          LDR      r2,|L1.9584|
00269c  e3a03103          MOV      r3,#0xc0000000
0026a0  e5933000          LDR      r3,[r3,#0]
0026a4  e3a03103          MOV      r3,#0xc0000000
0026a8  e5832000          STR      r2,[r3,#0]
;;;1874                   vSetCCR_GENERICAC_REG0_ECCECLRS(0x2);
0026ac  e3a02103          MOV      r2,#0xc0000000
0026b0  e5922084          LDR      r2,[r2,#0x84]
0026b4  e3c22c0f          BIC      r2,r2,#0xf00
0026b8  e2822c02          ADD      r2,r2,#0x200
0026bc  e5832084          STR      r2,[r3,#0x84]
;;;1875               }
;;;1876               break;
0026c0  ea00001e          B        |L1.10048|
                  |L1.9924|
;;;1877           case CCR_SRAM_CHANNEL_2:
0026c4  e320f000          NOP      
;;;1878               {
;;;1879                   vCCR_PDS_UNLOCK();
0026c8  e51f2160          LDR      r2,|L1.9584|
0026cc  e3a03103          MOV      r3,#0xc0000000
0026d0  e5933000          LDR      r3,[r3,#0]
0026d4  e3a03103          MOV      r3,#0xc0000000
0026d8  e5832000          STR      r2,[r3,#0]
;;;1880                   vSetCCR_GENERICAC_REG0_ECCECLRS(0x4);
0026dc  e3a02103          MOV      r2,#0xc0000000
0026e0  e5922084          LDR      r2,[r2,#0x84]
0026e4  e3c22c0f          BIC      r2,r2,#0xf00
0026e8  e2822b01          ADD      r2,r2,#0x400
0026ec  e5832084          STR      r2,[r3,#0x84]
;;;1881               }
;;;1882               break;
0026f0  ea000012          B        |L1.10048|
                  |L1.9972|
;;;1883           case CCR_SRAM_CHANNEL_3:
0026f4  e320f000          NOP      
;;;1884               {
;;;1885                   vCCR_PDS_UNLOCK();
0026f8  e51f2190          LDR      r2,|L1.9584|
0026fc  e3a03103          MOV      r3,#0xc0000000
002700  e5933000          LDR      r3,[r3,#0]
002704  e3a03103          MOV      r3,#0xc0000000
002708  e5832000          STR      r2,[r3,#0]
;;;1886                   vSetCCR_GENERICAC_REG0_ECCECLRS(0x8);
00270c  e3a02103          MOV      r2,#0xc0000000
002710  e5922084          LDR      r2,[r2,#0x84]
002714  e3c22c0f          BIC      r2,r2,#0xf00
002718  e2822b02          ADD      r2,r2,#0x800
00271c  e5832084          STR      r2,[r3,#0x84]
;;;1887               }
;;;1888               break;
002720  ea000006          B        |L1.10048|
                  |L1.10020|
;;;1889           default:
002724  e320f000          NOP      
;;;1890               {
;;;1891                   vCCR_PDS_UNLOCK();
002728  e51f21c0          LDR      r2,|L1.9584|
00272c  e3a03103          MOV      r3,#0xc0000000
002730  e5933000          LDR      r3,[r3,#0]
002734  e3a03103          MOV      r3,#0xc0000000
002738  e5832000          STR      r2,[r3,#0]
;;;1892               }
;;;1893               break;
00273c  e320f000          NOP      
                  |L1.10048|
002740  e320f000          NOP                            ;1870
;;;1894       }
;;;1895   
;;;1896       return i32Res;
;;;1897   }
002744  e12fff1e          BX       lr
;;;1898   
                          ENDP

                  i32CCR_ClearWarningIrgFlagOfSRAM PROC
;;;1900   /****************************************************************************/
;;;1901   int32_t i32CCR_ClearWarningIrgFlagOfSRAM(ccr_sram_channel_e eChannel)
002748  e1a01000          MOV      r1,r0
;;;1902   {
;;;1903       int32_t i32Res = C_SUCCESS;
00274c  e3a00000          MOV      r0,#0
;;;1904   
;;;1905       vCCR_PDS_UNLOCK();
002750  e51f21e8          LDR      r2,|L1.9584|
002754  e3a03103          MOV      r3,#0xc0000000
002758  e5933000          LDR      r3,[r3,#0]
00275c  e3a03103          MOV      r3,#0xc0000000
002760  e5832000          STR      r2,[r3,#0]
;;;1906       vSetCCR_GENERICAC_REG0_ECCECLRB(1U);
002764  e3a02103          MOV      r2,#0xc0000000
002768  e5922084          LDR      r2,[r2,#0x84]
00276c  e3c22002          BIC      r2,r2,#2
002770  e2822002          ADD      r2,r2,#2
002774  e5832084          STR      r2,[r3,#0x84]
;;;1907   
;;;1908       switch (eChannel)
002778  e3510000          CMP      r1,#0
00277c  0a000006          BEQ      |L1.10140|
002780  e3510001          CMP      r1,#1
002784  0a000010          BEQ      |L1.10188|
002788  e3510002          CMP      r1,#2
00278c  0a00001a          BEQ      |L1.10236|
002790  e3510003          CMP      r1,#3
002794  1a000030          BNE      |L1.10332|
002798  ea000023          B        |L1.10284|
                  |L1.10140|
;;;1909       {
;;;1910           case CCR_SRAM_CHANNEL_0:
00279c  e320f000          NOP      
;;;1911               {
;;;1912                   vCCR_PDS_UNLOCK();
0027a0  e51f2238          LDR      r2,|L1.9584|
0027a4  e3a03103          MOV      r3,#0xc0000000
0027a8  e5933000          LDR      r3,[r3,#0]
0027ac  e3a03103          MOV      r3,#0xc0000000
0027b0  e5832000          STR      r2,[r3,#0]
;;;1913                   vSetCCR_GENERICAC_REG0_ECCWCLRS(0x1);
0027b4  e3a02103          MOV      r2,#0xc0000000
0027b8  e5922084          LDR      r2,[r2,#0x84]
0027bc  e3c22a0f          BIC      r2,r2,#0xf000
0027c0  e2822a01          ADD      r2,r2,#0x1000
0027c4  e5832084          STR      r2,[r3,#0x84]
;;;1914               }
;;;1915               break;
0027c8  ea00002a          B        |L1.10360|
                  |L1.10188|
;;;1916           case CCR_SRAM_CHANNEL_1:
0027cc  e320f000          NOP      
;;;1917               {
;;;1918                   vCCR_PDS_UNLOCK();
0027d0  e51f2268          LDR      r2,|L1.9584|
0027d4  e3a03103          MOV      r3,#0xc0000000
0027d8  e5933000          LDR      r3,[r3,#0]
0027dc  e3a03103          MOV      r3,#0xc0000000
0027e0  e5832000          STR      r2,[r3,#0]
;;;1919                   vSetCCR_GENERICAC_REG0_ECCWCLRS(0x2);
0027e4  e3a02103          MOV      r2,#0xc0000000
0027e8  e5922084          LDR      r2,[r2,#0x84]
0027ec  e3c22a0f          BIC      r2,r2,#0xf000
0027f0  e2822a02          ADD      r2,r2,#0x2000
0027f4  e5832084          STR      r2,[r3,#0x84]
;;;1920               }
;;;1921               break;
0027f8  ea00001e          B        |L1.10360|
                  |L1.10236|
;;;1922           case CCR_SRAM_CHANNEL_2:
0027fc  e320f000          NOP      
;;;1923               {
;;;1924                   vCCR_PDS_UNLOCK();
002800  e51f2298          LDR      r2,|L1.9584|
002804  e3a03103          MOV      r3,#0xc0000000
002808  e5933000          LDR      r3,[r3,#0]
00280c  e3a03103          MOV      r3,#0xc0000000
002810  e5832000          STR      r2,[r3,#0]
;;;1925                   vSetCCR_GENERICAC_REG0_ECCWCLRS(0x4);
002814  e3a02103          MOV      r2,#0xc0000000
002818  e5922084          LDR      r2,[r2,#0x84]
00281c  e3c22a0f          BIC      r2,r2,#0xf000
002820  e2822901          ADD      r2,r2,#0x4000
002824  e5832084          STR      r2,[r3,#0x84]
;;;1926               }
;;;1927               break;
002828  ea000012          B        |L1.10360|
                  |L1.10284|
;;;1928           case CCR_SRAM_CHANNEL_3:
00282c  e320f000          NOP      
;;;1929               {
;;;1930                   vCCR_PDS_UNLOCK();
002830  e51f22c8          LDR      r2,|L1.9584|
002834  e3a03103          MOV      r3,#0xc0000000
002838  e5933000          LDR      r3,[r3,#0]
00283c  e3a03103          MOV      r3,#0xc0000000
002840  e5832000          STR      r2,[r3,#0]
;;;1931                   vSetCCR_GENERICAC_REG0_ECCWCLRS(0x8);
002844  e3a02103          MOV      r2,#0xc0000000
002848  e5922084          LDR      r2,[r2,#0x84]
00284c  e3c22a0f          BIC      r2,r2,#0xf000
002850  e2822902          ADD      r2,r2,#0x8000
002854  e5832084          STR      r2,[r3,#0x84]
;;;1932               }
;;;1933               break;
002858  ea000006          B        |L1.10360|
                  |L1.10332|
;;;1934           default:
00285c  e320f000          NOP      
;;;1935               {
;;;1936                   vCCR_PDS_UNLOCK();
002860  e51f22f8          LDR      r2,|L1.9584|
002864  e3a03103          MOV      r3,#0xc0000000
002868  e5933000          LDR      r3,[r3,#0]
00286c  e3a03103          MOV      r3,#0xc0000000
002870  e5832000          STR      r2,[r3,#0]
;;;1937               }
;;;1938               break;
002874  e320f000          NOP      
                  |L1.10360|
002878  e320f000          NOP                            ;1915
;;;1939       }
;;;1940   
;;;1941       return i32Res;
;;;1942   }
00287c  e12fff1e          BX       lr
;;;1943   
                          ENDP

                  i32CCR_IssueSynchronPulseToCTimer PROC
;;;1945   /****************************************************************************/
;;;1946   int32_t i32CCR_IssueSynchronPulseToCTimer(ccr_complex_timer_e eComplexTimer)
002880  e1a01000          MOV      r1,r0
;;;1947   {
;;;1948       int32_t i32Res = C_SUCCESS;
002884  e3a00000          MOV      r0,#0
;;;1949   
;;;1950       vCCR_PDS_UNLOCK();
002888  e51f2320          LDR      r2,|L1.9584|
00288c  e3a03103          MOV      r3,#0xc0000000
002890  e5933000          LDR      r3,[r3,#0]
002894  e3a03103          MOV      r3,#0xc0000000
002898  e5832000          STR      r2,[r3,#0]
;;;1951       vSetCCR_GENERICAC_REG0_ECCECLRB(1U);
00289c  e3a02103          MOV      r2,#0xc0000000
0028a0  e5922084          LDR      r2,[r2,#0x84]
0028a4  e3c22002          BIC      r2,r2,#2
0028a8  e2822002          ADD      r2,r2,#2
0028ac  e5832084          STR      r2,[r3,#0x84]
;;;1952   
;;;1953       switch (eComplexTimer)
0028b0  e3510000          CMP      r1,#0
0028b4  0a000002          BEQ      |L1.10436|
0028b8  e3510001          CMP      r1,#1
0028bc  1a000018          BNE      |L1.10532|
0028c0  ea00000b          B        |L1.10484|
                  |L1.10436|
;;;1954       {
;;;1955           case CCR_COMPLEX_TIMER_0_TO_5:
0028c4  e320f000          NOP      
;;;1956               {
;;;1957                   vCCR_PDS_UNLOCK();
0028c8  e51f2360          LDR      r2,|L1.9584|
0028cc  e3a03103          MOV      r3,#0xc0000000
0028d0  e5933000          LDR      r3,[r3,#0]
0028d4  e3a03103          MOV      r3,#0xc0000000
0028d8  e5832000          STR      r2,[r3,#0]
;;;1958                   vSetCCR_GENERICAC_REG0_CPXTSYN_PM(1U);
0028dc  e3a02103          MOV      r2,#0xc0000000
0028e0  e5922084          LDR      r2,[r2,#0x84]
0028e4  e3c22801          BIC      r2,r2,#0x10000
0028e8  e2822801          ADD      r2,r2,#0x10000
0028ec  e5832084          STR      r2,[r3,#0x84]
;;;1959               }
;;;1960               break;
0028f0  ea000012          B        |L1.10560|
                  |L1.10484|
;;;1961           case CCR_COMPLEX_TIMER_6_TO_9:
0028f4  e320f000          NOP      
;;;1962               {
;;;1963                   vCCR_PDS_UNLOCK();
0028f8  e51f2390          LDR      r2,|L1.9584|
0028fc  e3a03103          MOV      r3,#0xc0000000
002900  e5933000          LDR      r3,[r3,#0]
002904  e3a03103          MOV      r3,#0xc0000000
002908  e5832000          STR      r2,[r3,#0]
;;;1964                   vSetCCR_GENERICAC_REG0_CPXTSYN_PNM(1U);
00290c  e3a02103          MOV      r2,#0xc0000000
002910  e5922084          LDR      r2,[r2,#0x84]
002914  e3c22802          BIC      r2,r2,#0x20000
002918  e2822802          ADD      r2,r2,#0x20000
00291c  e5832084          STR      r2,[r3,#0x84]
;;;1965               }
;;;1966               break;
002920  ea000006          B        |L1.10560|
                  |L1.10532|
;;;1967           default:
002924  e320f000          NOP      
;;;1968               {
;;;1969                   vCCR_PDS_UNLOCK();
002928  e51f23c0          LDR      r2,|L1.9584|
00292c  e3a03103          MOV      r3,#0xc0000000
002930  e5933000          LDR      r3,[r3,#0]
002934  e3a03103          MOV      r3,#0xc0000000
002938  e5832000          STR      r2,[r3,#0]
;;;1970               }
;;;1971               break;
00293c  e320f000          NOP      
                  |L1.10560|
002940  e320f000          NOP                            ;1960
;;;1972       }
;;;1973   
;;;1974       return i32Res;
;;;1975   }
002944  e12fff1e          BX       lr
;;;1976   
                          ENDP

                  eCCR_GetWDTAlarmStatusBit PROC
;;;1978   /****************************************************************************/
;;;1979   ccr_enable_e eCCR_GetWDTAlarmStatusBit(void)
002948  e3a00103          MOV      r0,#0xc0000000
;;;1980   {
;;;1981       return (ccr_enable_e)biGetCCR_GENERICSTAT_REG0_WDT_ALARM();
00294c  e590008c          LDR      r0,[r0,#0x8c]
002950  e2000001          AND      r0,r0,#1
;;;1982   }
002954  e12fff1e          BX       lr
;;;1983   
                          ENDP

                  eCCR_GetIRQErrorFlafForBackupRAM PROC
;;;1985   /****************************************************************************/
;;;1986   ccr_enable_e eCCR_GetIRQErrorFlafForBackupRAM(void)
002958  e3a00103          MOV      r0,#0xc0000000
;;;1987   {
;;;1988       return (ccr_enable_e)biGetCCR_GENERICSTAT_REG0_ECCERRB();
00295c  e590008c          LDR      r0,[r0,#0x8c]
002960  e7e000d0          UBFX     r0,r0,#1,#1
;;;1989   }
002964  e12fff1e          BX       lr
;;;1990   
                          ENDP

                  eCCR_GetIRQWarningFlafForBackupRAM PROC
;;;1992   /****************************************************************************/
;;;1993   ccr_enable_e eCCR_GetIRQWarningFlafForBackupRAM(void)
002968  e3a00103          MOV      r0,#0xc0000000
;;;1994   {
;;;1995       return (ccr_enable_e)biGetCCR_GENERICSTAT_REG0_ECCWRNB();
00296c  e590008c          LDR      r0,[r0,#0x8c]
002970  e7e00150          UBFX     r0,r0,#2,#1
;;;1996   }
002974  e12fff1e          BX       lr
;;;1997   
                          ENDP

                  u8CCR_GetPosOfBitErrorInBackupRAM PROC
;;;1999   /****************************************************************************/
;;;2000   uint8_t u8CCR_GetPosOfBitErrorInBackupRAM(void)
002978  e3a00103          MOV      r0,#0xc0000000
;;;2001   {
;;;2002       return (uint8_t)biGetCCR_GENERICSTAT_REG0_BEPOSB();
00297c  e590008c          LDR      r0,[r0,#0x8c]
002980  e7e601d0          UBFX     r0,r0,#3,#7
;;;2003   }
002984  e12fff1e          BX       lr
;;;2004   
                          ENDP

                  eCCR_GetLastCheckResultForBackupRAM PROC
;;;2006   /****************************************************************************/
;;;2007   ccr_enable_e eCCR_GetLastCheckResultForBackupRAM(void)
002988  e3a00103          MOV      r0,#0xc0000000
;;;2008   {
;;;2009       return (ccr_enable_e)biGetCCR_GENERICSTAT_REG0_BERESB();
00298c  e590008c          LDR      r0,[r0,#0x8c]
002990  e7e00550          UBFX     r0,r0,#10,#1
;;;2010   }
002994  e12fff1e          BX       lr
;;;2011   
                          ENDP

                  eCCR_GetDebuggerCR4PowerDownRequestStatus PROC
;;;2013   /****************************************************************************/
;;;2014   ccr_enable_e eCCR_GetDebuggerCR4PowerDownRequestStatus(void)
002998  e3a00103          MOV      r0,#0xc0000000
;;;2015   {
;;;2016       return (ccr_enable_e)biGetCCR_GENERICSTAT_REG0_CR4DBGNOPWRDWN();
00299c  e590008c          LDR      r0,[r0,#0x8c]
0029a0  e7e00850          UBFX     r0,r0,#16,#1
;;;2017   }
0029a4  e12fff1e          BX       lr
;;;2018   
                          ENDP

                  i32CCR_GetSRAMIrgErrorCondition PROC
;;;2020   /****************************************************************************/
;;;2021   int32_t i32CCR_GetSRAMIrgErrorCondition(ccr_sram_channel_e eChannel, ccr_enable_e * peEn)
0029a8  e92d4010          PUSH     {r4,lr}
;;;2022   {
0029ac  e1a02000          MOV      r2,r0
;;;2023       uint32_t u32Enb = 0U;
0029b0  e3a03000          MOV      r3,#0
;;;2024       int32_t  i32Res = C_SUCCESS;
0029b4  e3a00000          MOV      r0,#0
;;;2025   
;;;2026       if (0x00 != peEn)
0029b8  e3510000          CMP      r1,#0
0029bc  0a000027          BEQ      |L1.10848|
;;;2027       {
;;;2028           switch(eChannel)
0029c0  e3520000          CMP      r2,#0
0029c4  0a000006          BEQ      |L1.10724|
0029c8  e3520001          CMP      r2,#1
0029cc  0a000009          BEQ      |L1.10744|
0029d0  e3520002          CMP      r2,#2
0029d4  0a00000d          BEQ      |L1.10768|
0029d8  e3520003          CMP      r2,#3
0029dc  1a000017          BNE      |L1.10816|
0029e0  ea000010          B        |L1.10792|
                  |L1.10724|
;;;2029           {
;;;2030               case CCR_SRAM_CHANNEL_0:
0029e4  e320f000          NOP      
;;;2031                   {
;;;2032                       u32Enb = 0x1U & biGetCCR_GENERICSTAT_REG1_ECCERRS();
0029e8  e3a04103          MOV      r4,#0xc0000000
0029ec  e5944090          LDR      r4,[r4,#0x90]
0029f0  e2043001          AND      r3,r4,#1
;;;2033                   }
;;;2034                   break;
0029f4  ea000014          B        |L1.10828|
                  |L1.10744|
;;;2035               case CCR_SRAM_CHANNEL_1:
0029f8  e320f000          NOP      
;;;2036                   {
;;;2037                       u32Enb = ( 0x2U & biGetCCR_GENERICSTAT_REG1_ECCERRS() ) >> 1U;
0029fc  e3a04103          MOV      r4,#0xc0000000
002a00  e5944090          LDR      r4,[r4,#0x90]
002a04  e2044002          AND      r4,r4,#2
002a08  e1a030a4          LSR      r3,r4,#1
;;;2038                   }
;;;2039                   break;
002a0c  ea00000e          B        |L1.10828|
                  |L1.10768|
;;;2040               case CCR_SRAM_CHANNEL_2:
002a10  e320f000          NOP      
;;;2041                   {
;;;2042                       u32Enb = ( 0x4U & biGetCCR_GENERICSTAT_REG1_ECCERRS() ) >> 2U;
002a14  e3a04103          MOV      r4,#0xc0000000
002a18  e5944090          LDR      r4,[r4,#0x90]
002a1c  e2044004          AND      r4,r4,#4
002a20  e1a03124          LSR      r3,r4,#2
;;;2043                   }
;;;2044                   break;
002a24  ea000008          B        |L1.10828|
                  |L1.10792|
;;;2045               case CCR_SRAM_CHANNEL_3:
002a28  e320f000          NOP      
;;;2046                   {
;;;2047                       u32Enb = ( 0x8U & biGetCCR_GENERICSTAT_REG1_ECCERRS() ) >> 3U;
002a2c  e3a04103          MOV      r4,#0xc0000000
002a30  e5944090          LDR      r4,[r4,#0x90]
002a34  e2044008          AND      r4,r4,#8
002a38  e1a031a4          LSR      r3,r4,#3
;;;2048                   }
;;;2049                   break;
002a3c  ea000002          B        |L1.10828|
                  |L1.10816|
;;;2050               default:
002a40  e320f000          NOP      
;;;2051                   {
;;;2052                       i32Res = C_FAILED;
002a44  e3e00000          MVN      r0,#0
;;;2053                   }
;;;2054                   break;
002a48  e320f000          NOP      
                  |L1.10828|
002a4c  e320f000          NOP                            ;2034
;;;2055           }
;;;2056           if (C_SUCCESS == i32Res)
002a50  e3500000          CMP      r0,#0
002a54  1a000002          BNE      |L1.10852|
;;;2057           {
;;;2058               *peEn = (ccr_enable_e) u32Enb;
002a58  e5c13000          STRB     r3,[r1,#0]
002a5c  ea000000          B        |L1.10852|
                  |L1.10848|
;;;2059           }
;;;2060       }
;;;2061       else
;;;2062       {
;;;2063           i32Res = C_FAILED;
002a60  e3e00000          MVN      r0,#0
                  |L1.10852|
;;;2064   
;;;2065       }
;;;2066       return i32Res;
;;;2067   }
002a64  e8bd8010          POP      {r4,pc}
;;;2068   
                          ENDP

                  i32CCR_GetSRAMIrgWarningCondition PROC
;;;2070   /****************************************************************************/
;;;2071   int32_t i32CCR_GetSRAMIrgWarningCondition(ccr_sram_channel_e eChannel, ccr_enable_e * peEn)
002a68  e92d4010          PUSH     {r4,lr}
;;;2072   {
002a6c  e1a02000          MOV      r2,r0
;;;2073       uint32_t u32Enb = 0U;
002a70  e3a03000          MOV      r3,#0
;;;2074       int32_t  i32Res = C_SUCCESS;
002a74  e3a00000          MOV      r0,#0
;;;2075   
;;;2076       if (0x00 != peEn)
002a78  e3510000          CMP      r1,#0
002a7c  0a00002a          BEQ      |L1.11052|
;;;2077       {
;;;2078           switch(eChannel)
002a80  e3520000          CMP      r2,#0
002a84  0a000006          BEQ      |L1.10916|
002a88  e3520001          CMP      r2,#1
002a8c  0a000009          BEQ      |L1.10936|
002a90  e3520002          CMP      r2,#2
002a94  0a00000e          BEQ      |L1.10964|
002a98  e3520003          CMP      r2,#3
002a9c  1a00001a          BNE      |L1.11020|
002aa0  ea000012          B        |L1.10992|
                  |L1.10916|
;;;2079           {
;;;2080               case CCR_SRAM_CHANNEL_0:
002aa4  e320f000          NOP      
;;;2081                   {
;;;2082                       u32Enb = 0x1U & biGetCCR_GENERICSTAT_REG1_ECCWRNS();
002aa8  e3a04103          MOV      r4,#0xc0000000
002aac  e5944090          LDR      r4,[r4,#0x90]
002ab0  e7e03254          UBFX     r3,r4,#4,#1
;;;2083                   }
;;;2084                   break;
002ab4  ea000017          B        |L1.11032|
                  |L1.10936|
;;;2085               case CCR_SRAM_CHANNEL_1:
002ab8  e320f000          NOP      
;;;2086                   {
;;;2087                       u32Enb = ( 0x2U & biGetCCR_GENERICSTAT_REG1_ECCWRNS() ) >> 1U;
002abc  e3a04103          MOV      r4,#0xc0000000
002ac0  e5944090          LDR      r4,[r4,#0x90]
002ac4  e1a04224          LSR      r4,r4,#4
002ac8  e2044002          AND      r4,r4,#2
002acc  e1a030a4          LSR      r3,r4,#1
;;;2088                   }
;;;2089                   break;
002ad0  ea000010          B        |L1.11032|
                  |L1.10964|
;;;2090               case CCR_SRAM_CHANNEL_2:
002ad4  e320f000          NOP      
;;;2091                   {
;;;2092                       u32Enb = ( 0x4U & biGetCCR_GENERICSTAT_REG1_ECCWRNS() ) >> 2U;
002ad8  e3a04103          MOV      r4,#0xc0000000
002adc  e5944090          LDR      r4,[r4,#0x90]
002ae0  e1a04224          LSR      r4,r4,#4
002ae4  e2044004          AND      r4,r4,#4
002ae8  e1a03124          LSR      r3,r4,#2
;;;2093                   }
;;;2094                   break;
002aec  ea000009          B        |L1.11032|
                  |L1.10992|
;;;2095               case CCR_SRAM_CHANNEL_3:
002af0  e320f000          NOP      
;;;2096                   {
;;;2097                       u32Enb = ( 0x8U & biGetCCR_GENERICSTAT_REG1_ECCWRNS() ) >> 3U;
002af4  e3a04103          MOV      r4,#0xc0000000
002af8  e5944090          LDR      r4,[r4,#0x90]
002afc  e1a04224          LSR      r4,r4,#4
002b00  e2044008          AND      r4,r4,#8
002b04  e1a031a4          LSR      r3,r4,#3
;;;2098                   }
;;;2099                   break;
002b08  ea000002          B        |L1.11032|
                  |L1.11020|
;;;2100               default:
002b0c  e320f000          NOP      
;;;2101                   {
;;;2102                       i32Res = C_FAILED;
002b10  e3e00000          MVN      r0,#0
;;;2103                   }
;;;2104                   break;
002b14  e320f000          NOP      
                  |L1.11032|
002b18  e320f000          NOP                            ;2084
;;;2105           }
;;;2106           if (C_SUCCESS == i32Res)
002b1c  e3500000          CMP      r0,#0
002b20  1a000002          BNE      |L1.11056|
;;;2107           {
;;;2108               *peEn = (ccr_enable_e) u32Enb;
002b24  e5c13000          STRB     r3,[r1,#0]
002b28  ea000000          B        |L1.11056|
                  |L1.11052|
;;;2109           }
;;;2110       }
;;;2111       else
;;;2112       {
;;;2113           i32Res = C_FAILED;
002b2c  e3e00000          MVN      r0,#0
                  |L1.11056|
;;;2114   
;;;2115       }
;;;2116       return i32Res;
;;;2117   }
002b30  e8bd8010          POP      {r4,pc}
;;;2118   
                          ENDP

                  i32CCR_GetSRAMPositionOfBitError PROC
;;;2120   /****************************************************************************/
;;;2121   int32_t i32CCR_GetSRAMPositionOfBitError(ccr_sram_channel_e eChannel, uint8_t * pu8Position)
002b34  e92d4030          PUSH     {r4,r5,lr}
;;;2122   {
002b38  e1a02000          MOV      r2,r0
;;;2123       uint32_t u32Position = 0U;
002b3c  e3a03000          MOV      r3,#0
;;;2124       int32_t i32Res = C_SUCCESS;
002b40  e3a00000          MOV      r0,#0
;;;2125   
;;;2126       if (0x00 != pu8Position)
002b44  e3510000          CMP      r1,#0
002b48  0a00002a          BEQ      |L1.11256|
;;;2127       {
;;;2128           switch(eChannel)
002b4c  e3520000          CMP      r2,#0
002b50  0a000006          BEQ      |L1.11120|
002b54  e3520001          CMP      r2,#1
002b58  0a000009          BEQ      |L1.11140|
002b5c  e3520002          CMP      r2,#2
002b60  0a00000e          BEQ      |L1.11168|
002b64  e3520003          CMP      r2,#3
002b68  1a00001a          BNE      |L1.11224|
002b6c  ea000012          B        |L1.11196|
                  |L1.11120|
;;;2129           {
;;;2130               case CCR_SRAM_CHANNEL_0:
002b70  e320f000          NOP      
;;;2131                   {
;;;2132                       u32Position = 0x1FU & biGetCCR_GENERICSTAT_REG1_BEPOSS();
002b74  e3a04103          MOV      r4,#0xc0000000
002b78  e5944090          LDR      r4,[r4,#0x90]
002b7c  e7e43454          UBFX     r3,r4,#8,#5
;;;2133                   }
;;;2134                   break;
002b80  ea000017          B        |L1.11236|
                  |L1.11140|
;;;2135               case CCR_SRAM_CHANNEL_1:
002b84  e320f000          NOP      
;;;2136                   {
;;;2137                       u32Position = 0x1FU & (biGetCCR_GENERICSTAT_REG1_BEPOSS() >> 5);
002b88  e3a04103          MOV      r4,#0xc0000000
002b8c  e5944090          LDR      r4,[r4,#0x90]
002b90  e7f34454          UBFX     r4,r4,#8,#20
002b94  e3a0501f          MOV      r5,#0x1f
002b98  e00532c4          AND      r3,r5,r4,ASR #5
;;;2138                   }
;;;2139                   break;
002b9c  ea000010          B        |L1.11236|
                  |L1.11168|
;;;2140               case CCR_SRAM_CHANNEL_2:
002ba0  e320f000          NOP      
;;;2141                   {
;;;2142                       u32Position = 0x1FU & (biGetCCR_GENERICSTAT_REG1_BEPOSS() >> 10);
002ba4  e3a04103          MOV      r4,#0xc0000000
002ba8  e5944090          LDR      r4,[r4,#0x90]
002bac  e7f34454          UBFX     r4,r4,#8,#20
002bb0  e3a0501f          MOV      r5,#0x1f
002bb4  e0053544          AND      r3,r5,r4,ASR #10
;;;2143                   }
;;;2144                   break;
002bb8  ea000009          B        |L1.11236|
                  |L1.11196|
;;;2145               case CCR_SRAM_CHANNEL_3:
002bbc  e320f000          NOP      
;;;2146                   {
;;;2147                       u32Position = 0x1FU & (biGetCCR_GENERICSTAT_REG1_BEPOSS() >> 15);
002bc0  e3a04103          MOV      r4,#0xc0000000
002bc4  e5944090          LDR      r4,[r4,#0x90]
002bc8  e7f34454          UBFX     r4,r4,#8,#20
002bcc  e3a0501f          MOV      r5,#0x1f
002bd0  e00537c4          AND      r3,r5,r4,ASR #15
;;;2148                   }
;;;2149                   break;
002bd4  ea000002          B        |L1.11236|
                  |L1.11224|
;;;2150               default:
002bd8  e320f000          NOP      
;;;2151                   {
;;;2152                       i32Res = C_FAILED;
002bdc  e3e00000          MVN      r0,#0
;;;2153                   }
;;;2154                   break;
002be0  e320f000          NOP      
                  |L1.11236|
002be4  e320f000          NOP                            ;2134
;;;2155           }
;;;2156           if (C_SUCCESS == i32Res)
002be8  e3500000          CMP      r0,#0
002bec  1a000002          BNE      |L1.11260|
;;;2157           {
;;;2158               *pu8Position = (uint8_t) u32Position;
002bf0  e5c13000          STRB     r3,[r1,#0]
002bf4  ea000000          B        |L1.11260|
                  |L1.11256|
;;;2159           }
;;;2160       }
;;;2161       else
;;;2162       {
;;;2163           i32Res = C_FAILED;
002bf8  e3e00000          MVN      r0,#0
                  |L1.11260|
;;;2164   
;;;2165       }
;;;2166       return i32Res;
;;;2167   }
002bfc  e8bd8030          POP      {r4,r5,pc}
;;;2168   
                          ENDP

                  i32CCR_GetSRAMLastCheckResult PROC
;;;2170   /****************************************************************************/
;;;2171   int32_t i32CCR_GetSRAMLastCheckResult(ccr_sram_channel_e eChannel, ccr_enable_e * peEn)
002c00  e92d4030          PUSH     {r4,r5,lr}
;;;2172   {
002c04  e1a02000          MOV      r2,r0
;;;2173       uint32_t u32Enb = 0U;
002c08  e3a03000          MOV      r3,#0
;;;2174       int32_t  i32Res = C_SUCCESS;
002c0c  e3a00000          MOV      r0,#0
;;;2175   
;;;2176       if (0x00 != peEn)
002c10  e3510000          CMP      r1,#0
002c14  0a00002b          BEQ      |L1.11464|
;;;2177       {
;;;2178           switch(eChannel)
002c18  e3520000          CMP      r2,#0
002c1c  0a000006          BEQ      |L1.11324|
002c20  e3520001          CMP      r2,#1
002c24  0a00000a          BEQ      |L1.11348|
002c28  e3520002          CMP      r2,#2
002c2c  0a00000f          BEQ      |L1.11376|
002c30  e3520003          CMP      r2,#3
002c34  1a00001b          BNE      |L1.11432|
002c38  ea000013          B        |L1.11404|
                  |L1.11324|
;;;2179           {
;;;2180               case CCR_SRAM_CHANNEL_0:
002c3c  e320f000          NOP      
;;;2181                   {
;;;2182                       u32Enb = 0x1U & biGetCCR_GENERICSTAT_REG1_BERESS();
002c40  e3a04103          MOV      r4,#0xc0000000
002c44  e5944090          LDR      r4,[r4,#0x90]
002c48  e3a05001          MOV      r5,#1
002c4c  e0053e24          AND      r3,r5,r4,LSR #28
;;;2183                   }
;;;2184                   break;
002c50  ea000017          B        |L1.11444|
                  |L1.11348|
;;;2185               case CCR_SRAM_CHANNEL_1:
002c54  e320f000          NOP      
;;;2186                   {
;;;2187                       u32Enb = ( 0x2U & biGetCCR_GENERICSTAT_REG1_BERESS() ) >> 1U;
002c58  e3a04103          MOV      r4,#0xc0000000
002c5c  e5944090          LDR      r4,[r4,#0x90]
002c60  e3a05002          MOV      r5,#2
002c64  e0054e24          AND      r4,r5,r4,LSR #28
002c68  e1a030a4          LSR      r3,r4,#1
;;;2188                   }
;;;2189                   break;
002c6c  ea000010          B        |L1.11444|
                  |L1.11376|
;;;2190               case CCR_SRAM_CHANNEL_2:
002c70  e320f000          NOP      
;;;2191                   {
;;;2192                       u32Enb = ( 0x4U & biGetCCR_GENERICSTAT_REG1_BERESS() ) >> 2U;
002c74  e3a04103          MOV      r4,#0xc0000000
002c78  e5944090          LDR      r4,[r4,#0x90]
002c7c  e3a05004          MOV      r5,#4
002c80  e0054e24          AND      r4,r5,r4,LSR #28
002c84  e1a03124          LSR      r3,r4,#2
;;;2193                   }
;;;2194                   break;
002c88  ea000009          B        |L1.11444|
                  |L1.11404|
;;;2195               case CCR_SRAM_CHANNEL_3:
002c8c  e320f000          NOP      
;;;2196                   {
;;;2197                       u32Enb = ( 0x8U & biGetCCR_GENERICSTAT_REG1_BERESS() ) >> 3U;
002c90  e3a04103          MOV      r4,#0xc0000000
002c94  e5944090          LDR      r4,[r4,#0x90]
002c98  e3a05008          MOV      r5,#8
002c9c  e0054e24          AND      r4,r5,r4,LSR #28
002ca0  e1a031a4          LSR      r3,r4,#3
;;;2198                   }
;;;2199                   break;
002ca4  ea000002          B        |L1.11444|
                  |L1.11432|
;;;2200               default:
002ca8  e320f000          NOP      
;;;2201                   {
;;;2202                       i32Res = C_FAILED;
002cac  e3e00000          MVN      r0,#0
;;;2203                   }
;;;2204                   break;
002cb0  e320f000          NOP      
                  |L1.11444|
002cb4  e320f000          NOP                            ;2184
;;;2205           }
;;;2206           if (C_SUCCESS == i32Res)
002cb8  e3500000          CMP      r0,#0
002cbc  1a000002          BNE      |L1.11468|
;;;2207           {
;;;2208               *peEn = (ccr_enable_e) u32Enb;
002cc0  e5c13000          STRB     r3,[r1,#0]
002cc4  ea000000          B        |L1.11468|
                  |L1.11464|
;;;2209           }
;;;2210       }
;;;2211       else
;;;2212       {
;;;2213           i32Res = C_FAILED;
002cc8  e3e00000          MVN      r0,#0
                  |L1.11468|
;;;2214   
;;;2215       }
;;;2216       return i32Res;
;;;2217   }
002ccc  e8bd8030          POP      {r4,r5,pc}
;;;2218   
                          ENDP

                  eCCR_GetDeviceVersion PROC
;;;2220   /****************************************************************************/
;;;2221   ccr_device_version_e eCCR_GetDeviceVersion(void)
002cd0  e59f0ee8          LDR      r0,|L1.15296|
;;;2222   {
;;;2223       return (ccr_device_version_e)biGetPDHR_VER_VER();
002cd4  e1d000bc          LDRH     r0,[r0,#0xc]
002cd8  e2000003          AND      r0,r0,#3
;;;2224   }
002cdc  e12fff1e          BX       lr
;;;2225   
                          ENDP

                  eCCR_GetSIPFlashSize PROC
;;;2227   /****************************************************************************/
;;;2228   ccr_SIPflash_size_e eCCR_GetSIPFlashSize(void)
002ce0  e59f0ed8          LDR      r0,|L1.15296|
;;;2229   {
;;;2230       return (ccr_SIPflash_size_e)biGetPDHR_VER_FLASH_SIZE();
002ce4  e1d000bc          LDRH     r0,[r0,#0xc]
002ce8  e7e10450          UBFX     r0,r0,#8,#2
;;;2231   }
002cec  e12fff1e          BX       lr
;;;2232   
                          ENDP

                  eCCR_GeCR4DebugStatus PROC
;;;2233   /****************************************************************************/
;;;2234   ccr_enable_e eCCR_GeCR4DebugStatus(void)
002cf0  e59f2ec8          LDR      r2,|L1.15296|
;;;2235   {
;;;2236       uint32_t      u32Cr4Dbg;
;;;2237       ccr_enable_e  eResult;
;;;2238   
;;;2239       /* Check the JTAG port control-bit value */
;;;2240       u32Cr4Dbg = biGetPDHR_DBG_CR4DEBUG();
002cf4  e1d221b0          LDRH     r2,[r2,#0x10]
002cf8  e2021001          AND      r1,r2,#1
;;;2241   
;;;2242       /* if bit value is '1' - JTAG is Disabled */
;;;2243       if(CCR_DEBUG_CTRL_BIT == (u32Cr4Dbg & CCR_DEBUG_CTRL_BIT))
002cfc  e3510000          CMP      r1,#0
002d00  0a000001          BEQ      |L1.11532|
;;;2244       {
;;;2245           eResult = CCR_DISABLE;
002d04  e3a00000          MOV      r0,#0
002d08  ea000000          B        |L1.11536|
                  |L1.11532|
;;;2246       }
;;;2247       else   /* if bit value is '0' - JTAG is Enabled */
;;;2248       {
;;;2249           eResult = CCR_ENABLE;
002d0c  e3a00001          MOV      r0,#1
                  |L1.11536|
;;;2250       }
;;;2251       return eResult;
;;;2252   }
002d10  e12fff1e          BX       lr
;;;2253   
                          ENDP

                  i32CCR_EnableR4DebugPort PROC
;;;2254   /****************************************************************************/
;;;2255   int32_t i32CCR_EnableR4DebugPort(ccr_processor_device_e eProcessorType, ccr_enable_e eEn)
002d14  e92d4010          PUSH     {r4,lr}
;;;2256   {
002d18  e1a02000          MOV      r2,r0
;;;2257       int32_t i32Res = C_SUCCESS;
002d1c  e3a00000          MOV      r0,#0
;;;2258   
;;;2259       switch(eProcessorType)
002d20  e3520000          CMP      r2,#0
002d24  1a000012          BNE      |L1.11636|
;;;2260       {
;;;2261           case CCR_CR4:
;;;2262               {
;;;2263                   vCCR_PDH_UNLOCK();
002d28  e51f37c0          LDR      r3,|L1.9584|
002d2c  e59f4e8c          LDR      r4,|L1.15296|
002d30  e5944000          LDR      r4,[r4,#0]
002d34  e59f4e84          LDR      r4,|L1.15296|
002d38  e5843000          STR      r3,[r4,#0]
;;;2264                   if (CCR_ENABLE == eEn)
002d3c  e3510001          CMP      r1,#1
002d40  1a000004          BNE      |L1.11608|
;;;2265                   {
;;;2266                       vSetPDHR_DBG_CR4DEBUG((uint16_t)CCR_DISABLE);
002d44  e1c43000          BIC      r3,r4,r0
002d48  e1d331b0          LDRH     r3,[r3,#0x10]
002d4c  e3c33001          BIC      r3,r3,#1
002d50  e1c431b0          STRH     r3,[r4,#0x10]
002d54  ea000005          B        |L1.11632|
                  |L1.11608|
;;;2267                   }
;;;2268                   else
;;;2269                   {
;;;2270                       vSetPDHR_DBG_CR4DEBUG((uint16_t)CCR_ENABLE);
002d58  e59f3e60          LDR      r3,|L1.15296|
002d5c  e1d331b0          LDRH     r3,[r3,#0x10]
002d60  e3c33001          BIC      r3,r3,#1
002d64  e2833001          ADD      r3,r3,#1
002d68  e59f4e50          LDR      r4,|L1.15296|
002d6c  e1c431b0          STRH     r3,[r4,#0x10]
                  |L1.11632|
;;;2271                   }
;;;2272               }
;;;2273               break;
002d70  ea000002          B        |L1.11648|
                  |L1.11636|
;;;2274           default:
002d74  e320f000          NOP      
;;;2275               {
;;;2276                   i32Res = C_FAILED;
002d78  e3e00000          MVN      r0,#0
;;;2277               }
;;;2278               break;
002d7c  e320f000          NOP      
                  |L1.11648|
002d80  e320f000          NOP                            ;2273
;;;2279       }
;;;2280   
;;;2281       return i32Res;
;;;2282   }
002d84  e8bd8010          POP      {r4,pc}
;;;2283   
                          ENDP

                  i32CCR_SetVRegCurrentTrim PROC
;;;2285   /****************************************************************************/
;;;2286   int32_t i32CCR_SetVRegCurrentTrim(ccr_vreg_current_trim_e eValue)
002d88  e1a01000          MOV      r1,r0
;;;2287   {
;;;2288       int32_t i32Res = C_SUCCESS;
002d8c  e3a00000          MOV      r0,#0
;;;2289   
;;;2290       if (eValue <= CCR_VREG_CURRENT_TRIM_M_10_PROZ)
002d90  e3510007          CMP      r1,#7
002d94  ca00000a          BGT      |L1.11716|
;;;2291       {
;;;2292           vCCR_PDH_UNLOCK();
002d98  e51f2830          LDR      r2,|L1.9584|
002d9c  e59f3e1c          LDR      r3,|L1.15296|
002da0  e5933000          LDR      r3,[r3,#0]
002da4  e59f3e14          LDR      r3,|L1.15296|
002da8  e5832000          STR      r2,[r3,#0]
;;;2293           vSetPDHR_VREGCR_VREG_IT(eValue);
002dac  e1832da2          ORR      r2,r3,r2,LSR #27
002db0  e5922000          LDR      r2,[r2,#0]
002db4  e7c22011          BFI      r2,r1,#0,#3
002db8  e2833014          ADD      r3,r3,#0x14
002dbc  e5832000          STR      r2,[r3,#0]
002dc0  ea000000          B        |L1.11720|
                  |L1.11716|
;;;2294       }
;;;2295       else
;;;2296       {
;;;2297           i32Res = C_FAILED;
002dc4  e3e00000          MVN      r0,#0
                  |L1.11720|
;;;2298       }
;;;2299   
;;;2300       return i32Res;
;;;2301   }
002dc8  e12fff1e          BX       lr
;;;2302   
                          ENDP

                  i32CCR_SetVRegRefVoltageTrim PROC
;;;2304   /****************************************************************************/
;;;2305   int32_t i32CCR_SetVRegRefVoltageTrim(ccr_vreg_ref_voltage_trim_e eValue)
002dcc  e1a01000          MOV      r1,r0
;;;2306   {
;;;2307       int32_t i32Res = C_SUCCESS;
002dd0  e3a00000          MOV      r0,#0
;;;2308   
;;;2309       if (eValue <= CCR_VREG_REF_VOLTAGE_TRIM_P_0_5_PROZ)
002dd4  e351001f          CMP      r1,#0x1f
002dd8  ca00000a          BGT      |L1.11784|
;;;2310       {
;;;2311           vCCR_PDH_UNLOCK();
002ddc  e51f2874          LDR      r2,|L1.9584|
002de0  e59f3dd8          LDR      r3,|L1.15296|
002de4  e5933000          LDR      r3,[r3,#0]
002de8  e59f3dd0          LDR      r3,|L1.15296|
002dec  e5832000          STR      r2,[r3,#0]
;;;2312           vSetPDHR_VREGCR_VREG_VT(eValue);
002df0  e1832da2          ORR      r2,r3,r2,LSR #27
002df4  e5922000          LDR      r2,[r2,#0]
002df8  e7cc2411          BFI      r2,r1,#8,#5
002dfc  e2833014          ADD      r3,r3,#0x14
002e00  e5832000          STR      r2,[r3,#0]
002e04  ea000000          B        |L1.11788|
                  |L1.11784|
;;;2313       }
;;;2314       else
;;;2315       {
;;;2316           i32Res = C_FAILED;
002e08  e3e00000          MVN      r0,#0
                  |L1.11788|
;;;2317       }
;;;2318   
;;;2319       return i32Res;
;;;2320   }
002e0c  e12fff1e          BX       lr
;;;2321   
                          ENDP

                  i32CCR_SetVRegTemperatureTrim PROC
;;;2323   /****************************************************************************/
;;;2324   int32_t i32CCR_SetVRegTemperatureTrim(ccr_vreg_temperature_trim_e eValue)
002e10  e1a01000          MOV      r1,r0
;;;2325   {
;;;2326       int32_t i32Res = C_SUCCESS;
002e14  e3a00000          MOV      r0,#0
;;;2327   
;;;2328       if (eValue <= CCR_VREG_TEMPERATURE_TRIM_M_25_DEGC)
002e18  e3510007          CMP      r1,#7
002e1c  ca00000a          BGT      |L1.11852|
;;;2329       {
;;;2330           vCCR_PDH_UNLOCK();
002e20  e51f28b8          LDR      r2,|L1.9584|
002e24  e59f3d94          LDR      r3,|L1.15296|
002e28  e5933000          LDR      r3,[r3,#0]
002e2c  e59f3d8c          LDR      r3,|L1.15296|
002e30  e5832000          STR      r2,[r3,#0]
;;;2331           vSetPDHR_VREGCR_VREG_TT(eValue);
002e34  e1832da2          ORR      r2,r3,r2,LSR #27
002e38  e5922000          LDR      r2,[r2,#0]
002e3c  e7d22811          BFI      r2,r1,#16,#3
002e40  e2833014          ADD      r3,r3,#0x14
002e44  e5832000          STR      r2,[r3,#0]
002e48  ea000000          B        |L1.11856|
                  |L1.11852|
;;;2332       }
;;;2333       else
;;;2334       {
;;;2335           i32Res = C_FAILED;
002e4c  e3e00000          MVN      r0,#0
                  |L1.11856|
;;;2336       }
;;;2337   
;;;2338       return i32Res;
;;;2339   }
002e50  e12fff1e          BX       lr
;;;2340   
                          ENDP

                  i32CCR_SetOscAdjustment PROC
;;;2342   /****************************************************************************/
;;;2343   int32_t i32CCR_SetOscAdjustment(ccr_osc_adjustment_e eValue)
002e54  e1a01000          MOV      r1,r0
;;;2344   {
;;;2345       int32_t i32Res = C_SUCCESS;
002e58  e3a00000          MOV      r0,#0
;;;2346   
;;;2347       if (eValue <= CCR_OSC_ADJUSTMENT_M_1)
002e5c  e351000f          CMP      r1,#0xf
002e60  ca00000a          BGT      |L1.11920|
;;;2348       {
;;;2349           vCCR_PDH_UNLOCK();
002e64  e51f28fc          LDR      r2,|L1.9584|
002e68  e59f3d50          LDR      r3,|L1.15296|
002e6c  e5933000          LDR      r3,[r3,#0]
002e70  e59f3d48          LDR      r3,|L1.15296|
002e74  e5832000          STR      r2,[r3,#0]
;;;2350           vSetPDHR_ANACR_RCOSC_ADJUST(eValue);
002e78  e1832da3          ORR      r2,r3,r3,LSR #27
002e7c  e5922000          LDR      r2,[r2,#0]
002e80  e7c32011          BFI      r2,r1,#0,#4
002e84  e1833da3          ORR      r3,r3,r3,LSR #27
002e88  e5832000          STR      r2,[r3,#0]
002e8c  ea000000          B        |L1.11924|
                  |L1.11920|
;;;2351       }
;;;2352       else
;;;2353       {
;;;2354           i32Res = C_FAILED;
002e90  e3e00000          MVN      r0,#0
                  |L1.11924|
;;;2355       }
;;;2356   
;;;2357       return i32Res;
;;;2358   }
002e94  e12fff1e          BX       lr
;;;2359   
                          ENDP

                  i32CCR_SetThresholdPowerGoodSensing PROC
;;;2361   /****************************************************************************/
;;;2362   int32_t i32CCR_SetThresholdPowerGoodSensing(ccr_threshold_power_good_sensing_e eValue)
002e98  e1a01000          MOV      r1,r0
;;;2363   {
;;;2364       int32_t i32Res = C_SUCCESS;
002e9c  e3a00000          MOV      r0,#0
;;;2365   
;;;2366       if (eValue <= CCR_POWER_GOOD_SENSING_4)
002ea0  e3510007          CMP      r1,#7
002ea4  ca00000a          BGT      |L1.11988|
;;;2367       {
;;;2368           vCCR_PDH_UNLOCK();
002ea8  e51f2940          LDR      r2,|L1.9584|
002eac  e59f3d0c          LDR      r3,|L1.15296|
002eb0  e5933000          LDR      r3,[r3,#0]
002eb4  e59f3d04          LDR      r3,|L1.15296|
002eb8  e5832000          STR      r2,[r3,#0]
;;;2369           vSetPDHR_ANACR_LVD_THRSH(eValue);
002ebc  e1832da3          ORR      r2,r3,r3,LSR #27
002ec0  e5922000          LDR      r2,[r2,#0]
002ec4  e7d22811          BFI      r2,r1,#16,#3
002ec8  e1833da3          ORR      r3,r3,r3,LSR #27
002ecc  e5832000          STR      r2,[r3,#0]
002ed0  ea000000          B        |L1.11992|
                  |L1.11988|
;;;2370       }
;;;2371       else
;;;2372       {
;;;2373           i32Res = C_FAILED;
002ed4  e3e00000          MVN      r0,#0
                  |L1.11992|
;;;2374       }
;;;2375   
;;;2376       return i32Res;
;;;2377   }
002ed8  e12fff1e          BX       lr
;;;2378   
                          ENDP

                  i32CCR_SetAlarmComparatorThreshold PROC
;;;2380   /****************************************************************************/
;;;2381   int32_t i32CCR_SetAlarmComparatorThreshold(ccr_alarm_no_e eAlarmNo, uint8_t u8Value)
002edc  e92d4010          PUSH     {r4,lr}
;;;2382   {
002ee0  e1a02000          MOV      r2,r0
;;;2383       int32_t i32Res = C_SUCCESS;
002ee4  e3a00000          MOV      r0,#0
;;;2384   
;;;2385       if (u8Value <= MAX_ALARM_THRESHOLD)
002ee8  e351001f          CMP      r1,#0x1f
002eec  ca000012          BGT      |L1.12092|
;;;2386       {
;;;2387           vCCR_PDH_UNLOCK();
002ef0  e51f3988          LDR      r3,|L1.9584|
002ef4  e59f4cc4          LDR      r4,|L1.15296|
002ef8  e5944000          LDR      r4,[r4,#0]
002efc  e59f4cbc          LDR      r4,|L1.15296|
002f00  e5843000          STR      r3,[r4,#0]
;;;2388           if (CCR_ALARM_0 == eAlarmNo)
002f04  e3520000          CMP      r2,#0
002f08  1a000005          BNE      |L1.12068|
;;;2389           {
;;;2390               vSetPDHR_ALAMCR_ALM_THRSH0(u8Value);
002f0c  e284301c          ADD      r3,r4,#0x1c
002f10  e5933000          LDR      r3,[r3,#0]
002f14  e7c53011          BFI      r3,r1,#0,#6
002f18  e284401c          ADD      r4,r4,#0x1c
002f1c  e5843000          STR      r3,[r4,#0]
002f20  ea000006          B        |L1.12096|
                  |L1.12068|
;;;2391           }
;;;2392           else
;;;2393           {
;;;2394               vSetPDHR_ALAMCR_ALM_THRSH1(u8Value);
002f24  e59f3c98          LDR      r3,|L1.15300|
002f28  e5933000          LDR      r3,[r3,#0]
002f2c  e7d53811          BFI      r3,r1,#16,#6
002f30  e59f4c8c          LDR      r4,|L1.15300|
002f34  e5843000          STR      r3,[r4,#0]
002f38  ea000000          B        |L1.12096|
                  |L1.12092|
;;;2395           }
;;;2396       }
;;;2397       else
;;;2398       {
;;;2399           i32Res = C_FAILED;
002f3c  e3e00000          MVN      r0,#0
                  |L1.12096|
;;;2400       }
;;;2401   
;;;2402       return i32Res;
;;;2403   }
002f40  e8bd8010          POP      {r4,pc}
;;;2404   
                          ENDP

                  vCCR_EnableAlarm PROC
;;;2406   /****************************************************************************/
;;;2407   void vCCR_EnableAlarm(ccr_alarm_no_e eAlarmNo, ccr_enable_e eEn)
002f44  e51f29dc          LDR      r2,|L1.9584|
;;;2408   {
;;;2409       vCCR_PDH_UNLOCK();
002f48  e59f3c70          LDR      r3,|L1.15296|
002f4c  e5933000          LDR      r3,[r3,#0]
002f50  e59f3c68          LDR      r3,|L1.15296|
002f54  e5832000          STR      r2,[r3,#0]
;;;2410   
;;;2411       if (CCR_ALARM_0 == eAlarmNo)
002f58  e3500000          CMP      r0,#0
002f5c  1a000005          BNE      |L1.12152|
;;;2412       {
;;;2413           vSetPDHR_ALAMCR_ALM_EN_0(eEn);
002f60  e283201c          ADD      r2,r3,#0x1c
002f64  e5922000          LDR      r2,[r2,#0]
002f68  e7c82411          BFI      r2,r1,#8,#1
002f6c  e283301c          ADD      r3,r3,#0x1c
002f70  e5832000          STR      r2,[r3,#0]
002f74  ea000004          B        |L1.12172|
                  |L1.12152|
;;;2414       }
;;;2415       else
;;;2416       {
;;;2417           vSetPDHR_ALAMCR_ALM_EN_1(eEn);
002f78  e59f2c44          LDR      r2,|L1.15300|
002f7c  e5922000          LDR      r2,[r2,#0]
002f80  e7d82c11          BFI      r2,r1,#24,#1
002f84  e59f3c38          LDR      r3,|L1.15300|
002f88  e5832000          STR      r2,[r3,#0]
                  |L1.12172|
;;;2418       }
;;;2419   }
002f8c  e12fff1e          BX       lr
;;;2420   
                          ENDP

                  i32CCR_EnableClockSupervisor PROC
;;;2421   /****************************************************************************/
;;;2422   int32_t i32CCR_EnableClockSupervisor(ccr_clocks_e eClocks, ccr_enable_e eEn)
002f90  e92d4010          PUSH     {r4,lr}
;;;2423   {
002f94  e1a02000          MOV      r2,r0
;;;2424       int32_t i32Res = C_SUCCESS;
002f98  e3a00000          MOV      r0,#0
;;;2425   
;;;2426       if (eClocks <= CCR_OSC32K)
002f9c  e3520001          CMP      r2,#1
002fa0  ca00001f          BGT      |L1.12324|
;;;2427       {
;;;2428           switch (eClocks)
002fa4  e3520000          CMP      r2,#0
002fa8  0a000002          BEQ      |L1.12216|
002fac  e3520001          CMP      r2,#1
002fb0  1a000017          BNE      |L1.12308|
002fb4  ea00000a          B        |L1.12260|
                  |L1.12216|
;;;2429           {
;;;2430               case CCR_OSC10M:
002fb8  e320f000          NOP      
;;;2431                   {
;;;2432                       vCCR_PDH_UNLOCK();
002fbc  e51f3a54          LDR      r3,|L1.9584|
002fc0  e59f4bf8          LDR      r4,|L1.15296|
002fc4  e5944000          LDR      r4,[r4,#0]
002fc8  e59f4bf0          LDR      r4,|L1.15296|
002fcc  e5843000          STR      r3,[r4,#0]
;;;2433                       vSetPDHR_CSVOSC10M_CSV_OSC10MEN((uint16_t)eEn);
002fd0  e0043143          AND      r3,r4,r3,ASR #2
002fd4  e1d332b0          LDRH     r3,[r3,#0x20]
002fd8  e7c03011          BFI      r3,r1,#0,#1
002fdc  e1c432b0          STRH     r3,[r4,#0x20]
;;;2434                   }
;;;2435                   break;
002fe0  ea00000e          B        |L1.12320|
                  |L1.12260|
;;;2436               case CCR_OSC32K:
002fe4  e320f000          NOP      
;;;2437                   {
;;;2438                       vCCR_PDH_UNLOCK();
002fe8  e51f3a80          LDR      r3,|L1.9584|
002fec  e59f4bcc          LDR      r4,|L1.15296|
002ff0  e5944000          LDR      r4,[r4,#0]
002ff4  e59f4bc4          LDR      r4,|L1.15296|
002ff8  e5843000          STR      r3,[r4,#0]
;;;2439                       vSetPDHR_CSVOSC32KEN_CSV_OSC32KEN((uint8_t)eEn);
002ffc  e2843024          ADD      r3,r4,#0x24
003000  e5d33000          LDRB     r3,[r3,#0]
003004  e7c03011          BFI      r3,r1,#0,#1
003008  e2844024          ADD      r4,r4,#0x24
00300c  e5c43000          STRB     r3,[r4,#0]
;;;2440                   }
;;;2441                   break;
003010  ea000002          B        |L1.12320|
                  |L1.12308|
;;;2442               default:
003014  e320f000          NOP      
;;;2443                   {
;;;2444                       i32Res = C_FAILED;
003018  e3e00000          MVN      r0,#0
;;;2445                   }
;;;2446                   break;
00301c  e320f000          NOP      
                  |L1.12320|
003020  ea000000          B        |L1.12328|
                  |L1.12324|
;;;2447           }
;;;2448       }
;;;2449       else
;;;2450       {
;;;2451           i32Res = C_FAILED;
003024  e3e00000          MVN      r0,#0
                  |L1.12328|
;;;2452       }
;;;2453   
;;;2454       return i32Res;
;;;2455   }
003028  e8bd8010          POP      {r4,pc}
;;;2456   
                          ENDP

                  vCCR_EnableOSC10MClockSupervisorOutputResetFunction PROC
;;;2458   /****************************************************************************/
;;;2459   void vCCR_EnableOSC10MClockSupervisorOutputResetFunction(ccr_enable_e eEn)
00302c  e51f1ac4          LDR      r1,|L1.9584|
;;;2460   {
;;;2461       vCCR_PDH_UNLOCK();
003030  e59f2b88          LDR      r2,|L1.15296|
003034  e5922000          LDR      r2,[r2,#0]
003038  e59f2b80          LDR      r2,|L1.15296|
00303c  e5821000          STR      r1,[r2,#0]
;;;2462       vSetPDHR_CSVOSC10M_CSV_OSC10MRST(eEn);
003040  e0021141          AND      r1,r2,r1,ASR #2
003044  e1d112b0          LDRH     r1,[r1,#0x20]
003048  e7c81410          BFI      r1,r0,#8,#1
00304c  e1c212b0          STRH     r1,[r2,#0x20]
;;;2463   }
003050  e12fff1e          BX       lr
;;;2464   
                          ENDP

                  vCCR_EnableOSC32KHz PROC
;;;2466   /****************************************************************************/
;;;2467   void vCCR_EnableOSC32KHz(ccr_enable_e eEn)
003054  e51f1aec          LDR      r1,|L1.9584|
;;;2468   {
;;;2469       vCCR_PDH_UNLOCK();
003058  e59f2b60          LDR      r2,|L1.15296|
00305c  e5922000          LDR      r2,[r2,#0]
003060  e59f2b58          LDR      r2,|L1.15296|
003064  e5821000          STR      r1,[r2,#0]
;;;2470       vSetPDHR_CFGR_OSC32KD(eEn);
003068  e0021141          AND      r1,r2,r1,ASR #2
00306c  e1d112b8          LDRH     r1,[r1,#0x28]
003070  e7c01010          BFI      r1,r0,#0,#1
003074  e1c212b8          STRH     r1,[r2,#0x28]
;;;2471   }
003078  e12fff1e          BX       lr
;;;2472   
                          ENDP

                  vCCR_ConfigureSmcIOLevel PROC
;;;2474   /****************************************************************************/
;;;2475   void vCCR_ConfigureSmcIOLevel(ccr_smc_io_level_e eLevel)
00307c  e51f1b14          LDR      r1,|L1.9584|
;;;2476   {
;;;2477       vCCR_PDH_UNLOCK();
003080  e59f2b38          LDR      r2,|L1.15296|
003084  e5922000          LDR      r2,[r2,#0]
003088  e59f2b30          LDR      r2,|L1.15296|
00308c  e5821000          STR      r1,[r2,#0]
;;;2478       vSetPDHR_CFGR_SMC3VONLY(eLevel);
003090  e0021141          AND      r1,r2,r1,ASR #2
003094  e1d112b8          LDRH     r1,[r1,#0x28]
003098  e7c81410          BFI      r1,r0,#8,#1
00309c  e1c212b8          STRH     r1,[r2,#0x28]
;;;2479   }
0030a0  e12fff1e          BX       lr
;;;2480   
                          ENDP

                  i32CCR_SetClockStabilizationCompareValue PROC
;;;2482   /****************************************************************************/
;;;2483   int32_t i32CCR_SetClockStabilizationCompareValue(ccr_clocks_e eClocks, uint8_t u8Value)
0030a4  e92d4010          PUSH     {r4,lr}
;;;2484   {
0030a8  e1a02000          MOV      r2,r0
;;;2485       int32_t i32Res = C_SUCCESS;
0030ac  e3a00000          MOV      r0,#0
;;;2486   
;;;2487       if (eClocks <= CCR_OSC32K)
0030b0  e3520001          CMP      r2,#1
0030b4  ca00001e          BGT      |L1.12596|
;;;2488       {
;;;2489           switch (eClocks)
0030b8  e3520000          CMP      r2,#0
0030bc  0a000002          BEQ      |L1.12492|
0030c0  e3520001          CMP      r2,#1
0030c4  1a000016          BNE      |L1.12580|
0030c8  ea00000a          B        |L1.12536|
                  |L1.12492|
;;;2490           {
;;;2491               case CCR_OSC10M:
0030cc  e320f000          NOP      
;;;2492                   {
;;;2493                       vCCR_PDH_UNLOCK();
0030d0  e51f3b68          LDR      r3,|L1.9584|
0030d4  e59f4ae4          LDR      r4,|L1.15296|
0030d8  e5944000          LDR      r4,[r4,#0]
0030dc  e59f4adc          LDR      r4,|L1.15296|
0030e0  e5843000          STR      r3,[r4,#0]
;;;2494                       vSetPDHR_SBCR_OSC10MSTBC(u8Value);
0030e4  e0043143          AND      r3,r4,r3,ASR #2
0030e8  e1d332bc          LDRH     r3,[r3,#0x2c]
0030ec  e7c43011          BFI      r3,r1,#0,#5
0030f0  e1c432bc          STRH     r3,[r4,#0x2c]
;;;2495                   }
;;;2496                   break;
0030f4  ea00000d          B        |L1.12592|
                  |L1.12536|
;;;2497               case CCR_OSC32K:
0030f8  e320f000          NOP      
;;;2498                   {
;;;2499                       vCCR_PDH_UNLOCK();
0030fc  e51f3b94          LDR      r3,|L1.9584|
003100  e59f4ab8          LDR      r4,|L1.15296|
003104  e5944000          LDR      r4,[r4,#0]
003108  e59f4ab0          LDR      r4,|L1.15296|
00310c  e5843000          STR      r3,[r4,#0]
;;;2500                       vSetPDHR_SBCR_OSC32KSTBC(u8Value);
003110  e0043143          AND      r3,r4,r3,ASR #2
003114  e1d332bc          LDRH     r3,[r3,#0x2c]
003118  e7cc3411          BFI      r3,r1,#8,#5
00311c  e1c432bc          STRH     r3,[r4,#0x2c]
;;;2501                   }
;;;2502                   break;
003120  ea000002          B        |L1.12592|
                  |L1.12580|
;;;2503               default:
003124  e320f000          NOP      
;;;2504                   {
;;;2505                       i32Res = C_FAILED;
003128  e3e00000          MVN      r0,#0
;;;2506                   }
;;;2507                   break;
00312c  e320f000          NOP      
                  |L1.12592|
003130  ea000000          B        |L1.12600|
                  |L1.12596|
;;;2508           }
;;;2509       }
;;;2510       else
;;;2511       {
;;;2512           i32Res = C_FAILED;
003134  e3e00000          MVN      r0,#0
                  |L1.12600|
;;;2513       }
;;;2514   
;;;2515       return i32Res;
;;;2516   }
003138  e8bd8010          POP      {r4,pc}
;;;2517   
                          ENDP

                  u16CCR_GetBootOptions PROC
;;;2519   /****************************************************************************/
;;;2520   uint16_t u16CCR_GetBootOptions(void)
00313c  e59f0a7c          LDR      r0,|L1.15296|
;;;2521   {
;;;2522       return u16GetPDHR_BOOTOPT();
003140  e1d003b0          LDRH     r0,[r0,#0x30]
;;;2523   }
003144  e12fff1e          BX       lr
;;;2524   
                          ENDP

                  u32CCR_GetSystemIntStatusAll PROC
;;;2526   /****************************************************************************/
;;;2527   uint32_t u32CCR_GetSystemIntStatusAll(void)
003148  e59f0a78          LDR      r0,|L1.15304|
;;;2528   {
;;;2529       return u32GetPDHR_INTSR();
00314c  e5900000          LDR      r0,[r0,#0]
;;;2530   }
003150  e12fff1e          BX       lr
;;;2531   
                          ENDP

                  eCCR_GetSystemIntStatusSingle PROC
;;;2533   /****************************************************************************/
;;;2534   ccr_enable_e eCCR_GetSystemIntStatusSingle(ccr_system_interrupt_e eInt)
003154  e1a01000          MOV      r1,r0
;;;2535   {
;;;2536       ccr_enable_e eEn;
;;;2537   
;;;2538       switch(eInt)
003158  e3510401          CMP      r1,#0x1000000
00315c  0a00002f          BEQ      |L1.12832|
003160  ca00000c          BGT      |L1.12696|
003164  e3510801          CMP      r1,#0x10000
003168  0a00001d          BEQ      |L1.12772|
00316c  ca000004          BGT      |L1.12676|
003170  e3510001          CMP      r1,#1
003174  0a000010          BEQ      |L1.12732|
003178  e3510c01          CMP      r1,#0x100
00317c  1a000040          BNE      |L1.12932|
003180  ea000012          B        |L1.12752|
                  |L1.12676|
003184  e3510802          CMP      r1,#0x20000
003188  0a00001a          BEQ      |L1.12792|
00318c  e3510701          CMP      r1,#0x40000
003190  1a00003b          BNE      |L1.12932|
003194  ea00001c          B        |L1.12812|
                  |L1.12696|
003198  e3510402          CMP      r1,#0x2000000
00319c  0a000024          BEQ      |L1.12852|
0031a0  e3510301          CMP      r1,#0x4000000
0031a4  0a000027          BEQ      |L1.12872|
0031a8  e3510302          CMP      r1,#0x8000000
0031ac  0a00002a          BEQ      |L1.12892|
0031b0  e3510201          CMP      r1,#0x10000000
0031b4  1a000032          BNE      |L1.12932|
0031b8  ea00002c          B        |L1.12912|
                  |L1.12732|
;;;2539       {
;;;2540           case CCR_OSC10M_CLOCK_MISSING_INT:
0031bc  e320f000          NOP      
;;;2541               {
;;;2542                   eEn = (ccr_enable_e)biGetPDHR_INTSR_CSV10MINT();
0031c0  e59f2a00          LDR      r2,|L1.15304|
0031c4  e5922000          LDR      r2,[r2,#0]
0031c8  e2020001          AND      r0,r2,#1
;;;2543               }
;;;2544               break;
0031cc  ea00002f          B        |L1.12944|
                  |L1.12752|
;;;2545           case CCR_OSC32K_CLOCK_MISSING_INT:
0031d0  e320f000          NOP      
;;;2546               {
;;;2547                   eEn = (ccr_enable_e)biGetPDHR_INTSR_CSV32KINT();
0031d4  e59f29ec          LDR      r2,|L1.15304|
0031d8  e5922000          LDR      r2,[r2,#0]
0031dc  e7e00452          UBFX     r0,r2,#8,#1
;;;2548               }
;;;2549               break;
0031e0  ea00002a          B        |L1.12944|
                  |L1.12772|
;;;2550           case CCR_EROR_INT_0:
0031e4  e320f000          NOP      
;;;2551               {
;;;2552                   eEn = (ccr_enable_e)biGetPDHR_INTSR_ERRINT0();
0031e8  e59f29d8          LDR      r2,|L1.15304|
0031ec  e5922000          LDR      r2,[r2,#0]
0031f0  e7e00852          UBFX     r0,r2,#16,#1
;;;2553               }
;;;2554               break;
0031f4  ea000025          B        |L1.12944|
                  |L1.12792|
;;;2555           case CCR_EROR_INT_1:
0031f8  e320f000          NOP      
;;;2556               {
;;;2557                   eEn = (ccr_enable_e)biGetPDHR_INTSR_ERRINT1();
0031fc  e59f29c4          LDR      r2,|L1.15304|
003200  e5922000          LDR      r2,[r2,#0]
003204  e7e008d2          UBFX     r0,r2,#17,#1
;;;2558               }
;;;2559               break;
003208  ea000020          B        |L1.12944|
                  |L1.12812|
;;;2560           case CCR_EROR_INT_2:
00320c  e320f000          NOP      
;;;2561               {
;;;2562                   eEn = (ccr_enable_e)biGetPDHR_INTSR_ERRINT2();
003210  e59f29b0          LDR      r2,|L1.15304|
003214  e5922000          LDR      r2,[r2,#0]
003218  e7e00952          UBFX     r0,r2,#18,#1
;;;2563               }
;;;2564               break;
00321c  ea00001b          B        |L1.12944|
                  |L1.12832|
;;;2565           case CCR_BACKUP_ECC_RAM_INT:
003220  e320f000          NOP      
;;;2566               {
;;;2567                   eEn = (ccr_enable_e)biGetPDHR_INTSR_BKPRAM_ECCNMI();
003224  e59f299c          LDR      r2,|L1.15304|
003228  e5922000          LDR      r2,[r2,#0]
00322c  e7e00c52          UBFX     r0,r2,#24,#1
;;;2568               }
;;;2569               break;
003230  ea000016          B        |L1.12944|
                  |L1.12852|
;;;2570           case CCR_MAIN_MEMORY_ECC_RAM_INT:
003234  e320f000          NOP      
;;;2571               {
;;;2572                   eEn = (ccr_enable_e)biGetPDHR_INTSR_MM_ECCNMI();
003238  e59f2988          LDR      r2,|L1.15304|
00323c  e5922000          LDR      r2,[r2,#0]
003240  e7e00cd2          UBFX     r0,r2,#25,#1
;;;2573               }
;;;2574               break;
003244  ea000011          B        |L1.12944|
                  |L1.12872|
;;;2575           case CCR_STPU_INT:
003248  e320f000          NOP      
;;;2576               {
;;;2577                   eEn = (ccr_enable_e)biGetPDHR_INTSR_STPU_NMI();
00324c  e59f2974          LDR      r2,|L1.15304|
003250  e5922000          LDR      r2,[r2,#0]
003254  e7e00d52          UBFX     r0,r2,#26,#1
;;;2578               }
;;;2579               break;
003258  ea00000c          B        |L1.12944|
                  |L1.12892|
;;;2580           case CCR_WDT_INT:
00325c  e320f000          NOP      
;;;2581               {
;;;2582                   eEn = (ccr_enable_e)biGetPDHR_INTSR_WDT_NMI();
003260  e59f2960          LDR      r2,|L1.15304|
003264  e5922000          LDR      r2,[r2,#0]
003268  e7e00dd2          UBFX     r0,r2,#27,#1
;;;2583               }
;;;2584               break;
00326c  ea000007          B        |L1.12944|
                  |L1.12912|
;;;2585           case CCR_IO_INT:
003270  e320f000          NOP      
;;;2586               {
;;;2587                   eEn = (ccr_enable_e)biGetPDHR_INTSR_IO_NMI();
003274  e59f294c          LDR      r2,|L1.15304|
003278  e5922000          LDR      r2,[r2,#0]
00327c  e7e00e52          UBFX     r0,r2,#28,#1
;;;2588               }
;;;2589               break;
003280  ea000002          B        |L1.12944|
                  |L1.12932|
;;;2590           default:
003284  e320f000          NOP      
;;;2591               {
;;;2592                   eEn = CCR_DISABLE;
003288  e3a00000          MOV      r0,#0
;;;2593               }
;;;2594               break;
00328c  e320f000          NOP      
                  |L1.12944|
003290  e320f000          NOP                            ;2544
;;;2595       }
;;;2596   
;;;2597       return eEn;
;;;2598   }
003294  e12fff1e          BX       lr
;;;2599   
                          ENDP

                  i32CCR_ClearSystemIntStatusSingle PROC
;;;2601   /****************************************************************************/
;;;2602   int32_t i32CCR_ClearSystemIntStatusSingle(ccr_system_interrupt_e eInt)
003298  e1a01000          MOV      r1,r0
;;;2603   {
;;;2604       int32_t i32Res = C_SUCCESS;
00329c  e3a00000          MOV      r0,#0
;;;2605   
;;;2606       switch(eInt)
0032a0  e3510802          CMP      r1,#0x20000
0032a4  0a000033          BEQ      |L1.13176|
0032a8  ca000006          BGT      |L1.13000|
0032ac  e3510001          CMP      r1,#1
0032b0  0a000009          BEQ      |L1.13020|
0032b4  e3510c01          CMP      r1,#0x100
0032b8  0a000014          BEQ      |L1.13072|
0032bc  e3510801          CMP      r1,#0x10000
0032c0  1a000053          BNE      |L1.13332|
0032c4  ea00001e          B        |L1.13124|
                  |L1.13000|
0032c8  e3510701          CMP      r1,#0x40000
0032cc  0a000036          BEQ      |L1.13228|
0032d0  e3510201          CMP      r1,#0x10000000
0032d4  1a00004e          BNE      |L1.13332|
0032d8  ea000040          B        |L1.13280|
                  |L1.13020|
;;;2607       {
;;;2608           case CCR_OSC10M_CLOCK_MISSING_INT:
0032dc  e320f000          NOP      
;;;2609               {
;;;2610                   vCCR_PDH_UNLOCK();
0032e0  e51f2d78          LDR      r2,|L1.9584|
0032e4  e59f38d4          LDR      r3,|L1.15296|
0032e8  e5933000          LDR      r3,[r3,#0]
0032ec  e59f38cc          LDR      r3,|L1.15296|
0032f0  e5832000          STR      r2,[r3,#0]
;;;2611                   vSetPDHR_INTCR_CSV10MINTC(1U);
0032f4  e2832038          ADD      r2,r3,#0x38
0032f8  e5922000          LDR      r2,[r2,#0]
0032fc  e3c22001          BIC      r2,r2,#1
003300  e2822001          ADD      r2,r2,#1
003304  e2833038          ADD      r3,r3,#0x38
003308  e5832000          STR      r2,[r3,#0]
;;;2612               }
;;;2613               break;
00330c  ea000043          B        |L1.13344|
                  |L1.13072|
;;;2614           case CCR_OSC32K_CLOCK_MISSING_INT:
003310  e320f000          NOP      
;;;2615               {
;;;2616                   vCCR_PDH_UNLOCK();
003314  e51f2dac          LDR      r2,|L1.9584|
003318  e59f38a0          LDR      r3,|L1.15296|
00331c  e5933000          LDR      r3,[r3,#0]
003320  e59f3898          LDR      r3,|L1.15296|
003324  e5832000          STR      r2,[r3,#0]
;;;2617                   vSetPDHR_INTCR_CSV32KINTC(1U);
003328  e2832038          ADD      r2,r3,#0x38
00332c  e5922000          LDR      r2,[r2,#0]
003330  e3c22c01          BIC      r2,r2,#0x100
003334  e2822c01          ADD      r2,r2,#0x100
003338  e2833038          ADD      r3,r3,#0x38
00333c  e5832000          STR      r2,[r3,#0]
;;;2618               }
;;;2619               break;
003340  ea000036          B        |L1.13344|
                  |L1.13124|
;;;2620           case CCR_EROR_INT_0:
003344  e320f000          NOP      
;;;2621               {
;;;2622                   vCCR_PDH_UNLOCK();
003348  e51f2de0          LDR      r2,|L1.9584|
00334c  e59f386c          LDR      r3,|L1.15296|
003350  e5933000          LDR      r3,[r3,#0]
003354  e59f3864          LDR      r3,|L1.15296|
003358  e5832000          STR      r2,[r3,#0]
;;;2623                   vSetPDHR_INTCR_ERRINT0C(1U);
00335c  e2832038          ADD      r2,r3,#0x38
003360  e5922000          LDR      r2,[r2,#0]
003364  e3c22801          BIC      r2,r2,#0x10000
003368  e2822801          ADD      r2,r2,#0x10000
00336c  e2833038          ADD      r3,r3,#0x38
003370  e5832000          STR      r2,[r3,#0]
;;;2624               }
;;;2625               break;
003374  ea000029          B        |L1.13344|
                  |L1.13176|
;;;2626           case CCR_EROR_INT_1:
003378  e320f000          NOP      
;;;2627               {
;;;2628                   vCCR_PDH_UNLOCK();
00337c  e51f2e14          LDR      r2,|L1.9584|
003380  e59f3838          LDR      r3,|L1.15296|
003384  e5933000          LDR      r3,[r3,#0]
003388  e59f3830          LDR      r3,|L1.15296|
00338c  e5832000          STR      r2,[r3,#0]
;;;2629                   vSetPDHR_INTCR_ERRINT1C(1U);
003390  e2832038          ADD      r2,r3,#0x38
003394  e5922000          LDR      r2,[r2,#0]
003398  e3c22802          BIC      r2,r2,#0x20000
00339c  e2822802          ADD      r2,r2,#0x20000
0033a0  e2833038          ADD      r3,r3,#0x38
0033a4  e5832000          STR      r2,[r3,#0]
;;;2630               }
;;;2631               break;
0033a8  ea00001c          B        |L1.13344|
                  |L1.13228|
;;;2632           case CCR_EROR_INT_2:
0033ac  e320f000          NOP      
;;;2633               {
;;;2634                   vCCR_PDH_UNLOCK();
0033b0  e51f2e48          LDR      r2,|L1.9584|
0033b4  e59f3804          LDR      r3,|L1.15296|
0033b8  e5933000          LDR      r3,[r3,#0]
0033bc  e59f37fc          LDR      r3,|L1.15296|
0033c0  e5832000          STR      r2,[r3,#0]
;;;2635                   vSetPDHR_INTCR_ERRINT2C(1U);
0033c4  e2832038          ADD      r2,r3,#0x38
0033c8  e5922000          LDR      r2,[r2,#0]
0033cc  e3c22701          BIC      r2,r2,#0x40000
0033d0  e2822701          ADD      r2,r2,#0x40000
0033d4  e2833038          ADD      r3,r3,#0x38
0033d8  e5832000          STR      r2,[r3,#0]
;;;2636               }
;;;2637               break;
0033dc  ea00000f          B        |L1.13344|
                  |L1.13280|
;;;2638           case CCR_IO_INT:
0033e0  e320f000          NOP      
;;;2639               {
;;;2640                   vCCR_PDH_UNLOCK();
0033e4  e51f2e7c          LDR      r2,|L1.9584|
0033e8  e59f37d0          LDR      r3,|L1.15296|
0033ec  e5933000          LDR      r3,[r3,#0]
0033f0  e59f37c8          LDR      r3,|L1.15296|
0033f4  e5832000          STR      r2,[r3,#0]
;;;2641                   vSetPDHR_INTCR_IO_NMIC(1U);
0033f8  e2832038          ADD      r2,r3,#0x38
0033fc  e5922000          LDR      r2,[r2,#0]
003400  e3c22201          BIC      r2,r2,#0x10000000
003404  e2822201          ADD      r2,r2,#0x10000000
003408  e2833038          ADD      r3,r3,#0x38
00340c  e5832000          STR      r2,[r3,#0]
;;;2642               }
;;;2643               break;
003410  ea000002          B        |L1.13344|
                  |L1.13332|
;;;2644           default:
003414  e320f000          NOP      
;;;2645               {
;;;2646                   i32Res = C_FAILED;
003418  e3e00000          MVN      r0,#0
;;;2647               }
;;;2648               break;
00341c  e320f000          NOP      
                  |L1.13344|
003420  e320f000          NOP                            ;2613
;;;2649       }
;;;2650   
;;;2651       return i32Res;
;;;2652   }
003424  e12fff1e          BX       lr
;;;2653   
                          ENDP

                  i32CCR_EnableECCInterrupt PROC
;;;2655   /****************************************************************************/
;;;2656   int32_t i32CCR_EnableECCInterrupt(ccr_ecc_e eEccType, ccr_ecc_interrupt_type_e eEccIntType)
003428  e92d4010          PUSH     {r4,lr}
;;;2657   {
00342c  e1a02000          MOV      r2,r0
;;;2658       int32_t i32Res = C_SUCCESS;
003430  e3a00000          MOV      r0,#0
;;;2659   
;;;2660       switch(eEccType)
003434  e3520000          CMP      r2,#0
003438  0a000002          BEQ      |L1.13384|
00343c  e3520001          CMP      r2,#1
003440  1a000016          BNE      |L1.13472|
003444  ea00000a          B        |L1.13428|
                  |L1.13384|
;;;2661       {
;;;2662           case CCR_BACKUP_RAM_ECC:
003448  e320f000          NOP      
;;;2663               {
;;;2664                   vCCR_PDH_UNLOCK();
00344c  e51f3ee4          LDR      r3,|L1.9584|
003450  e59f4768          LDR      r4,|L1.15296|
003454  e5944000          LDR      r4,[r4,#0]
003458  e59f4760          LDR      r4,|L1.15296|
00345c  e5843000          STR      r3,[r4,#0]
;;;2665                   vSetPDHR_ECCEN_BKPRAM_ECCEN(eEccIntType);
003460  e0043143          AND      r3,r4,r3,ASR #2
003464  e1d333bc          LDRH     r3,[r3,#0x3c]
003468  e7c13011          BFI      r3,r1,#0,#2
00346c  e1c433bc          STRH     r3,[r4,#0x3c]
;;;2666               }
;;;2667               break;
003470  ea00000d          B        |L1.13484|
                  |L1.13428|
;;;2668           case CCR_MAIN_MEMORY_ECC:
003474  e320f000          NOP      
;;;2669               {
;;;2670                   vCCR_PDH_UNLOCK();
003478  e51f3f10          LDR      r3,|L1.9584|
00347c  e59f473c          LDR      r4,|L1.15296|
003480  e5944000          LDR      r4,[r4,#0]
003484  e59f4734          LDR      r4,|L1.15296|
003488  e5843000          STR      r3,[r4,#0]
;;;2671                   vSetPDHR_ECCEN_MM_ECCEN(eEccIntType);
00348c  e0043143          AND      r3,r4,r3,ASR #2
003490  e1d333bc          LDRH     r3,[r3,#0x3c]
003494  e7c93411          BFI      r3,r1,#8,#2
003498  e1c433bc          STRH     r3,[r4,#0x3c]
;;;2672               }
;;;2673               break;
00349c  ea000002          B        |L1.13484|
                  |L1.13472|
;;;2674           default:
0034a0  e320f000          NOP      
;;;2675               {
;;;2676                   i32Res = C_FAILED;
0034a4  e3e00000          MVN      r0,#0
;;;2677               }
;;;2678               break;
0034a8  e320f000          NOP      
                  |L1.13484|
0034ac  e320f000          NOP                            ;2667
;;;2679       }
;;;2680   
;;;2681       return i32Res;
;;;2682   }
0034b0  e8bd8010          POP      {r4,pc}
;;;2683   
                          ENDP

                  u8CCR_GetDeviceModesAll PROC
;;;2685   /****************************************************************************/
;;;2686   uint8_t u8CCR_GetDeviceModesAll(void)
0034b4  e59f0710          LDR      r0,|L1.15308|
;;;2687   {
;;;2688       return u8GetPDHR_PRVSTATE();
0034b8  e5d00000          LDRB     r0,[r0,#0]
;;;2689   }
0034bc  e12fff1e          BX       lr
;;;2690   
                          ENDP

                  eCCR_GetDeviceModesSingle PROC
;;;2692   /****************************************************************************/
;;;2693   ccr_enable_e eCCR_GetDeviceModesSingle(ccr_modes_e eMode)
0034c0  e1a01000          MOV      r1,r0
;;;2694   {
;;;2695       ccr_enable_e eActive;
;;;2696   
;;;2697       switch(eMode)
0034c4  e3510005          CMP      r1,#5
0034c8  308ff101          ADDCC    pc,pc,r1,LSL #2
0034cc  ea00001d          B        |L1.13640|
0034d0  ea000003          B        |L1.13540|
0034d4  ea000007          B        |L1.13560|
0034d8  ea00000b          B        |L1.13580|
0034dc  ea00000f          B        |L1.13600|
0034e0  ea000013          B        |L1.13620|
                  |L1.13540|
;;;2698       {
;;;2699           case CCR_STB_MODE:
0034e4  e320f000          NOP      
;;;2700               {
;;;2701                   eActive = (ccr_enable_e)biGetPDHR_PRVSTATE_STB_MODE();
0034e8  e59f26dc          LDR      r2,|L1.15308|
0034ec  e5d22000          LDRB     r2,[r2,#0]
0034f0  e2020001          AND      r0,r2,#1
;;;2702               }
;;;2703               break;
0034f4  ea000016          B        |L1.13652|
                  |L1.13560|
;;;2704           case CCR_SLPOSC10_MODE:
0034f8  e320f000          NOP      
;;;2705               {
;;;2706                   eActive = (ccr_enable_e)biGetPDHR_PRVSTATE_SLPOSC10_MODE();
0034fc  e59f26c8          LDR      r2,|L1.15308|
003500  e5d22000          LDRB     r2,[r2,#0]
003504  e7e000d2          UBFX     r0,r2,#1,#1
;;;2707               }
;;;2708               break;
003508  ea000011          B        |L1.13652|
                  |L1.13580|
;;;2709           case CCR_SLPRCOSC_MODE:
00350c  e320f000          NOP      
;;;2710               {
;;;2711                   eActive = (ccr_enable_e)biGetPDHR_PRVSTATE_SLPRCOSC_MODE();
003510  e59f26b4          LDR      r2,|L1.15308|
003514  e5d22000          LDRB     r2,[r2,#0]
003518  e7e00152          UBFX     r0,r2,#2,#1
;;;2712               }
;;;2713               break;
00351c  ea00000c          B        |L1.13652|
                  |L1.13600|
;;;2714           case CCR_STOPR_MODE:
003520  e320f000          NOP      
;;;2715               {
;;;2716                   eActive = (ccr_enable_e)biGetPDHR_PRVSTATE_STOPR_MODE();
003524  e59f26a0          LDR      r2,|L1.15308|
003528  e5d22000          LDRB     r2,[r2,#0]
00352c  e7e001d2          UBFX     r0,r2,#3,#1
;;;2717               }
;;;2718               break;
003530  ea000007          B        |L1.13652|
                  |L1.13620|
;;;2719           case CCR_STOP_MODE:
003534  e320f000          NOP      
;;;2720               {
;;;2721                   eActive = (ccr_enable_e)biGetPDHR_PRVSTATE_STOP_MODE();
003538  e59f268c          LDR      r2,|L1.15308|
00353c  e5d22000          LDRB     r2,[r2,#0]
003540  e7e00252          UBFX     r0,r2,#4,#1
;;;2722               }
;;;2723               break;
003544  ea000002          B        |L1.13652|
                  |L1.13640|
;;;2724           default:
003548  e320f000          NOP      
;;;2725               {
;;;2726                   eActive = CCR_DISABLE;
00354c  e3a00000          MOV      r0,#0
;;;2727               }
;;;2728               break;
003550  e320f000          NOP      
                  |L1.13652|
003554  e320f000          NOP                            ;2703
;;;2729       }
;;;2730   
;;;2731       return eActive;
;;;2732   }
003558  e12fff1e          BX       lr
;;;2733   
                          ENDP

                  i32CCR_EnableWakeupSource PROC
;;;2735   /****************************************************************************/
;;;2736   int32_t i32CCR_EnableWakeupSource(ccr_wakeup_source_e eSource, ccr_enable_e eEn)
00355c  e92d4010          PUSH     {r4,lr}
;;;2737   {
003560  e1a02000          MOV      r2,r0
;;;2738       int32_t i32Res = C_SUCCESS;
003564  e3a00000          MOV      r0,#0
;;;2739   
;;;2740       switch(eSource)
003568  e3520008          CMP      r2,#8
00356c  308ff102          ADDCC    pc,pc,r2,LSL #2
003570  ea000067          B        |L1.14100|
003574  ea000006          B        |L1.13716|
003578  ea000011          B        |L1.13764|
00357c  ea00001c          B        |L1.13812|
003580  ea000027          B        |L1.13860|
003584  ea000032          B        |L1.13908|
003588  ea00003d          B        |L1.13956|
00358c  ea000048          B        |L1.14004|
003590  ea000053          B        |L1.14052|
                  |L1.13716|
;;;2741       {
;;;2742           case CCR_WAKEUP_SOURCE_0:
003594  e320f000          NOP      
;;;2743               {
;;;2744                   vCCR_PDH_UNLOCK();
003598  e59f3630          LDR      r3,|L1.15312|
00359c  e59f461c          LDR      r4,|L1.15296|
0035a0  e5944000          LDR      r4,[r4,#0]
0035a4  e59f4614          LDR      r4,|L1.15296|
0035a8  e5843000          STR      r3,[r4,#0]
;;;2745                   vSetPDHR_IOWKP_CFG_WAKINTEN0(eEn);
0035ac  e2843044          ADD      r3,r4,#0x44
0035b0  e5933000          LDR      r3,[r3,#0]
0035b4  e7c33191          BFI      r3,r1,#3,#1
0035b8  e2844044          ADD      r4,r4,#0x44
0035bc  e5843000          STR      r3,[r4,#0]
;;;2746               }
;;;2747               break;
0035c0  ea000056          B        |L1.14112|
                  |L1.13764|
;;;2748           case CCR_WAKEUP_SOURCE_1:
0035c4  e320f000          NOP      
;;;2749               {
;;;2750                   vCCR_PDH_UNLOCK();
0035c8  e59f3600          LDR      r3,|L1.15312|
0035cc  e59f45ec          LDR      r4,|L1.15296|
0035d0  e5944000          LDR      r4,[r4,#0]
0035d4  e59f45e4          LDR      r4,|L1.15296|
0035d8  e5843000          STR      r3,[r4,#0]
;;;2751                   vSetPDHR_IOWKP_CFG_WAKINTEN1(eEn);
0035dc  e2843044          ADD      r3,r4,#0x44
0035e0  e5933000          LDR      r3,[r3,#0]
0035e4  e7c73391          BFI      r3,r1,#7,#1
0035e8  e2844044          ADD      r4,r4,#0x44
0035ec  e5843000          STR      r3,[r4,#0]
;;;2752               }
;;;2753               break;
0035f0  ea00004a          B        |L1.14112|
                  |L1.13812|
;;;2754           case CCR_WAKEUP_SOURCE_2:
0035f4  e320f000          NOP      
;;;2755               {
;;;2756                   vCCR_PDH_UNLOCK();
0035f8  e59f35d0          LDR      r3,|L1.15312|
0035fc  e59f45bc          LDR      r4,|L1.15296|
003600  e5944000          LDR      r4,[r4,#0]
003604  e59f45b4          LDR      r4,|L1.15296|
003608  e5843000          STR      r3,[r4,#0]
;;;2757                   vSetPDHR_IOWKP_CFG_WAKINTEN2(eEn);
00360c  e2843044          ADD      r3,r4,#0x44
003610  e5933000          LDR      r3,[r3,#0]
003614  e7cb3591          BFI      r3,r1,#11,#1
003618  e2844044          ADD      r4,r4,#0x44
00361c  e5843000          STR      r3,[r4,#0]
;;;2758               }
;;;2759               break;
003620  ea00003e          B        |L1.14112|
                  |L1.13860|
;;;2760           case CCR_WAKEUP_SOURCE_3:
003624  e320f000          NOP      
;;;2761               {
;;;2762                   vCCR_PDH_UNLOCK();
003628  e59f35a0          LDR      r3,|L1.15312|
00362c  e59f458c          LDR      r4,|L1.15296|
003630  e5944000          LDR      r4,[r4,#0]
003634  e59f4584          LDR      r4,|L1.15296|
003638  e5843000          STR      r3,[r4,#0]
;;;2763                   vSetPDHR_IOWKP_CFG_WAKINTEN3(eEn);
00363c  e2843044          ADD      r3,r4,#0x44
003640  e5933000          LDR      r3,[r3,#0]
003644  e7cf3791          BFI      r3,r1,#15,#1
003648  e2844044          ADD      r4,r4,#0x44
00364c  e5843000          STR      r3,[r4,#0]
;;;2764               }
;;;2765               break;
003650  ea000032          B        |L1.14112|
                  |L1.13908|
;;;2766           case CCR_WAKEUP_SOURCE_4:
003654  e320f000          NOP      
;;;2767               {
;;;2768                   vCCR_PDH_UNLOCK();
003658  e59f3570          LDR      r3,|L1.15312|
00365c  e59f455c          LDR      r4,|L1.15296|
003660  e5944000          LDR      r4,[r4,#0]
003664  e59f4554          LDR      r4,|L1.15296|
003668  e5843000          STR      r3,[r4,#0]
;;;2769                   vSetPDHR_IOWKP_CFG_WAKINTEN4(eEn);
00366c  e2843044          ADD      r3,r4,#0x44
003670  e5933000          LDR      r3,[r3,#0]
003674  e7d33991          BFI      r3,r1,#19,#1
003678  e2844044          ADD      r4,r4,#0x44
00367c  e5843000          STR      r3,[r4,#0]
;;;2770               }
;;;2771               break;
003680  ea000026          B        |L1.14112|
                  |L1.13956|
;;;2772           case CCR_WAKEUP_SOURCE_5:
003684  e320f000          NOP      
;;;2773               {
;;;2774                   vCCR_PDH_UNLOCK();
003688  e59f3540          LDR      r3,|L1.15312|
00368c  e59f452c          LDR      r4,|L1.15296|
003690  e5944000          LDR      r4,[r4,#0]
003694  e59f4524          LDR      r4,|L1.15296|
003698  e5843000          STR      r3,[r4,#0]
;;;2775                   vSetPDHR_IOWKP_CFG_WAKINTEN5(eEn);
00369c  e2843044          ADD      r3,r4,#0x44
0036a0  e5933000          LDR      r3,[r3,#0]
0036a4  e7d73b91          BFI      r3,r1,#23,#1
0036a8  e2844044          ADD      r4,r4,#0x44
0036ac  e5843000          STR      r3,[r4,#0]
;;;2776               }
;;;2777               break;
0036b0  ea00001a          B        |L1.14112|
                  |L1.14004|
;;;2778           case CCR_WAKEUP_SOURCE_6:
0036b4  e320f000          NOP      
;;;2779               {
;;;2780                   vCCR_PDH_UNLOCK();
0036b8  e59f3510          LDR      r3,|L1.15312|
0036bc  e59f44fc          LDR      r4,|L1.15296|
0036c0  e5944000          LDR      r4,[r4,#0]
0036c4  e59f44f4          LDR      r4,|L1.15296|
0036c8  e5843000          STR      r3,[r4,#0]
;;;2781                   vSetPDHR_IOWKP_CFG_WAKINTEN6(eEn);
0036cc  e2843044          ADD      r3,r4,#0x44
0036d0  e5933000          LDR      r3,[r3,#0]
0036d4  e7db3d91          BFI      r3,r1,#27,#1
0036d8  e2844044          ADD      r4,r4,#0x44
0036dc  e5843000          STR      r3,[r4,#0]
;;;2782               }
;;;2783               break;
0036e0  ea00000e          B        |L1.14112|
                  |L1.14052|
;;;2784           case CCR_WAKEUP_SOURCE_7:
0036e4  e320f000          NOP      
;;;2785               {
;;;2786                   vCCR_PDH_UNLOCK();
0036e8  e59f34e0          LDR      r3,|L1.15312|
0036ec  e59f44cc          LDR      r4,|L1.15296|
0036f0  e5944000          LDR      r4,[r4,#0]
0036f4  e59f44c4          LDR      r4,|L1.15296|
0036f8  e5843000          STR      r3,[r4,#0]
;;;2787                   vSetPDHR_IOWKP_CFG_WAKINTEN7(eEn);
0036fc  e2843044          ADD      r3,r4,#0x44
003700  e5933000          LDR      r3,[r3,#0]
003704  e7df3f91          BFI      r3,r1,#31,#1
003708  e2844044          ADD      r4,r4,#0x44
00370c  e5843000          STR      r3,[r4,#0]
;;;2788               }
;;;2789               break;
003710  ea000002          B        |L1.14112|
                  |L1.14100|
;;;2790           default:
003714  e320f000          NOP      
;;;2791               {
;;;2792                   i32Res = C_FAILED;
003718  e3e00000          MVN      r0,#0
;;;2793               }
;;;2794               break;
00371c  e320f000          NOP      
                  |L1.14112|
003720  e320f000          NOP                            ;2747
;;;2795       }
;;;2796   
;;;2797       return i32Res;
;;;2798   }
003724  e8bd8010          POP      {r4,pc}
;;;2799   
                          ENDP

                  i32CCR_SetWakeupAttribute PROC
;;;2801   /****************************************************************************/
;;;2802   int32_t i32CCR_SetWakeupAttribute(ccr_wakeup_source_e eSource, ccr_wakeup_attribute_e eAttribute)
003728  e92d4010          PUSH     {r4,lr}
;;;2803   {
00372c  e1a02000          MOV      r2,r0
;;;2804       int32_t i32Res = C_SUCCESS;
003730  e3a00000          MOV      r0,#0
;;;2805   
;;;2806       switch(eSource)
003734  e3520008          CMP      r2,#8
003738  308ff102          ADDCC    pc,pc,r2,LSL #2
00373c  ea000067          B        |L1.14560|
003740  ea000006          B        |L1.14176|
003744  ea000011          B        |L1.14224|
003748  ea00001c          B        |L1.14272|
00374c  ea000027          B        |L1.14320|
003750  ea000032          B        |L1.14368|
003754  ea00003d          B        |L1.14416|
003758  ea000048          B        |L1.14464|
00375c  ea000053          B        |L1.14512|
                  |L1.14176|
;;;2807       {
;;;2808           case CCR_WAKEUP_SOURCE_0:
003760  e320f000          NOP      
;;;2809               {
;;;2810                   vCCR_PDH_UNLOCK();
003764  e59f3464          LDR      r3,|L1.15312|
003768  e59f4450          LDR      r4,|L1.15296|
00376c  e5944000          LDR      r4,[r4,#0]
003770  e59f4448          LDR      r4,|L1.15296|
003774  e5843000          STR      r3,[r4,#0]
;;;2811                   vSetPDHR_IOWKP_CFG_WAK_SEL0(eAttribute);
003778  e2843044          ADD      r3,r4,#0x44
00377c  e5933000          LDR      r3,[r3,#0]
003780  e7c23011          BFI      r3,r1,#0,#3
003784  e2844044          ADD      r4,r4,#0x44
003788  e5843000          STR      r3,[r4,#0]
;;;2812               }
;;;2813               break;
00378c  ea000056          B        |L1.14572|
                  |L1.14224|
;;;2814           case CCR_WAKEUP_SOURCE_1:
003790  e320f000          NOP      
;;;2815               {
;;;2816                   vCCR_PDH_UNLOCK();
003794  e59f3434          LDR      r3,|L1.15312|
003798  e59f4420          LDR      r4,|L1.15296|
00379c  e5944000          LDR      r4,[r4,#0]
0037a0  e59f4418          LDR      r4,|L1.15296|
0037a4  e5843000          STR      r3,[r4,#0]
;;;2817                   vSetPDHR_IOWKP_CFG_WAK_SEL1(eAttribute);
0037a8  e2843044          ADD      r3,r4,#0x44
0037ac  e5933000          LDR      r3,[r3,#0]
0037b0  e7c63211          BFI      r3,r1,#4,#3
0037b4  e2844044          ADD      r4,r4,#0x44
0037b8  e5843000          STR      r3,[r4,#0]
;;;2818               }
;;;2819               break;
0037bc  ea00004a          B        |L1.14572|
                  |L1.14272|
;;;2820           case CCR_WAKEUP_SOURCE_2:
0037c0  e320f000          NOP      
;;;2821               {
;;;2822                   vCCR_PDH_UNLOCK();
0037c4  e59f3404          LDR      r3,|L1.15312|
0037c8  e59f43f0          LDR      r4,|L1.15296|
0037cc  e5944000          LDR      r4,[r4,#0]
0037d0  e59f43e8          LDR      r4,|L1.15296|
0037d4  e5843000          STR      r3,[r4,#0]
;;;2823                   vSetPDHR_IOWKP_CFG_WAK_SEL2(eAttribute);
0037d8  e2843044          ADD      r3,r4,#0x44
0037dc  e5933000          LDR      r3,[r3,#0]
0037e0  e7ca3411          BFI      r3,r1,#8,#3
0037e4  e2844044          ADD      r4,r4,#0x44
0037e8  e5843000          STR      r3,[r4,#0]
;;;2824               }
;;;2825               break;
0037ec  ea00003e          B        |L1.14572|
                  |L1.14320|
;;;2826           case CCR_WAKEUP_SOURCE_3:
0037f0  e320f000          NOP      
;;;2827               {
;;;2828                   vCCR_PDH_UNLOCK();
0037f4  e59f33d4          LDR      r3,|L1.15312|
0037f8  e59f43c0          LDR      r4,|L1.15296|
0037fc  e5944000          LDR      r4,[r4,#0]
003800  e59f43b8          LDR      r4,|L1.15296|
003804  e5843000          STR      r3,[r4,#0]
;;;2829                   vSetPDHR_IOWKP_CFG_WAK_SEL3(eAttribute);
003808  e2843044          ADD      r3,r4,#0x44
00380c  e5933000          LDR      r3,[r3,#0]
003810  e7ce3611          BFI      r3,r1,#12,#3
003814  e2844044          ADD      r4,r4,#0x44
003818  e5843000          STR      r3,[r4,#0]
;;;2830               }
;;;2831               break;
00381c  ea000032          B        |L1.14572|
                  |L1.14368|
;;;2832           case CCR_WAKEUP_SOURCE_4:
003820  e320f000          NOP      
;;;2833               {
;;;2834                   vCCR_PDH_UNLOCK();
003824  e59f33a4          LDR      r3,|L1.15312|
003828  e59f4390          LDR      r4,|L1.15296|
00382c  e5944000          LDR      r4,[r4,#0]
003830  e59f4388          LDR      r4,|L1.15296|
003834  e5843000          STR      r3,[r4,#0]
;;;2835                   vSetPDHR_IOWKP_CFG_WAK_SEL4(eAttribute);
003838  e2843044          ADD      r3,r4,#0x44
00383c  e5933000          LDR      r3,[r3,#0]
003840  e7d23811          BFI      r3,r1,#16,#3
003844  e2844044          ADD      r4,r4,#0x44
003848  e5843000          STR      r3,[r4,#0]
;;;2836               }
;;;2837               break;
00384c  ea000026          B        |L1.14572|
                  |L1.14416|
;;;2838           case CCR_WAKEUP_SOURCE_5:
003850  e320f000          NOP      
;;;2839               {
;;;2840                   vCCR_PDH_UNLOCK();
003854  e59f3374          LDR      r3,|L1.15312|
003858  e59f4360          LDR      r4,|L1.15296|
00385c  e5944000          LDR      r4,[r4,#0]
003860  e59f4358          LDR      r4,|L1.15296|
003864  e5843000          STR      r3,[r4,#0]
;;;2841                   vSetPDHR_IOWKP_CFG_WAK_SEL5(eAttribute);
003868  e2843044          ADD      r3,r4,#0x44
00386c  e5933000          LDR      r3,[r3,#0]
003870  e7d63a11          BFI      r3,r1,#20,#3
003874  e2844044          ADD      r4,r4,#0x44
003878  e5843000          STR      r3,[r4,#0]
;;;2842               }
;;;2843               break;
00387c  ea00001a          B        |L1.14572|
                  |L1.14464|
;;;2844           case CCR_WAKEUP_SOURCE_6:
003880  e320f000          NOP      
;;;2845               {
;;;2846                   vCCR_PDH_UNLOCK();
003884  e59f3344          LDR      r3,|L1.15312|
003888  e59f4330          LDR      r4,|L1.15296|
00388c  e5944000          LDR      r4,[r4,#0]
003890  e59f4328          LDR      r4,|L1.15296|
003894  e5843000          STR      r3,[r4,#0]
;;;2847                   vSetPDHR_IOWKP_CFG_WAK_SEL6(eAttribute);
003898  e2843044          ADD      r3,r4,#0x44
00389c  e5933000          LDR      r3,[r3,#0]
0038a0  e7da3c11          BFI      r3,r1,#24,#3
0038a4  e2844044          ADD      r4,r4,#0x44
0038a8  e5843000          STR      r3,[r4,#0]
;;;2848               }
;;;2849               break;
0038ac  ea00000e          B        |L1.14572|
                  |L1.14512|
;;;2850           case CCR_WAKEUP_SOURCE_7:
0038b0  e320f000          NOP      
;;;2851               {
;;;2852                   vCCR_PDH_UNLOCK();
0038b4  e59f3314          LDR      r3,|L1.15312|
0038b8  e59f4300          LDR      r4,|L1.15296|
0038bc  e5944000          LDR      r4,[r4,#0]
0038c0  e59f42f8          LDR      r4,|L1.15296|
0038c4  e5843000          STR      r3,[r4,#0]
;;;2853                   vSetPDHR_IOWKP_CFG_WAK_SEL7(eAttribute);
0038c8  e2843044          ADD      r3,r4,#0x44
0038cc  e5933000          LDR      r3,[r3,#0]
0038d0  e7de3e11          BFI      r3,r1,#28,#3
0038d4  e2844044          ADD      r4,r4,#0x44
0038d8  e5843000          STR      r3,[r4,#0]
;;;2854               }
;;;2855               break;
0038dc  ea000002          B        |L1.14572|
                  |L1.14560|
;;;2856           default:
0038e0  e320f000          NOP      
;;;2857               {
;;;2858                   i32Res = C_FAILED;
0038e4  e3e00000          MVN      r0,#0
;;;2859               }
;;;2860               break;
0038e8  e320f000          NOP      
                  |L1.14572|
0038ec  e320f000          NOP                            ;2813
;;;2861       }
;;;2862   
;;;2863       return i32Res;
;;;2864   }
0038f0  e8bd8010          POP      {r4,pc}
;;;2865   
                          ENDP

                  u16CCR_GetWakeupSourceInterruptAll PROC
;;;2867   /****************************************************************************/
;;;2868   uint16_t u16CCR_GetWakeupSourceInterruptAll(ccr_wakeup_source_e eSource)
0038f4  e1a01000          MOV      r1,r0
;;;2869   {
;;;2870       return u16GetPDHR_WAKINTS();
0038f8  e59f02c0          LDR      r0,|L1.15296|
0038fc  e1d004b8          LDRH     r0,[r0,#0x48]
;;;2871   }
003900  e12fff1e          BX       lr
;;;2872   
                          ENDP

                  eCCR_GetWakeupSourceInterruptSingle PROC
;;;2874   /****************************************************************************/
;;;2875   ccr_enable_e eCCR_GetWakeupSourceInterruptSingle(ccr_wakeup_source_e eSource)
003904  e1a01000          MOV      r1,r0
;;;2876   {
;;;2877       ccr_enable_e eInterruptOccur;
;;;2878   
;;;2879       switch(eSource)
003908  e351000b          CMP      r1,#0xb
00390c  308ff101          ADDCC    pc,pc,r1,LSL #2
003910  ea000041          B        |L1.14876|
003914  ea000009          B        |L1.14656|
003918  ea00000d          B        |L1.14676|
00391c  ea000011          B        |L1.14696|
003920  ea000015          B        |L1.14716|
003924  ea000019          B        |L1.14736|
003928  ea00001d          B        |L1.14756|
00392c  ea000021          B        |L1.14776|
003930  ea000025          B        |L1.14796|
003934  ea000029          B        |L1.14816|
003938  ea00002d          B        |L1.14836|
00393c  ea000031          B        |L1.14856|
                  |L1.14656|
;;;2880       {
;;;2881           case CCR_WAKEUP_SOURCE_0:
003940  e320f000          NOP      
;;;2882               {
;;;2883                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS0();
003944  e59f2274          LDR      r2,|L1.15296|
003948  e1d224b8          LDRH     r2,[r2,#0x48]
00394c  e2020001          AND      r0,r2,#1
;;;2884               }
;;;2885               break;
003950  ea000034          B        |L1.14888|
                  |L1.14676|
;;;2886           case CCR_WAKEUP_SOURCE_1:
003954  e320f000          NOP      
;;;2887               {
;;;2888                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS1();
003958  e59f2260          LDR      r2,|L1.15296|
00395c  e1d224b8          LDRH     r2,[r2,#0x48]
003960  e7e000d2          UBFX     r0,r2,#1,#1
;;;2889               }
;;;2890               break;
003964  ea00002f          B        |L1.14888|
                  |L1.14696|
;;;2891           case CCR_WAKEUP_SOURCE_2:
003968  e320f000          NOP      
;;;2892               {
;;;2893                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS2();
00396c  e59f224c          LDR      r2,|L1.15296|
003970  e1d224b8          LDRH     r2,[r2,#0x48]
003974  e7e00152          UBFX     r0,r2,#2,#1
;;;2894               }
;;;2895               break;
003978  ea00002a          B        |L1.14888|
                  |L1.14716|
;;;2896           case CCR_WAKEUP_SOURCE_3:
00397c  e320f000          NOP      
;;;2897               {
;;;2898                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS3();
003980  e59f2238          LDR      r2,|L1.15296|
003984  e1d224b8          LDRH     r2,[r2,#0x48]
003988  e7e001d2          UBFX     r0,r2,#3,#1
;;;2899               }
;;;2900               break;
00398c  ea000025          B        |L1.14888|
                  |L1.14736|
;;;2901           case CCR_WAKEUP_SOURCE_4:
003990  e320f000          NOP      
;;;2902               {
;;;2903                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS4();
003994  e59f2224          LDR      r2,|L1.15296|
003998  e1d224b8          LDRH     r2,[r2,#0x48]
00399c  e7e00252          UBFX     r0,r2,#4,#1
;;;2904               }
;;;2905               break;
0039a0  ea000020          B        |L1.14888|
                  |L1.14756|
;;;2906           case CCR_WAKEUP_SOURCE_5:
0039a4  e320f000          NOP      
;;;2907               {
;;;2908                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS5();
0039a8  e59f2210          LDR      r2,|L1.15296|
0039ac  e1d224b8          LDRH     r2,[r2,#0x48]
0039b0  e7e002d2          UBFX     r0,r2,#5,#1
;;;2909               }
;;;2910               break;
0039b4  ea00001b          B        |L1.14888|
                  |L1.14776|
;;;2911           case CCR_WAKEUP_SOURCE_6:
0039b8  e320f000          NOP      
;;;2912               {
;;;2913                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS6();
0039bc  e59f21fc          LDR      r2,|L1.15296|
0039c0  e1d224b8          LDRH     r2,[r2,#0x48]
0039c4  e7e00352          UBFX     r0,r2,#6,#1
;;;2914               }
;;;2915               break;
0039c8  ea000016          B        |L1.14888|
                  |L1.14796|
;;;2916           case CCR_WAKEUP_SOURCE_7:
0039cc  e320f000          NOP      
;;;2917               {
;;;2918                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_WAKINTS7();
0039d0  e59f21e8          LDR      r2,|L1.15296|
0039d4  e1d224b8          LDRH     r2,[r2,#0x48]
0039d8  e7e003d2          UBFX     r0,r2,#7,#1
;;;2919               }
;;;2920               break;
0039dc  ea000011          B        |L1.14888|
                  |L1.14816|
;;;2921           case CCR_WAKEUP_SOURCE_NMI:
0039e0  e320f000          NOP      
;;;2922               {
;;;2923                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_NMI();
0039e4  e59f21d4          LDR      r2,|L1.15296|
0039e8  e1d224b8          LDRH     r2,[r2,#0x48]
0039ec  e7e00452          UBFX     r0,r2,#8,#1
;;;2924               }
;;;2925               break;
0039f0  ea00000c          B        |L1.14888|
                  |L1.14836|
;;;2926           case CCR_WAKEUP_SOURCE_ALARM:
0039f4  e320f000          NOP      
;;;2927               {
;;;2928                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_ALARM();
0039f8  e59f21c0          LDR      r2,|L1.15296|
0039fc  e1d224b8          LDRH     r2,[r2,#0x48]
003a00  e7e004d2          UBFX     r0,r2,#9,#1
;;;2929               }
;;;2930               break;
003a04  ea000007          B        |L1.14888|
                  |L1.14856|
;;;2931           case CCR_WAKEUP_SOURCE_RTC:
003a08  e320f000          NOP      
;;;2932               {
;;;2933                   eInterruptOccur = (ccr_enable_e)biGetPDHR_WAKINTS_RTC();
003a0c  e59f21ac          LDR      r2,|L1.15296|
003a10  e1d224b8          LDRH     r2,[r2,#0x48]
003a14  e7e00552          UBFX     r0,r2,#10,#1
;;;2934               }
;;;2935               break;
003a18  ea000002          B        |L1.14888|
                  |L1.14876|
;;;2936           default:
003a1c  e320f000          NOP      
;;;2937               {
;;;2938                   eInterruptOccur = CCR_DISABLE;
003a20  e3a00000          MOV      r0,#0
;;;2939               }
;;;2940               break;
003a24  e320f000          NOP      
                  |L1.14888|
003a28  e320f000          NOP                            ;2885
;;;2941       }
;;;2942   
;;;2943       return eInterruptOccur;
;;;2944   }
003a2c  e12fff1e          BX       lr
;;;2945   
                          ENDP

                  i32CCR_ClearWakeupInterruptSource PROC
;;;2947   /****************************************************************************/
;;;2948   int32_t i32CCR_ClearWakeupInterruptSource(ccr_wakeup_source_e eSource)
003a30  e1a01000          MOV      r1,r0
;;;2949   {
;;;2950       int32_t i32Res = C_SUCCESS;
003a34  e3a00000          MOV      r0,#0
;;;2951   
;;;2952       switch(eSource)
003a38  e351000b          CMP      r1,#0xb
003a3c  308ff101          ADDCC    pc,pc,r1,LSL #2
003a40  ea000093          B        |L1.15508|
003a44  ea000009          B        |L1.14960|
003a48  ea000014          B        |L1.15008|
003a4c  ea00001f          B        |L1.15056|
003a50  ea00002a          B        |L1.15104|
003a54  ea000035          B        |L1.15152|
003a58  ea000040          B        |L1.15200|
003a5c  ea00004b          B        |L1.15248|
003a60  ea00005b          B        |L1.15316|
003a64  ea000066          B        |L1.15364|
003a68  ea000071          B        |L1.15412|
003a6c  ea00007c          B        |L1.15460|
                  |L1.14960|
;;;2953       {
;;;2954           case CCR_WAKEUP_SOURCE_0:
003a70  e320f000          NOP      
;;;2955               {
;;;2956                   vCCR_PDH_UNLOCK();
003a74  e59f2154          LDR      r2,|L1.15312|
003a78  e59f3140          LDR      r3,|L1.15296|
003a7c  e5933000          LDR      r3,[r3,#0]
003a80  e59f3138          LDR      r3,|L1.15296|
003a84  e5832000          STR      r2,[r3,#0]
;;;2957                   vSetPDHR_WAKINTC_WAKINTC0(1U);
003a88  e0032142          AND      r2,r3,r2,ASR #2
003a8c  e1d224bc          LDRH     r2,[r2,#0x4c]
003a90  e3c22001          BIC      r2,r2,#1
003a94  e2822001          ADD      r2,r2,#1
003a98  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2958               }
;;;2959               break;
003a9c  ea00007f          B        |L1.15520|
                  |L1.15008|
;;;2960           case CCR_WAKEUP_SOURCE_1:
003aa0  e320f000          NOP      
;;;2961               {
;;;2962                   vCCR_PDH_UNLOCK();
003aa4  e59f2124          LDR      r2,|L1.15312|
003aa8  e59f3110          LDR      r3,|L1.15296|
003aac  e5933000          LDR      r3,[r3,#0]
003ab0  e59f3108          LDR      r3,|L1.15296|
003ab4  e5832000          STR      r2,[r3,#0]
;;;2963                   vSetPDHR_WAKINTC_WAKINTC1(1U);
003ab8  e0032142          AND      r2,r3,r2,ASR #2
003abc  e1d224bc          LDRH     r2,[r2,#0x4c]
003ac0  e3c22002          BIC      r2,r2,#2
003ac4  e2822002          ADD      r2,r2,#2
003ac8  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2964               }
;;;2965               break;
003acc  ea000073          B        |L1.15520|
                  |L1.15056|
;;;2966           case CCR_WAKEUP_SOURCE_2:
003ad0  e320f000          NOP      
;;;2967               {
;;;2968                   vCCR_PDH_UNLOCK();
003ad4  e59f20f4          LDR      r2,|L1.15312|
003ad8  e59f30e0          LDR      r3,|L1.15296|
003adc  e5933000          LDR      r3,[r3,#0]
003ae0  e59f30d8          LDR      r3,|L1.15296|
003ae4  e5832000          STR      r2,[r3,#0]
;;;2969                   vSetPDHR_WAKINTC_WAKINTC2(1U);
003ae8  e0032142          AND      r2,r3,r2,ASR #2
003aec  e1d224bc          LDRH     r2,[r2,#0x4c]
003af0  e3c22004          BIC      r2,r2,#4
003af4  e2822004          ADD      r2,r2,#4
003af8  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2970               }
;;;2971               break;
003afc  ea000067          B        |L1.15520|
                  |L1.15104|
;;;2972           case CCR_WAKEUP_SOURCE_3:
003b00  e320f000          NOP      
;;;2973               {
;;;2974                   vCCR_PDH_UNLOCK();
003b04  e59f20c4          LDR      r2,|L1.15312|
003b08  e59f30b0          LDR      r3,|L1.15296|
003b0c  e5933000          LDR      r3,[r3,#0]
003b10  e59f30a8          LDR      r3,|L1.15296|
003b14  e5832000          STR      r2,[r3,#0]
;;;2975                   vSetPDHR_WAKINTC_WAKINTC3(1U);
003b18  e0032142          AND      r2,r3,r2,ASR #2
003b1c  e1d224bc          LDRH     r2,[r2,#0x4c]
003b20  e3c22008          BIC      r2,r2,#8
003b24  e2822008          ADD      r2,r2,#8
003b28  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2976               }
;;;2977               break;
003b2c  ea00005b          B        |L1.15520|
                  |L1.15152|
;;;2978           case CCR_WAKEUP_SOURCE_4:
003b30  e320f000          NOP      
;;;2979               {
;;;2980                   vCCR_PDH_UNLOCK();
003b34  e59f2094          LDR      r2,|L1.15312|
003b38  e59f3080          LDR      r3,|L1.15296|
003b3c  e5933000          LDR      r3,[r3,#0]
003b40  e59f3078          LDR      r3,|L1.15296|
003b44  e5832000          STR      r2,[r3,#0]
;;;2981                   vSetPDHR_WAKINTC_WAKINTC4(1U);
003b48  e0032142          AND      r2,r3,r2,ASR #2
003b4c  e1d224bc          LDRH     r2,[r2,#0x4c]
003b50  e3c22010          BIC      r2,r2,#0x10
003b54  e2822010          ADD      r2,r2,#0x10
003b58  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2982               }
;;;2983               break;
003b5c  ea00004f          B        |L1.15520|
                  |L1.15200|
;;;2984           case CCR_WAKEUP_SOURCE_5:
003b60  e320f000          NOP      
;;;2985               {
;;;2986                   vCCR_PDH_UNLOCK();
003b64  e59f2064          LDR      r2,|L1.15312|
003b68  e59f3050          LDR      r3,|L1.15296|
003b6c  e5933000          LDR      r3,[r3,#0]
003b70  e59f3048          LDR      r3,|L1.15296|
003b74  e5832000          STR      r2,[r3,#0]
;;;2987                   vSetPDHR_WAKINTC_WAKINTC5(1U);
003b78  e0032142          AND      r2,r3,r2,ASR #2
003b7c  e1d224bc          LDRH     r2,[r2,#0x4c]
003b80  e3c22020          BIC      r2,r2,#0x20
003b84  e2822020          ADD      r2,r2,#0x20
003b88  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2988               }
;;;2989               break;
003b8c  ea000043          B        |L1.15520|
                  |L1.15248|
;;;2990           case CCR_WAKEUP_SOURCE_6:
003b90  e320f000          NOP      
;;;2991               {
;;;2992                   vCCR_PDH_UNLOCK();
003b94  e59f2034          LDR      r2,|L1.15312|
003b98  e59f3020          LDR      r3,|L1.15296|
003b9c  e5933000          LDR      r3,[r3,#0]
003ba0  e59f3018          LDR      r3,|L1.15296|
003ba4  e5832000          STR      r2,[r3,#0]
;;;2993                   vSetPDHR_WAKINTC_WAKINTC6(1U);
003ba8  e0032142          AND      r2,r3,r2,ASR #2
003bac  e1d224bc          LDRH     r2,[r2,#0x4c]
003bb0  e3c22040          BIC      r2,r2,#0x40
003bb4  e2822040          ADD      r2,r2,#0x40
003bb8  e1c324bc          STRH     r2,[r3,#0x4c]
;;;2994               }
;;;2995               break;
003bbc  ea000037          B        |L1.15520|
                  |L1.15296|
                          DCD      0xc0000400
                  |L1.15300|
                          DCD      0xc000041c
                  |L1.15304|
                          DCD      0xc0000434
                  |L1.15308|
                          DCD      0xc0000440
                  |L1.15312|
                          DCD      0xa5c0f17b
                  |L1.15316|
;;;2996           case CCR_WAKEUP_SOURCE_7:
003bd4  e320f000          NOP      
;;;2997               {
;;;2998                   vCCR_PDH_UNLOCK();
003bd8  e51f2010          LDR      r2,|L1.15312|
003bdc  e51f3024          LDR      r3,|L1.15296|
003be0  e5933000          LDR      r3,[r3,#0]
003be4  e51f302c          LDR      r3,|L1.15296|
003be8  e5832000          STR      r2,[r3,#0]
;;;2999                   vSetPDHR_WAKINTC_WAKINTC7(1U);
003bec  e0032142          AND      r2,r3,r2,ASR #2
003bf0  e1d224bc          LDRH     r2,[r2,#0x4c]
003bf4  e3c22080          BIC      r2,r2,#0x80
003bf8  e2822080          ADD      r2,r2,#0x80
003bfc  e1c324bc          STRH     r2,[r3,#0x4c]
;;;3000               }
;;;3001               break;
003c00  ea000026          B        |L1.15520|
                  |L1.15364|
;;;3002           case CCR_WAKEUP_SOURCE_NMI:
003c04  e320f000          NOP      
;;;3003               {
;;;3004                   vCCR_PDH_UNLOCK();
003c08  e51f2040          LDR      r2,|L1.15312|
003c0c  e51f3054          LDR      r3,|L1.15296|
003c10  e5933000          LDR      r3,[r3,#0]
003c14  e51f305c          LDR      r3,|L1.15296|
003c18  e5832000          STR      r2,[r3,#0]
;;;3005                   vSetPDHR_WAKINTC_NMI_SC(1U);
003c1c  e0032142          AND      r2,r3,r2,ASR #2
003c20  e1d224bc          LDRH     r2,[r2,#0x4c]
003c24  e3c22c01          BIC      r2,r2,#0x100
003c28  e2822c01          ADD      r2,r2,#0x100
003c2c  e1c324bc          STRH     r2,[r3,#0x4c]
;;;3006               }
;;;3007               break;
003c30  ea00001a          B        |L1.15520|
                  |L1.15412|
;;;3008           case CCR_WAKEUP_SOURCE_ALARM:
003c34  e320f000          NOP      
;;;3009               {
;;;3010                   vCCR_PDH_UNLOCK();
003c38  e51f2070          LDR      r2,|L1.15312|
003c3c  e51f3084          LDR      r3,|L1.15296|
003c40  e5933000          LDR      r3,[r3,#0]
003c44  e51f308c          LDR      r3,|L1.15296|
003c48  e5832000          STR      r2,[r3,#0]
;;;3011                   vSetPDHR_WAKINTC_ALARM_SC(1U);
003c4c  e0032142          AND      r2,r3,r2,ASR #2
003c50  e1d224bc          LDRH     r2,[r2,#0x4c]
003c54  e3c22c02          BIC      r2,r2,#0x200
003c58  e2822c02          ADD      r2,r2,#0x200
003c5c  e1c324bc          STRH     r2,[r3,#0x4c]
;;;3012               }
;;;3013               break;
003c60  ea00000e          B        |L1.15520|
                  |L1.15460|
;;;3014           case CCR_WAKEUP_SOURCE_RTC:
003c64  e320f000          NOP      
;;;3015               {
;;;3016                   vCCR_PDH_UNLOCK();
003c68  e51f20a0          LDR      r2,|L1.15312|
003c6c  e51f30b4          LDR      r3,|L1.15296|
003c70  e5933000          LDR      r3,[r3,#0]
003c74  e51f30bc          LDR      r3,|L1.15296|
003c78  e5832000          STR      r2,[r3,#0]
;;;3017                   vSetPDHR_WAKINTC_RTC_SC(1U);
003c7c  e0032142          AND      r2,r3,r2,ASR #2
003c80  e1d224bc          LDRH     r2,[r2,#0x4c]
003c84  e3c22b01          BIC      r2,r2,#0x400
003c88  e2822b01          ADD      r2,r2,#0x400
003c8c  e1c324bc          STRH     r2,[r3,#0x4c]
;;;3018               }
;;;3019               break;
003c90  ea000002          B        |L1.15520|
                  |L1.15508|
;;;3020           default:
003c94  e320f000          NOP      
;;;3021               {
;;;3022                   i32Res = C_FAILED;
003c98  e3e00000          MVN      r0,#0
;;;3023               }
;;;3024               break;
003c9c  e320f000          NOP      
                  |L1.15520|
003ca0  e320f000          NOP                            ;2959
;;;3025       }
;;;3026   
;;;3027       return i32Res;
;;;3028   }
003ca4  e12fff1e          BX       lr
;;;3029   /****************************************************************************/
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  au8LLDD_CCR_C_REVISION
000000  24526576          DCB      0x24,0x52,0x65,0x76
000004  6973696f          DCB      0x69,0x73,0x69,0x6f
000008  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
00000c  2e323820          DCB      0x2e,0x32,0x38,0x20
000010  2400              DCB      0x24,0x00
                  au8LLDD_CCR_C_TAG
000012  244e              DCB      0x24,0x4e
000014  616d653a          DCB      0x61,0x6d,0x65,0x3a
000018  204c4c44          DCB      0x20,0x4c,0x4c,0x44
00001c  445f315f          DCB      0x44,0x5f,0x31,0x5f
000020  36202400          DCB      0x36,0x20,0x24,0x00
                  au8LLDD_CCR_H_REVISION
000024  24526576          DCB      0x24,0x52,0x65,0x76
000028  6973696f          DCB      0x69,0x73,0x69,0x6f
00002c  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
000030  2e323220          DCB      0x2e,0x32,0x32,0x20
000034  2400              DCB      0x24,0x00
                  au8LLDD_CCR_H_TAG
000036  244e              DCB      0x24,0x4e
000038  616d653a          DCB      0x61,0x6d,0x65,0x3a
00003c  204c4c44          DCB      0x20,0x4c,0x4c,0x44
000040  445f315f          DCB      0x44,0x5f,0x31,0x5f
000044  36202400          DCB      0x36,0x20,0x24,0x00
                  au8LLDD_CCR_PDH_IO_H_REVISION
000048  24526576          DCB      0x24,0x52,0x65,0x76
00004c  6973696f          DCB      0x69,0x73,0x69,0x6f
000050  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
000054  2e313620          DCB      0x2e,0x31,0x36,0x20
000058  2400              DCB      0x24,0x00
                  au8LLDD_CCR_PDH_IO_H_TAG
00005a  244e              DCB      0x24,0x4e
00005c  616d653a          DCB      0x61,0x6d,0x65,0x3a
000060  204c4c44          DCB      0x20,0x4c,0x4c,0x44
000064  445f315f          DCB      0x44,0x5f,0x31,0x5f
000068  36202400          DCB      0x36,0x20,0x24,0x00
                  au8LLDD_CCR_PDS_IO_H_REVISION
00006c  24526576          DCB      0x24,0x52,0x65,0x76
000070  6973696f          DCB      0x69,0x73,0x69,0x6f
000074  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
000078  2e313320          DCB      0x2e,0x31,0x33,0x20
00007c  2400              DCB      0x24,0x00
                  au8LLDD_CCR_PDS_IO_H_TAG
00007e  244e              DCB      0x24,0x4e
000080  616d653a          DCB      0x61,0x6d,0x65,0x3a
000084  204c4c44          DCB      0x20,0x4c,0x4c,0x44
000088  445f315f          DCB      0x44,0x5f,0x31,0x5f
00008c  36202400          DCB      0x36,0x20,0x24,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\lldd\\src\\ccr.c"
	AREA ||.emb_text||, CODE
	ARM
	EXPORT |__wfi|
#line 1118
|__wfi| PROC
#line 1119

 WFI
	ENDP

;*** End   embedded assembler ***
