; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\iic_timer.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\iic_timer.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\iic_timer.crf ..\..\..\..\lldd\src\iic_timer.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vIIC_TimerGetVersion PROC
;;;64     /****************************************************************************/
;;;65     void vIIC_TimerGetVersion(uint8_t** pau8ModuleRevision, uint8_t** pau8ModuleTag,
000000  e92d4010          PUSH     {r4,lr}
;;;66                               uint8_t** pau8HeaderRevision, uint8_t** pau8HeaderTag)
;;;67     {
;;;68        *pau8ModuleRevision = &au8LLDD_IIC_TIMER_C_REVISION[0];
000004  e59f417c          LDR      r4,|L1.392|
000008  e5804000          STR      r4,[r0,#0]
;;;69        *pau8ModuleTag      = &au8LLDD_IIC_TIMER_C_TAG[0];
00000c  e59f4178          LDR      r4,|L1.396|
000010  e5814000          STR      r4,[r1,#0]
;;;70        *pau8HeaderRevision = &au8LLDD_IIC_TIMER_H_REVISION[0];
000014  e59f4174          LDR      r4,|L1.400|
000018  e5824000          STR      r4,[r2,#0]
;;;71        *pau8HeaderTag      = &au8LLDD_IIC_TIMER_H_TAG[0];
00001c  e59f4170          LDR      r4,|L1.404|
000020  e5834000          STR      r4,[r3,#0]
;;;72     }
000024  e8bd8010          POP      {r4,pc}
;;;73     
                          ENDP

                  vIIC_TimerStart PROC
;;;75     /****************************************************************************/
;;;76     void vIIC_TimerStart (iic_TimerSelect_e eTimer)
000028  e3500001          CMP      r0,#1
;;;77     {
;;;78         /*  
;;;79          *  Preset the counter
;;;80          */
;;;81         switch( eTimer )
00002c  0a000002          BEQ      |L1.60|
000030  e3500002          CMP      r0,#2
000034  1a00000a          BNE      |L1.100|
000038  ea000004          B        |L1.80|
                  |L1.60|
;;;82         {
;;;83             case IIC_TIMER_IRQ_ACK_SEL:                
00003c  e320f000          NOP      
;;;84                 u32TimeAck = IIC_TIMER_IRQ_ACK;
000040  e3031e80          MOVW     r1,#0x3e80
000044  e59f214c          LDR      r2,|L1.408|
000048  e5821000          STR      r1,[r2,#0]  ; u32TimeAck
;;;85                 break;
00004c  ea000006          B        |L1.108|
                  |L1.80|
;;;86     
;;;87             case IIC_TIMER_BUSY_SEL:                
000050  e320f000          NOP      
;;;88                 u32TimeBusy = IIC_TIMER_BUSY;
000054  e3031a98          MOV      r1,#0x3a98
000058  e59f213c          LDR      r2,|L1.412|
00005c  e5821000          STR      r1,[r2,#0]  ; u32TimeBusy
;;;89                 break;
000060  ea000001          B        |L1.108|
                  |L1.100|
;;;90     
;;;91             default:
000064  e320f000          NOP      
;;;92                 break;
000068  e320f000          NOP      
                  |L1.108|
00006c  e320f000          NOP                            ;85
;;;93         }
;;;94     }
000070  e12fff1e          BX       lr
;;;95     
                          ENDP

                  vIIC_TimerStop PROC
;;;97     /****************************************************************************/
;;;98     void vIIC_TimerStop (iic_TimerSelect_e eTimer)
000074  e3500001          CMP      r0,#1
;;;99     {
;;;100      /* 
;;;101       *  Timer can be stopped even if it is not running,
;;;102       *  because it could expire in the meantime. Stop 
;;;103       *  the appropriate timer by cleareing it
;;;104       */
;;;105        switch (eTimer)
000078  0a000002          BEQ      |L1.136|
00007c  e3500002          CMP      r0,#2
000080  1a00000a          BNE      |L1.176|
000084  ea000004          B        |L1.156|
                  |L1.136|
;;;106        {
;;;107            case IIC_TIMER_IRQ_ACK_SEL:    
000088  e320f000          NOP      
;;;108                u32TimeAck = 0;    
00008c  e3a01000          MOV      r1,#0
000090  e59f2100          LDR      r2,|L1.408|
000094  e5821000          STR      r1,[r2,#0]  ; u32TimeAck
;;;109                break;
000098  ea000006          B        |L1.184|
                  |L1.156|
;;;110    
;;;111            case IIC_TIMER_BUSY_SEL:         
00009c  e320f000          NOP      
;;;112                u32TimeBusy = 0;    
0000a0  e3a01000          MOV      r1,#0
0000a4  e59f20f0          LDR      r2,|L1.412|
0000a8  e5821000          STR      r1,[r2,#0]  ; u32TimeBusy
;;;113                break;
0000ac  ea000001          B        |L1.184|
                  |L1.176|
;;;114    
;;;115            default:
0000b0  e320f000          NOP      
;;;116                break;    
0000b4  e320f000          NOP      
                  |L1.184|
0000b8  e320f000          NOP                            ;109
;;;117        }
;;;118    }
0000bc  e12fff1e          BX       lr
;;;119    
                          ENDP

                  eIIC_TimerQuery PROC
;;;121    /****************************************************************************/
;;;122    iic_TimerStatus_e eIIC_TimerQuery (iic_TimerSelect_e eTimer)
0000c0  e1a01000          MOV      r1,r0
;;;123    {
;;;124        iic_TimerStatus_e eTimerStatus = IIC_TIMER_STOPPED;
0000c4  e3a00000          MOV      r0,#0
;;;125    
;;;126        /* 
;;;127         *  Check timer counter or RTOS event flag.
;;;128         *  If the timer is still running change the 
;;;129         *  value of the return status
;;;130         */
;;;131        switch (eTimer)
0000c8  e3510001          CMP      r1,#1
0000cc  0a000002          BEQ      |L1.220|
0000d0  e3510002          CMP      r1,#2
0000d4  1a000022          BNE      |L1.356|
0000d8  ea000010          B        |L1.288|
                  |L1.220|
;;;132        {
;;;133            case IIC_TIMER_IRQ_ACK_SEL:                   
0000dc  e320f000          NOP      
;;;134                if (u32TimeAck > 0)
0000e0  e59f20b0          LDR      r2,|L1.408|
0000e4  e5922000          LDR      r2,[r2,#0]  ; u32TimeAck
0000e8  e3520000          CMP      r2,#0
0000ec  0a000006          BEQ      |L1.268|
;;;135                {
;;;136                    /* Timer running */
;;;137                    u32TimeAck--;
0000f0  e59f20a0          LDR      r2,|L1.408|
0000f4  e5922000          LDR      r2,[r2,#0]  ; u32TimeAck
0000f8  e2422001          SUB      r2,r2,#1
0000fc  e59f3094          LDR      r3,|L1.408|
000100  e5832000          STR      r2,[r3,#0]  ; u32TimeAck
;;;138                    eTimerStatus = IIC_TIMER_RUNNING;
000104  e3a00001          MOV      r0,#1
000108  ea000003          B        |L1.284|
                  |L1.268|
;;;139                }
;;;140                else
;;;141                {
;;;142                    /* Timer expiried */
;;;143                    u32TimeAck = 0;
00010c  e3a02000          MOV      r2,#0
000110  e59f3080          LDR      r3,|L1.408|
000114  e5832000          STR      r2,[r3,#0]  ; u32TimeAck
;;;144                    eTimerStatus = IIC_TIMER_EXPIRED;
000118  e3a00002          MOV      r0,#2
                  |L1.284|
;;;145                }    
;;;146                break;
00011c  ea000012          B        |L1.364|
                  |L1.288|
;;;147    
;;;148            case IIC_TIMER_BUSY_SEL:    
000120  e320f000          NOP      
;;;149                if (u32TimeBusy > 0)
000124  e59f2070          LDR      r2,|L1.412|
000128  e5922000          LDR      r2,[r2,#0]  ; u32TimeBusy
00012c  e3520000          CMP      r2,#0
000130  0a000006          BEQ      |L1.336|
;;;150                {
;;;151                    /* Timer running */
;;;152                    u32TimeBusy--;
000134  e59f2060          LDR      r2,|L1.412|
000138  e5922000          LDR      r2,[r2,#0]  ; u32TimeBusy
00013c  e2422001          SUB      r2,r2,#1
000140  e59f3054          LDR      r3,|L1.412|
000144  e5832000          STR      r2,[r3,#0]  ; u32TimeBusy
;;;153                    eTimerStatus = IIC_TIMER_RUNNING;
000148  e3a00001          MOV      r0,#1
00014c  ea000003          B        |L1.352|
                  |L1.336|
;;;154                }
;;;155                else
;;;156                {
;;;157                    /* Timer expiried */
;;;158                    u32TimeBusy = 0;
000150  e3a02000          MOV      r2,#0
000154  e59f3040          LDR      r3,|L1.412|
000158  e5832000          STR      r2,[r3,#0]  ; u32TimeBusy
;;;159                    eTimerStatus = IIC_TIMER_EXPIRED;
00015c  e3a00002          MOV      r0,#2
                  |L1.352|
;;;160                }    
;;;161                break;
000160  ea000001          B        |L1.364|
                  |L1.356|
;;;162    
;;;163            default:  
000164  e320f000          NOP      
;;;164                break;  
000168  e320f000          NOP      
                  |L1.364|
00016c  e320f000          NOP                            ;146
;;;165        }
;;;166        /* Status report */
;;;167        return eTimerStatus;
;;;168    }
000170  e12fff1e          BX       lr
;;;169    
                          ENDP

                  iic_Timer_Delay_us PROC
;;;171    /****************************************************************************/
;;;172    void iic_Timer_Delay_us (uint32_t u32Time)
000174  ea000000          B        |L1.380|
                  |L1.376|
;;;173    {
;;;174        /* Wait loop */
;;;175        while( u32Time > 0 )
;;;176        {
;;;177            u32Time--;
000178  e2400001          SUB      r0,r0,#1
                  |L1.380|
00017c  e3500000          CMP      r0,#0                 ;175
000180  1afffffc          BNE      |L1.376|
;;;178        }
;;;179    }
000184  e12fff1e          BX       lr
;;;180    
                          ENDP

                  |L1.392|
                          DCD      au8LLDD_IIC_TIMER_C_REVISION
                  |L1.396|
                          DCD      au8LLDD_IIC_TIMER_C_TAG
                  |L1.400|
                          DCD      au8LLDD_IIC_TIMER_H_REVISION
                  |L1.404|
                          DCD      au8LLDD_IIC_TIMER_H_TAG
                  |L1.408|
                          DCD      u32TimeAck
                  |L1.412|
                          DCD      u32TimeBusy

                          AREA ||.data||, DATA, ALIGN=2

                  au8LLDD_IIC_TIMER_C_REVISION
000000  24526576          DCB      0x24,0x52,0x65,0x76
000004  6973696f          DCB      0x69,0x73,0x69,0x6f
000008  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
00000c  2e372024          DCB      0x2e,0x37,0x20,0x24
000010  00                DCB      0x00
                  au8LLDD_IIC_TIMER_C_TAG
000011  244e61            DCB      0x24,0x4e,0x61
000014  6d653a20          DCB      0x6d,0x65,0x3a,0x20
000018  4c4c4444          DCB      0x4c,0x4c,0x44,0x44
00001c  5f315f36          DCB      0x5f,0x31,0x5f,0x36
000020  202400            DCB      0x20,0x24,0x00
                  au8LLDD_IIC_TIMER_H_REVISION
000023  24                DCB      0x24
000024  52657669          DCB      0x52,0x65,0x76,0x69
000028  73696f6e          DCB      0x73,0x69,0x6f,0x6e
00002c  3a20312e          DCB      0x3a,0x20,0x31,0x2e
000030  36202400          DCB      0x36,0x20,0x24,0x00
                  au8LLDD_IIC_TIMER_H_TAG
000034  244e616d          DCB      0x24,0x4e,0x61,0x6d
000038  653a204c          DCB      0x65,0x3a,0x20,0x4c
00003c  4c44445f          DCB      0x4c,0x44,0x44,0x5f
000040  315f3620          DCB      0x31,0x5f,0x36,0x20
000044  24000000          DCB      0x24,0x00,0x00,0x00
                  u32TimeBusy
                          DCD      0x00000000
                  u32TimeAck
                          DCD      0x00000000
