; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\qspi.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\qspi.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\qspi.crf ..\..\..\..\hldd\src\qspi.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  i32AssignQSPISettings PROC
;;;61     
;;;62     int32_t i32AssignQSPISettings(qspi_dev_type_e eQSPI_DeviceType, uint16_t u16BaseAddress,
000000  e92d40f0          PUSH     {r4-r7,lr}
;;;63                                   ccr_clk_freq_e * peClocFreq, ccr_modulated_clk_e * peModulationType,
;;;64                                   qspic_directconfig_st * pstDirectConfig, qspic_prgconfig_st * pstProgConfig)
;;;65     {
000004  e1a06000          MOV      r6,r0
000008  e1cd41d4          LDRD     r4,r5,[sp,#0x14]
;;;66         int32_t i32Res = C_SUCCESS;
00000c  e3a07000          MOV      r7,#0
;;;67         
;;;68         /* check pointer not to be zerro: */
;;;69         if ((peClocFreq == 0) || (peModulationType == 0) ||(pstDirectConfig == 0) ||(pstProgConfig == 0) )
000010  e3520000          CMP      r2,#0
000014  0a000005          BEQ      |L1.48|
000018  e3530000          CMP      r3,#0
00001c  0a000003          BEQ      |L1.48|
000020  e3540000          CMP      r4,#0
000024  0a000001          BEQ      |L1.48|
000028  e3550000          CMP      r5,#0
00002c  1a000001          BNE      |L1.56|
                  |L1.48|
;;;70         {
;;;71             return C_FAILED; 
000030  e3e00000          MVN      r0,#0
                  |L1.52|
;;;72         }    
;;;73         
;;;74         /* depend on type of flash: */
;;;75         switch(eQSPI_DeviceType)
;;;76         {
;;;77             case DEV_MX25L3235E: /* MX25L3235E */
;;;78                 eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;79     
;;;80                 *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;81                 *peModulationType = CCR_NON_MODULATED;
;;;82     
;;;83                 pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;84                 pstDirectConfig->eFlashDensity       = QSPIC_4MB;                        /* flash density */
;;;85                 pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;86                 
;;;87                 pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;88                 pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;89                 pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte count */
;;;90                 pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;91                 pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;92                 pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Address Io Ctrl */
;;;93                 
;;;94                 pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;95                 pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;96                 pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;97     
;;;98                 pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;99                 pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;100                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;101                break;
;;;102    
;;;103            case DEV_MX25L6435E: /* MX25L6435E */
;;;104                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;105    
;;;106                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;107                *peModulationType = CCR_NON_MODULATED;
;;;108    
;;;109                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;110                pstDirectConfig->eFlashDensity       = QSPIC_8MB;                        /* flash density */
;;;111                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;112                
;;;113                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;114                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;115                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;116                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;117                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;118                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;119                
;;;120                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;121                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;122                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;123    
;;;124                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;125                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;126                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;127                break;
;;;128    
;;;129            case DEV_MX25L12835F: /* MX25L12835F */
;;;130                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;131    
;;;132                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;133                *peModulationType = CCR_NON_MODULATED;
;;;134    
;;;135                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;136                pstDirectConfig->eFlashDensity       = QSPIC_16MB;                       /* flash density */
;;;137                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;138                
;;;139                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;140                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;141                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;142                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;143                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;144                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;145                
;;;146                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;147                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;148                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;149    
;;;150                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;151                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;152                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;153                break;
;;;154    
;;;155            case DEV_MX66L51239F_3BYTE_ADR: /* MX66L51239F - 3 byte address mode */
;;;156                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;157    
;;;158                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;159                *peModulationType = CCR_NON_MODULATED;
;;;160    
;;;161                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;162                pstDirectConfig->eFlashDensity       = QSPIC_32MB;                       /* flash density */
;;;163                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;164                
;;;165                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;166                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;167                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;168                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;169                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;170                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;171    
;;;172                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;173                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;174                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;175    
;;;176                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;177                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;178                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;179                break;
;;;180    
;;;181            case DEV_MX66L51239F_4BYTE_ADR: /* MX66L51239F - 4 byte address mode */
;;;182                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;183    
;;;184                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;185                *peModulationType = CCR_NON_MODULATED;
;;;186    
;;;187                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;188                pstDirectConfig->eFlashDensity       = QSPIC_64MB;                       /* flash density */
;;;189                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;190    
;;;191                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;192                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;193                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_4BYTE;            /* Address byte cuont */
;;;194                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;195                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;196                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;197                
;;;198                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;199                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;200                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;201    
;;;202                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;203                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;204                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_4BYTE;                  /* address byte count */
;;;205                break;
;;;206    
;;;207            case DEV_N25Q064A: /* N25Q064A */
;;;208                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;209    
;;;210                *peClocFreq       = CCR_CLKDIV_39_1MHz;
;;;211                *peModulationType = CCR_NON_MODULATED;
;;;212    
;;;213                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;214                pstDirectConfig->eFlashDensity       = QSPIC_32MB;                       /* flash density */
;;;215                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;216                
;;;217                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_SINGLE;  /* command OP */
;;;218                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 1;                          /* dummy byte */
;;;219                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;220                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_SINGLE;                /* Data Io Ctrl */
;;;221                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_SINGLE;                /* Dummy Io Ctrl  */
;;;222                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_SINGLE;                /* Adress Io Ctrl */
;;;223    
;;;224                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;225                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;226                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;227    
;;;228                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;229                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;230                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;231                break;
;;;232    
;;;233            case DEV_N25Q512A_3BYTE_ADR: /* N25Q512A - 3 byte address mode */
;;;234                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;235    
;;;236                *peClocFreq       = CCR_CLKDIV_39_1MHz;
;;;237                *peModulationType = CCR_NON_MODULATED;
;;;238    
;;;239                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;240                pstDirectConfig->eFlashDensity       = QSPIC_32MB;                       /* flash density */
;;;241                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;242                
;;;243                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_SINGLE;  /* command OP */
;;;244                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 1;                          /* dummy byte */
;;;245                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;246                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_SINGLE;                /* Data Io Ctrl */
;;;247                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_SINGLE;                /* Dummy Io Ctrl  */
;;;248                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_SINGLE;                /* Adress Io Ctrl */
;;;249    
;;;250                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;251                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;252                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;253    
;;;254                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;255                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;256                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;257                break;
;;;258    
;;;259            case DEV_N25Q512A_4BYTE_ADR: /* N25Q512A - 4 byte address mode */
;;;260                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;261    
;;;262                *peClocFreq       = CCR_CLKDIV_39_1MHz;
;;;263                *peModulationType = CCR_NON_MODULATED;
;;;264    
;;;265                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;266                pstDirectConfig->eFlashDensity       = QSPIC_64MB;                       /* flash density */
;;;267                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;268    
;;;269                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_SINGLE;  /* command OP */
;;;270                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 1;                          /* dummy byte */
;;;271                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_4BYTE;            /* Address byte cuont */
;;;272                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_SINGLE;                /* Data Io Ctrl */
;;;273                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_SINGLE;                /* Dummy Io Ctrl  */
;;;274                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_SINGLE;                /* Adress Io Ctrl */
;;;275                
;;;276                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;277                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;278                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;279    
;;;280                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;281                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;282                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_4BYTE;                  /* address byte count */
;;;283                break;
;;;284    
;;;285            case DEV_S25FL032P: /* S25FL032P */
;;;286                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;287    
;;;288                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;289                *peModulationType = CCR_NON_MODULATED;
;;;290    
;;;291                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;292                pstDirectConfig->eFlashDensity       = QSPIC_4MB;                        /* flash density */
;;;293                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;294                
;;;295                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;296                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;297                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte count */
;;;298                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;299                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;300                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Address Io Ctrl */
;;;301                
;;;302                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;303                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;304                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;305    
;;;306                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;307                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;308                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;309                break;
;;;310    
;;;311            case DEV_S25FL064P: /* S25FL064P */
;;;312                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;313    
;;;314                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;315                *peModulationType = CCR_NON_MODULATED;
;;;316    
;;;317                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;318                pstDirectConfig->eFlashDensity       = QSPIC_8MB;                        /* flash density */
;;;319                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;320                
;;;321                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;322                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;323                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;324                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;325                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;326                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;327                
;;;328                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;329                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;330                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;331    
;;;332                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;333                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;334                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;335                break;
;;;336    
;;;337            case DEV_S25FL127P: /* S25FL127P */
;;;338                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;339    
;;;340                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;341                *peModulationType = CCR_NON_MODULATED;
;;;342    
;;;343                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;344                pstDirectConfig->eFlashDensity       = QSPIC_16MB;                       /* flash density */
;;;345                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;346                
;;;347                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;348                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;349                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;350                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;351                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;352                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;353    
;;;354                
;;;355                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;356                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;357                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;358    
;;;359                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;360                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;361                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;362                break;
;;;363    
;;;364            case DEV_S25FL132KIF01: /* S25FL132KIF01 */
;;;365                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;366    
;;;367                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;368                *peModulationType = CCR_NON_MODULATED;
;;;369    
;;;370                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;371                pstDirectConfig->eFlashDensity       = QSPIC_4MB;                        /* flash density */
;;;372                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;373                
;;;374                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;375                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;376                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte count */
;;;377                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;378                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;379                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Address Io Ctrl */
;;;380                
;;;381                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;382                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;383                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;384    
;;;385                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;386                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;387                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;388                break;
;;;389    
;;;390            case DEV_S25FL164KIF01: /* S25FL164KIF01 */
;;;391                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;392    
;;;393                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;394                *peModulationType = CCR_NON_MODULATED;
;;;395    
;;;396                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;397                pstDirectConfig->eFlashDensity       = QSPIC_8MB;                        /* flash density */
;;;398                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;399                
;;;400                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;401                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;402                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;403                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;404                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;405                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;406                
;;;407                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;408                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;409                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;410    
;;;411                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;412                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;413                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;414                break;
;;;415    
;;;416            case DEV_S25FL116KIF01: /* S25FL116KIF01 */
;;;417                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;418    
;;;419                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;420                *peModulationType = CCR_NON_MODULATED;
;;;421    
;;;422                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;423                pstDirectConfig->eFlashDensity       = QSPIC_2MB;                       /* flash density */
;;;424                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;425                
;;;426                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;427                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;428                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;429                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;430                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;431                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;432    
;;;433                
;;;434                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;435                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;436                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;437    
;;;438                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;439                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;440                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;441                break;
;;;442    
;;;443            case DEV_W25Q32B: /* W25Q32B */
;;;444                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;445    
;;;446                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;447                *peModulationType = CCR_NON_MODULATED;
;;;448    
;;;449                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;450                pstDirectConfig->eFlashDensity       = QSPIC_4MB;                        /* flash density */
;;;451                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;452                
;;;453                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;454                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;455                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte count */
;;;456                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;457                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;458                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Address Io Ctrl */
;;;459                
;;;460                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;461                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;462                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;463    
;;;464                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;465                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;466                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;467                break;
;;;468    
;;;469            case DEV_W25Q64C: /* W25Q64C */
;;;470                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;471    
;;;472                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;473                *peModulationType = CCR_NON_MODULATED;
;;;474    
;;;475                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;476                pstDirectConfig->eFlashDensity       = QSPIC_8MB;                        /* flash density */
;;;477                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;478                
;;;479                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;480                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;481                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;482                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;483                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;484                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;485                
;;;486                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;487                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;488                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;489    
;;;490                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;491                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;492                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;493                break;
;;;494    
;;;495            case DEV_W25Q256F_3BYTE_ADR: /* W25Q256F - 3 byte address mode */
;;;496                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;497    
;;;498                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;499                *peModulationType = CCR_NON_MODULATED;
;;;500    
;;;501                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;502                pstDirectConfig->eFlashDensity       = QSPIC_32MB;                       /* flash density */
;;;503                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;504                
;;;505                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;506                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;507                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;508                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;509                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;510                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;511                
;;;512                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;513                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;514                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;515    
;;;516                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;517                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;518                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;519                break;
;;;520    
;;;521            case DEV_W25Q256F_4BYTE_ADR: /* W25Q256F - 4 byte address mode */
;;;522                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;523    
;;;524                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;525                *peModulationType = CCR_NON_MODULATED;
;;;526    
;;;527                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;528                pstDirectConfig->eFlashDensity       = QSPIC_64MB;                       /* flash density */
;;;529                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;530                
;;;531                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;532                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;533                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_4BYTE;            /* Address byte cuont */
;;;534                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;535                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;536                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;537                
;;;538                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;539                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;540                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;541    
;;;542                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;543                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;544                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;545                break;
;;;546    
;;;547            case DEV_INTERNAL_32MBIT: /* MX25L3235E internal */
;;;548                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;549    
;;;550                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;551                *peModulationType = CCR_NON_MODULATED;
;;;552    
;;;553                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;554                pstDirectConfig->eFlashDensity       = QSPIC_4MB;                        /* flash density */
;;;555                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;556                
;;;557                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;558                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;559                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte count */
;;;560                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;561                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;562                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Address Io Ctrl */
;;;563                
;;;564                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;565                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;566                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;567    
;;;568                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;569                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;570                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;571                break;
;;;572    
;;;573            case DEV_INTERNAL_64MBIT: /* MX25L6435E internal */
;;;574                eQSPI_DeviceHldd = eQSPI_DeviceType;
;;;575    
;;;576                *peClocFreq       = CCR_CLKDIV_56_3MHz;
;;;577                *peModulationType = CCR_NON_MODULATED;
;;;578    
;;;579                pstDirectConfig->u16FlashBaseAddress = u16BaseAddress;                   /* physical base address (bits [31:16]), upper 4 bits are fixed and don't care */
;;;580                pstDirectConfig->eFlashDensity       = QSPIC_8MB;                        /* flash density */
;;;581                pstDirectConfig->eEnableMemMapRd     = QSPIC_ENABLE;                     /* enable memory map read */
;;;582                
;;;583                pstDirectConfig->stRdCtrl.eCmd             = QSPI_CMD_FAST_READ_QUAD_IO; /* command OP */
;;;584                pstDirectConfig->stRdCtrl.u32DummyByteCnt  = 3;                          /* dummy byte */
;;;585                pstDirectConfig->stRdCtrl.eAddrByteCnt     = QSPI_ADDR_3BYTE;            /* Address byte cuont */
;;;586                pstDirectConfig->stRdCtrl.eSpiDatIOCtrl    = QSPI_QUAD;                  /* Data Io Ctrl */
;;;587                pstDirectConfig->stRdCtrl.eSpiDmyIOCtrl    = QSPI_QUAD;                  /* Dummy Io Ctrl  */
;;;588                pstDirectConfig->stRdCtrl.eSpiAdrIOCtrl    = QSPI_QUAD;                  /* Adress Io Ctrl */
;;;589                
;;;590                pstDirectConfig->eWIPEnable          = QSPIC_DISABLE;                    /* WIP bit disable */
;;;591                pstDirectConfig->u8CSTime            = 0x20;                             /* deassertion time */
;;;592                pstDirectConfig->eEdge               = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;593    
;;;594                pstProgConfig->u8CSTime              = 0x20;                             /* deassertion time */
;;;595                pstProgConfig->eEdge                 = QSPIC_1ST_NEG_EDGE;               /* capture edge */
;;;596                pstProgConfig->eAddrByteCnt          = QSPI_ADDR_3BYTE;                  /* address byte count */
;;;597                break;
;;;598    
;;;599            default: /* error */
;;;600                eQSPI_DeviceHldd = DEV_TYPE_INVALID;
;;;601                i32Res = C_FAILED;
;;;602                break;
;;;603        }
;;;604      return i32Res;  
;;;605    }
000034  e8bd80f0          POP      {r4-r7,pc}
                  |L1.56|
000038  e3560015          CMP      r6,#0x15              ;75
00003c  308ff106          ADDCC    pc,pc,r6,LSL #2       ;75
000040  ea0002c8          B        |L1.2920|
000044  ea0002c7          B        |L1.2920|
000048  ea000012          B        |L1.152|
00004c  ea000034          B        |L1.292|
000050  ea000056          B        |L1.432|
000054  ea000078          B        |L1.572|
000058  ea00009a          B        |L1.712|
00005c  ea0000bb          B        |L1.848|
000060  ea0000db          B        |L1.980|
000064  ea0000fb          B        |L1.1112|
000068  ea00011a          B        |L1.1240|
00006c  ea00013c          B        |L1.1380|
000070  ea00015e          B        |L1.1520|
000074  ea0001c6          B        |L1.1940|
000078  ea00017f          B        |L1.1660|
00007c  ea0001a1          B        |L1.1800|
000080  ea0001e6          B        |L1.2080|
000084  ea000208          B        |L1.2220|
000088  ea00022a          B        |L1.2360|
00008c  ea00024c          B        |L1.2500|
000090  ea00026e          B        |L1.2640|
000094  ea000290          B        |L1.2780|
                  |L1.152|
000098  e320f000          NOP                            ;77
00009c  e59f0e14          LDR      r0,|L1.3768|
0000a0  e5c06000          STRB     r6,[r0,#0]            ;78  ; eQSPI_DeviceHldd
0000a4  e3a00010          MOV      r0,#0x10              ;80
0000a8  e5c20000          STRB     r0,[r2,#0]            ;80
0000ac  e3a00001          MOV      r0,#1                 ;81
0000b0  e5c30000          STRB     r0,[r3,#0]            ;81
0000b4  e1c410b0          STRH     r1,[r4,#0]            ;83
0000b8  e3a00006          MOV      r0,#6                 ;84
0000bc  e5c40002          STRB     r0,[r4,#2]            ;84
0000c0  e3a00001          MOV      r0,#1                 ;85
0000c4  e5c40003          STRB     r0,[r4,#3]            ;85
0000c8  e3a000eb          MOV      r0,#0xeb              ;87
0000cc  e5c40004          STRB     r0,[r4,#4]            ;87
0000d0  e3a00003          MOV      r0,#3                 ;88
0000d4  e5840008          STR      r0,[r4,#8]            ;88
0000d8  e3a00000          MOV      r0,#0                 ;89
0000dc  e5c4000c          STRB     r0,[r4,#0xc]          ;89
0000e0  e3a00002          MOV      r0,#2                 ;90
0000e4  e5c4000d          STRB     r0,[r4,#0xd]          ;90
0000e8  e5c4000e          STRB     r0,[r4,#0xe]          ;91
0000ec  e5c4000f          STRB     r0,[r4,#0xf]          ;92
0000f0  e3a00000          MOV      r0,#0                 ;94
0000f4  e5c40010          STRB     r0,[r4,#0x10]         ;94
0000f8  e3a00020          MOV      r0,#0x20              ;95
0000fc  e5c40011          STRB     r0,[r4,#0x11]         ;95
000100  e3a00001          MOV      r0,#1                 ;96
000104  e5c40012          STRB     r0,[r4,#0x12]         ;96
000108  e3a00020          MOV      r0,#0x20              ;98
00010c  e5c50000          STRB     r0,[r5,#0]            ;98
000110  e3a00001          MOV      r0,#1                 ;99
000114  e5c50001          STRB     r0,[r5,#1]            ;99
000118  e3a00000          MOV      r0,#0                 ;100
00011c  e5c50002          STRB     r0,[r5,#2]            ;100
000120  ea000296          B        |L1.2944|
                  |L1.292|
000124  e320f000          NOP                            ;103
000128  e59f0d88          LDR      r0,|L1.3768|
00012c  e5c06000          STRB     r6,[r0,#0]            ;104  ; eQSPI_DeviceHldd
000130  e3a00010          MOV      r0,#0x10              ;106
000134  e5c20000          STRB     r0,[r2,#0]            ;106
000138  e3a00001          MOV      r0,#1                 ;107
00013c  e5c30000          STRB     r0,[r3,#0]            ;107
000140  e1c410b0          STRH     r1,[r4,#0]            ;109
000144  e3a00007          MOV      r0,#7                 ;110
000148  e5c40002          STRB     r0,[r4,#2]            ;110
00014c  e3a00001          MOV      r0,#1                 ;111
000150  e5c40003          STRB     r0,[r4,#3]            ;111
000154  e3a000eb          MOV      r0,#0xeb              ;113
000158  e5c40004          STRB     r0,[r4,#4]            ;113
00015c  e3a00003          MOV      r0,#3                 ;114
000160  e5840008          STR      r0,[r4,#8]            ;114
000164  e3a00000          MOV      r0,#0                 ;115
000168  e5c4000c          STRB     r0,[r4,#0xc]          ;115
00016c  e3a00002          MOV      r0,#2                 ;116
000170  e5c4000d          STRB     r0,[r4,#0xd]          ;116
000174  e5c4000e          STRB     r0,[r4,#0xe]          ;117
000178  e5c4000f          STRB     r0,[r4,#0xf]          ;118
00017c  e3a00000          MOV      r0,#0                 ;120
000180  e5c40010          STRB     r0,[r4,#0x10]         ;120
000184  e3a00020          MOV      r0,#0x20              ;121
000188  e5c40011          STRB     r0,[r4,#0x11]         ;121
00018c  e3a00001          MOV      r0,#1                 ;122
000190  e5c40012          STRB     r0,[r4,#0x12]         ;122
000194  e3a00020          MOV      r0,#0x20              ;124
000198  e5c50000          STRB     r0,[r5,#0]            ;124
00019c  e3a00001          MOV      r0,#1                 ;125
0001a0  e5c50001          STRB     r0,[r5,#1]            ;125
0001a4  e3a00000          MOV      r0,#0                 ;126
0001a8  e5c50002          STRB     r0,[r5,#2]            ;126
0001ac  ea000273          B        |L1.2944|
                  |L1.432|
0001b0  e320f000          NOP                            ;129
0001b4  e59f0cfc          LDR      r0,|L1.3768|
0001b8  e5c06000          STRB     r6,[r0,#0]            ;130  ; eQSPI_DeviceHldd
0001bc  e3a00010          MOV      r0,#0x10              ;132
0001c0  e5c20000          STRB     r0,[r2,#0]            ;132
0001c4  e3a00001          MOV      r0,#1                 ;133
0001c8  e5c30000          STRB     r0,[r3,#0]            ;133
0001cc  e1c410b0          STRH     r1,[r4,#0]            ;135
0001d0  e3a00008          MOV      r0,#8                 ;136
0001d4  e5c40002          STRB     r0,[r4,#2]            ;136
0001d8  e3a00001          MOV      r0,#1                 ;137
0001dc  e5c40003          STRB     r0,[r4,#3]            ;137
0001e0  e3a000eb          MOV      r0,#0xeb              ;139
0001e4  e5c40004          STRB     r0,[r4,#4]            ;139
0001e8  e3a00003          MOV      r0,#3                 ;140
0001ec  e5840008          STR      r0,[r4,#8]            ;140
0001f0  e3a00000          MOV      r0,#0                 ;141
0001f4  e5c4000c          STRB     r0,[r4,#0xc]          ;141
0001f8  e3a00002          MOV      r0,#2                 ;142
0001fc  e5c4000d          STRB     r0,[r4,#0xd]          ;142
000200  e5c4000e          STRB     r0,[r4,#0xe]          ;143
000204  e5c4000f          STRB     r0,[r4,#0xf]          ;144
000208  e3a00000          MOV      r0,#0                 ;146
00020c  e5c40010          STRB     r0,[r4,#0x10]         ;146
000210  e3a00020          MOV      r0,#0x20              ;147
000214  e5c40011          STRB     r0,[r4,#0x11]         ;147
000218  e3a00001          MOV      r0,#1                 ;148
00021c  e5c40012          STRB     r0,[r4,#0x12]         ;148
000220  e3a00020          MOV      r0,#0x20              ;150
000224  e5c50000          STRB     r0,[r5,#0]            ;150
000228  e3a00001          MOV      r0,#1                 ;151
00022c  e5c50001          STRB     r0,[r5,#1]            ;151
000230  e3a00000          MOV      r0,#0                 ;152
000234  e5c50002          STRB     r0,[r5,#2]            ;152
000238  ea000250          B        |L1.2944|
                  |L1.572|
00023c  e320f000          NOP                            ;155
000240  e59f0c70          LDR      r0,|L1.3768|
000244  e5c06000          STRB     r6,[r0,#0]            ;156  ; eQSPI_DeviceHldd
000248  e3a00010          MOV      r0,#0x10              ;158
00024c  e5c20000          STRB     r0,[r2,#0]            ;158
000250  e3a00001          MOV      r0,#1                 ;159
000254  e5c30000          STRB     r0,[r3,#0]            ;159
000258  e1c410b0          STRH     r1,[r4,#0]            ;161
00025c  e3a00009          MOV      r0,#9                 ;162
000260  e5c40002          STRB     r0,[r4,#2]            ;162
000264  e3a00001          MOV      r0,#1                 ;163
000268  e5c40003          STRB     r0,[r4,#3]            ;163
00026c  e3a000eb          MOV      r0,#0xeb              ;165
000270  e5c40004          STRB     r0,[r4,#4]            ;165
000274  e3a00003          MOV      r0,#3                 ;166
000278  e5840008          STR      r0,[r4,#8]            ;166
00027c  e3a00000          MOV      r0,#0                 ;167
000280  e5c4000c          STRB     r0,[r4,#0xc]          ;167
000284  e3a00002          MOV      r0,#2                 ;168
000288  e5c4000d          STRB     r0,[r4,#0xd]          ;168
00028c  e5c4000e          STRB     r0,[r4,#0xe]          ;169
000290  e5c4000f          STRB     r0,[r4,#0xf]          ;170
000294  e3a00000          MOV      r0,#0                 ;172
000298  e5c40010          STRB     r0,[r4,#0x10]         ;172
00029c  e3a00020          MOV      r0,#0x20              ;173
0002a0  e5c40011          STRB     r0,[r4,#0x11]         ;173
0002a4  e3a00001          MOV      r0,#1                 ;174
0002a8  e5c40012          STRB     r0,[r4,#0x12]         ;174
0002ac  e3a00020          MOV      r0,#0x20              ;176
0002b0  e5c50000          STRB     r0,[r5,#0]            ;176
0002b4  e3a00001          MOV      r0,#1                 ;177
0002b8  e5c50001          STRB     r0,[r5,#1]            ;177
0002bc  e3a00000          MOV      r0,#0                 ;178
0002c0  e5c50002          STRB     r0,[r5,#2]            ;178
0002c4  ea00022d          B        |L1.2944|
                  |L1.712|
0002c8  e320f000          NOP                            ;181
0002cc  e59f0be4          LDR      r0,|L1.3768|
0002d0  e5c06000          STRB     r6,[r0,#0]            ;182  ; eQSPI_DeviceHldd
0002d4  e3a00010          MOV      r0,#0x10              ;184
0002d8  e5c20000          STRB     r0,[r2,#0]            ;184
0002dc  e3a00001          MOV      r0,#1                 ;185
0002e0  e5c30000          STRB     r0,[r3,#0]            ;185
0002e4  e1c410b0          STRH     r1,[r4,#0]            ;187
0002e8  e3a0000a          MOV      r0,#0xa               ;188
0002ec  e5c40002          STRB     r0,[r4,#2]            ;188
0002f0  e3a00001          MOV      r0,#1                 ;189
0002f4  e5c40003          STRB     r0,[r4,#3]            ;189
0002f8  e3a000eb          MOV      r0,#0xeb              ;191
0002fc  e5c40004          STRB     r0,[r4,#4]            ;191
000300  e3a00003          MOV      r0,#3                 ;192
000304  e5840008          STR      r0,[r4,#8]            ;192
000308  e3a00001          MOV      r0,#1                 ;193
00030c  e5c4000c          STRB     r0,[r4,#0xc]          ;193
000310  e3a00002          MOV      r0,#2                 ;194
000314  e5c4000d          STRB     r0,[r4,#0xd]          ;194
000318  e5c4000e          STRB     r0,[r4,#0xe]          ;195
00031c  e5c4000f          STRB     r0,[r4,#0xf]          ;196
000320  e3a00000          MOV      r0,#0                 ;198
000324  e5c40010          STRB     r0,[r4,#0x10]         ;198
000328  e3a00020          MOV      r0,#0x20              ;199
00032c  e5c40011          STRB     r0,[r4,#0x11]         ;199
000330  e3a00001          MOV      r0,#1                 ;200
000334  e5c40012          STRB     r0,[r4,#0x12]         ;200
000338  e3a00020          MOV      r0,#0x20              ;202
00033c  e5c50000          STRB     r0,[r5,#0]            ;202
000340  e3a00001          MOV      r0,#1                 ;203
000344  e5c50001          STRB     r0,[r5,#1]            ;203
000348  e5c50002          STRB     r0,[r5,#2]            ;204
00034c  ea00020b          B        |L1.2944|
                  |L1.848|
000350  e320f000          NOP                            ;207
000354  e59f0b5c          LDR      r0,|L1.3768|
000358  e5c06000          STRB     r6,[r0,#0]            ;208  ; eQSPI_DeviceHldd
00035c  e3a00017          MOV      r0,#0x17              ;210
000360  e5c20000          STRB     r0,[r2,#0]            ;210
000364  e3a00001          MOV      r0,#1                 ;211
000368  e5c30000          STRB     r0,[r3,#0]            ;211
00036c  e1c410b0          STRH     r1,[r4,#0]            ;213
000370  e3a00009          MOV      r0,#9                 ;214
000374  e5c40002          STRB     r0,[r4,#2]            ;214
000378  e3a00001          MOV      r0,#1                 ;215
00037c  e5c40003          STRB     r0,[r4,#3]            ;215
000380  e3a0000b          MOV      r0,#0xb               ;217
000384  e5c40004          STRB     r0,[r4,#4]            ;217
000388  e3a00001          MOV      r0,#1                 ;218
00038c  e5840008          STR      r0,[r4,#8]            ;218
000390  e3a00000          MOV      r0,#0                 ;219
000394  e5c4000c          STRB     r0,[r4,#0xc]          ;219
000398  e5c4000d          STRB     r0,[r4,#0xd]          ;220
00039c  e5c4000e          STRB     r0,[r4,#0xe]          ;221
0003a0  e5c4000f          STRB     r0,[r4,#0xf]          ;222
0003a4  e5c40010          STRB     r0,[r4,#0x10]         ;224
0003a8  e3a00020          MOV      r0,#0x20              ;225
0003ac  e5c40011          STRB     r0,[r4,#0x11]         ;225
0003b0  e3a00001          MOV      r0,#1                 ;226
0003b4  e5c40012          STRB     r0,[r4,#0x12]         ;226
0003b8  e3a00020          MOV      r0,#0x20              ;228
0003bc  e5c50000          STRB     r0,[r5,#0]            ;228
0003c0  e3a00001          MOV      r0,#1                 ;229
0003c4  e5c50001          STRB     r0,[r5,#1]            ;229
0003c8  e3a00000          MOV      r0,#0                 ;230
0003cc  e5c50002          STRB     r0,[r5,#2]            ;230
0003d0  ea0001ea          B        |L1.2944|
                  |L1.980|
0003d4  e320f000          NOP                            ;233
0003d8  e59f0ad8          LDR      r0,|L1.3768|
0003dc  e5c06000          STRB     r6,[r0,#0]            ;234  ; eQSPI_DeviceHldd
0003e0  e3a00017          MOV      r0,#0x17              ;236
0003e4  e5c20000          STRB     r0,[r2,#0]            ;236
0003e8  e3a00001          MOV      r0,#1                 ;237
0003ec  e5c30000          STRB     r0,[r3,#0]            ;237
0003f0  e1c410b0          STRH     r1,[r4,#0]            ;239
0003f4  e3a00009          MOV      r0,#9                 ;240
0003f8  e5c40002          STRB     r0,[r4,#2]            ;240
0003fc  e3a00001          MOV      r0,#1                 ;241
000400  e5c40003          STRB     r0,[r4,#3]            ;241
000404  e3a0000b          MOV      r0,#0xb               ;243
000408  e5c40004          STRB     r0,[r4,#4]            ;243
00040c  e3a00001          MOV      r0,#1                 ;244
000410  e5840008          STR      r0,[r4,#8]            ;244
000414  e3a00000          MOV      r0,#0                 ;245
000418  e5c4000c          STRB     r0,[r4,#0xc]          ;245
00041c  e5c4000d          STRB     r0,[r4,#0xd]          ;246
000420  e5c4000e          STRB     r0,[r4,#0xe]          ;247
000424  e5c4000f          STRB     r0,[r4,#0xf]          ;248
000428  e5c40010          STRB     r0,[r4,#0x10]         ;250
00042c  e3a00020          MOV      r0,#0x20              ;251
000430  e5c40011          STRB     r0,[r4,#0x11]         ;251
000434  e3a00001          MOV      r0,#1                 ;252
000438  e5c40012          STRB     r0,[r4,#0x12]         ;252
00043c  e3a00020          MOV      r0,#0x20              ;254
000440  e5c50000          STRB     r0,[r5,#0]            ;254
000444  e3a00001          MOV      r0,#1                 ;255
000448  e5c50001          STRB     r0,[r5,#1]            ;255
00044c  e3a00000          MOV      r0,#0                 ;256
000450  e5c50002          STRB     r0,[r5,#2]            ;256
000454  ea0001c9          B        |L1.2944|
                  |L1.1112|
000458  e320f000          NOP                            ;259
00045c  e59f0a54          LDR      r0,|L1.3768|
000460  e5c06000          STRB     r6,[r0,#0]            ;260  ; eQSPI_DeviceHldd
000464  e3a00017          MOV      r0,#0x17              ;262
000468  e5c20000          STRB     r0,[r2,#0]            ;262
00046c  e3a00001          MOV      r0,#1                 ;263
000470  e5c30000          STRB     r0,[r3,#0]            ;263
000474  e1c410b0          STRH     r1,[r4,#0]            ;265
000478  e3a0000a          MOV      r0,#0xa               ;266
00047c  e5c40002          STRB     r0,[r4,#2]            ;266
000480  e3a00001          MOV      r0,#1                 ;267
000484  e5c40003          STRB     r0,[r4,#3]            ;267
000488  e3a0000b          MOV      r0,#0xb               ;269
00048c  e5c40004          STRB     r0,[r4,#4]            ;269
000490  e3a00001          MOV      r0,#1                 ;270
000494  e5840008          STR      r0,[r4,#8]            ;270
000498  e5c4000c          STRB     r0,[r4,#0xc]          ;271
00049c  e3a00000          MOV      r0,#0                 ;272
0004a0  e5c4000d          STRB     r0,[r4,#0xd]          ;272
0004a4  e5c4000e          STRB     r0,[r4,#0xe]          ;273
0004a8  e5c4000f          STRB     r0,[r4,#0xf]          ;274
0004ac  e5c40010          STRB     r0,[r4,#0x10]         ;276
0004b0  e3a00020          MOV      r0,#0x20              ;277
0004b4  e5c40011          STRB     r0,[r4,#0x11]         ;277
0004b8  e3a00001          MOV      r0,#1                 ;278
0004bc  e5c40012          STRB     r0,[r4,#0x12]         ;278
0004c0  e3a00020          MOV      r0,#0x20              ;280
0004c4  e5c50000          STRB     r0,[r5,#0]            ;280
0004c8  e3a00001          MOV      r0,#1                 ;281
0004cc  e5c50001          STRB     r0,[r5,#1]            ;281
0004d0  e5c50002          STRB     r0,[r5,#2]            ;282
0004d4  ea0001a9          B        |L1.2944|
                  |L1.1240|
0004d8  e320f000          NOP                            ;285
0004dc  e59f09d4          LDR      r0,|L1.3768|
0004e0  e5c06000          STRB     r6,[r0,#0]            ;286  ; eQSPI_DeviceHldd
0004e4  e3a00010          MOV      r0,#0x10              ;288
0004e8  e5c20000          STRB     r0,[r2,#0]            ;288
0004ec  e3a00001          MOV      r0,#1                 ;289
0004f0  e5c30000          STRB     r0,[r3,#0]            ;289
0004f4  e1c410b0          STRH     r1,[r4,#0]            ;291
0004f8  e3a00006          MOV      r0,#6                 ;292
0004fc  e5c40002          STRB     r0,[r4,#2]            ;292
000500  e3a00001          MOV      r0,#1                 ;293
000504  e5c40003          STRB     r0,[r4,#3]            ;293
000508  e3a000eb          MOV      r0,#0xeb              ;295
00050c  e5c40004          STRB     r0,[r4,#4]            ;295
000510  e3a00003          MOV      r0,#3                 ;296
000514  e5840008          STR      r0,[r4,#8]            ;296
000518  e3a00000          MOV      r0,#0                 ;297
00051c  e5c4000c          STRB     r0,[r4,#0xc]          ;297
000520  e3a00002          MOV      r0,#2                 ;298
000524  e5c4000d          STRB     r0,[r4,#0xd]          ;298
000528  e5c4000e          STRB     r0,[r4,#0xe]          ;299
00052c  e5c4000f          STRB     r0,[r4,#0xf]          ;300
000530  e3a00000          MOV      r0,#0                 ;302
000534  e5c40010          STRB     r0,[r4,#0x10]         ;302
000538  e3a00020          MOV      r0,#0x20              ;303
00053c  e5c40011          STRB     r0,[r4,#0x11]         ;303
000540  e3a00001          MOV      r0,#1                 ;304
000544  e5c40012          STRB     r0,[r4,#0x12]         ;304
000548  e3a00020          MOV      r0,#0x20              ;306
00054c  e5c50000          STRB     r0,[r5,#0]            ;306
000550  e3a00001          MOV      r0,#1                 ;307
000554  e5c50001          STRB     r0,[r5,#1]            ;307
000558  e3a00000          MOV      r0,#0                 ;308
00055c  e5c50002          STRB     r0,[r5,#2]            ;308
000560  ea000186          B        |L1.2944|
                  |L1.1380|
000564  e320f000          NOP                            ;311
000568  e59f0948          LDR      r0,|L1.3768|
00056c  e5c06000          STRB     r6,[r0,#0]            ;312  ; eQSPI_DeviceHldd
000570  e3a00010          MOV      r0,#0x10              ;314
000574  e5c20000          STRB     r0,[r2,#0]            ;314
000578  e3a00001          MOV      r0,#1                 ;315
00057c  e5c30000          STRB     r0,[r3,#0]            ;315
000580  e1c410b0          STRH     r1,[r4,#0]            ;317
000584  e3a00007          MOV      r0,#7                 ;318
000588  e5c40002          STRB     r0,[r4,#2]            ;318
00058c  e3a00001          MOV      r0,#1                 ;319
000590  e5c40003          STRB     r0,[r4,#3]            ;319
000594  e3a000eb          MOV      r0,#0xeb              ;321
000598  e5c40004          STRB     r0,[r4,#4]            ;321
00059c  e3a00003          MOV      r0,#3                 ;322
0005a0  e5840008          STR      r0,[r4,#8]            ;322
0005a4  e3a00000          MOV      r0,#0                 ;323
0005a8  e5c4000c          STRB     r0,[r4,#0xc]          ;323
0005ac  e3a00002          MOV      r0,#2                 ;324
0005b0  e5c4000d          STRB     r0,[r4,#0xd]          ;324
0005b4  e5c4000e          STRB     r0,[r4,#0xe]          ;325
0005b8  e5c4000f          STRB     r0,[r4,#0xf]          ;326
0005bc  e3a00000          MOV      r0,#0                 ;328
0005c0  e5c40010          STRB     r0,[r4,#0x10]         ;328
0005c4  e3a00020          MOV      r0,#0x20              ;329
0005c8  e5c40011          STRB     r0,[r4,#0x11]         ;329
0005cc  e3a00001          MOV      r0,#1                 ;330
0005d0  e5c40012          STRB     r0,[r4,#0x12]         ;330
0005d4  e3a00020          MOV      r0,#0x20              ;332
0005d8  e5c50000          STRB     r0,[r5,#0]            ;332
0005dc  e3a00001          MOV      r0,#1                 ;333
0005e0  e5c50001          STRB     r0,[r5,#1]            ;333
0005e4  e3a00000          MOV      r0,#0                 ;334
0005e8  e5c50002          STRB     r0,[r5,#2]            ;334
0005ec  ea000163          B        |L1.2944|
                  |L1.1520|
0005f0  e320f000          NOP                            ;337
0005f4  e59f08bc          LDR      r0,|L1.3768|
0005f8  e5c06000          STRB     r6,[r0,#0]            ;338  ; eQSPI_DeviceHldd
0005fc  e3a00010          MOV      r0,#0x10              ;340
000600  e5c20000          STRB     r0,[r2,#0]            ;340
000604  e3a00001          MOV      r0,#1                 ;341
000608  e5c30000          STRB     r0,[r3,#0]            ;341
00060c  e1c410b0          STRH     r1,[r4,#0]            ;343
000610  e3a00008          MOV      r0,#8                 ;344
000614  e5c40002          STRB     r0,[r4,#2]            ;344
000618  e3a00001          MOV      r0,#1                 ;345
00061c  e5c40003          STRB     r0,[r4,#3]            ;345
000620  e3a000eb          MOV      r0,#0xeb              ;347
000624  e5c40004          STRB     r0,[r4,#4]            ;347
000628  e3a00003          MOV      r0,#3                 ;348
00062c  e5840008          STR      r0,[r4,#8]            ;348
000630  e3a00000          MOV      r0,#0                 ;349
000634  e5c4000c          STRB     r0,[r4,#0xc]          ;349
000638  e3a00002          MOV      r0,#2                 ;350
00063c  e5c4000d          STRB     r0,[r4,#0xd]          ;350
000640  e5c4000e          STRB     r0,[r4,#0xe]          ;351
000644  e5c4000f          STRB     r0,[r4,#0xf]          ;352
000648  e3a00000          MOV      r0,#0                 ;355
00064c  e5c40010          STRB     r0,[r4,#0x10]         ;355
000650  e3a00020          MOV      r0,#0x20              ;356
000654  e5c40011          STRB     r0,[r4,#0x11]         ;356
000658  e3a00001          MOV      r0,#1                 ;357
00065c  e5c40012          STRB     r0,[r4,#0x12]         ;357
000660  e3a00020          MOV      r0,#0x20              ;359
000664  e5c50000          STRB     r0,[r5,#0]            ;359
000668  e3a00001          MOV      r0,#1                 ;360
00066c  e5c50001          STRB     r0,[r5,#1]            ;360
000670  e3a00000          MOV      r0,#0                 ;361
000674  e5c50002          STRB     r0,[r5,#2]            ;361
000678  ea000140          B        |L1.2944|
                  |L1.1660|
00067c  e320f000          NOP                            ;364
000680  e59f0830          LDR      r0,|L1.3768|
000684  e5c06000          STRB     r6,[r0,#0]            ;365  ; eQSPI_DeviceHldd
000688  e3a00010          MOV      r0,#0x10              ;367
00068c  e5c20000          STRB     r0,[r2,#0]            ;367
000690  e3a00001          MOV      r0,#1                 ;368
000694  e5c30000          STRB     r0,[r3,#0]            ;368
000698  e1c410b0          STRH     r1,[r4,#0]            ;370
00069c  e3a00006          MOV      r0,#6                 ;371
0006a0  e5c40002          STRB     r0,[r4,#2]            ;371
0006a4  e3a00001          MOV      r0,#1                 ;372
0006a8  e5c40003          STRB     r0,[r4,#3]            ;372
0006ac  e3a000eb          MOV      r0,#0xeb              ;374
0006b0  e5c40004          STRB     r0,[r4,#4]            ;374
0006b4  e3a00003          MOV      r0,#3                 ;375
0006b8  e5840008          STR      r0,[r4,#8]            ;375
0006bc  e3a00000          MOV      r0,#0                 ;376
0006c0  e5c4000c          STRB     r0,[r4,#0xc]          ;376
0006c4  e3a00002          MOV      r0,#2                 ;377
0006c8  e5c4000d          STRB     r0,[r4,#0xd]          ;377
0006cc  e5c4000e          STRB     r0,[r4,#0xe]          ;378
0006d0  e5c4000f          STRB     r0,[r4,#0xf]          ;379
0006d4  e3a00000          MOV      r0,#0                 ;381
0006d8  e5c40010          STRB     r0,[r4,#0x10]         ;381
0006dc  e3a00020          MOV      r0,#0x20              ;382
0006e0  e5c40011          STRB     r0,[r4,#0x11]         ;382
0006e4  e3a00001          MOV      r0,#1                 ;383
0006e8  e5c40012          STRB     r0,[r4,#0x12]         ;383
0006ec  e3a00020          MOV      r0,#0x20              ;385
0006f0  e5c50000          STRB     r0,[r5,#0]            ;385
0006f4  e3a00001          MOV      r0,#1                 ;386
0006f8  e5c50001          STRB     r0,[r5,#1]            ;386
0006fc  e3a00000          MOV      r0,#0                 ;387
000700  e5c50002          STRB     r0,[r5,#2]            ;387
000704  ea00011d          B        |L1.2944|
                  |L1.1800|
000708  e320f000          NOP                            ;390
00070c  e59f07a4          LDR      r0,|L1.3768|
000710  e5c06000          STRB     r6,[r0,#0]            ;391  ; eQSPI_DeviceHldd
000714  e3a00010          MOV      r0,#0x10              ;393
000718  e5c20000          STRB     r0,[r2,#0]            ;393
00071c  e3a00001          MOV      r0,#1                 ;394
000720  e5c30000          STRB     r0,[r3,#0]            ;394
000724  e1c410b0          STRH     r1,[r4,#0]            ;396
000728  e3a00007          MOV      r0,#7                 ;397
00072c  e5c40002          STRB     r0,[r4,#2]            ;397
000730  e3a00001          MOV      r0,#1                 ;398
000734  e5c40003          STRB     r0,[r4,#3]            ;398
000738  e3a000eb          MOV      r0,#0xeb              ;400
00073c  e5c40004          STRB     r0,[r4,#4]            ;400
000740  e3a00003          MOV      r0,#3                 ;401
000744  e5840008          STR      r0,[r4,#8]            ;401
000748  e3a00000          MOV      r0,#0                 ;402
00074c  e5c4000c          STRB     r0,[r4,#0xc]          ;402
000750  e3a00002          MOV      r0,#2                 ;403
000754  e5c4000d          STRB     r0,[r4,#0xd]          ;403
000758  e5c4000e          STRB     r0,[r4,#0xe]          ;404
00075c  e5c4000f          STRB     r0,[r4,#0xf]          ;405
000760  e3a00000          MOV      r0,#0                 ;407
000764  e5c40010          STRB     r0,[r4,#0x10]         ;407
000768  e3a00020          MOV      r0,#0x20              ;408
00076c  e5c40011          STRB     r0,[r4,#0x11]         ;408
000770  e3a00001          MOV      r0,#1                 ;409
000774  e5c40012          STRB     r0,[r4,#0x12]         ;409
000778  e3a00020          MOV      r0,#0x20              ;411
00077c  e5c50000          STRB     r0,[r5,#0]            ;411
000780  e3a00001          MOV      r0,#1                 ;412
000784  e5c50001          STRB     r0,[r5,#1]            ;412
000788  e3a00000          MOV      r0,#0                 ;413
00078c  e5c50002          STRB     r0,[r5,#2]            ;413
000790  ea0000fa          B        |L1.2944|
                  |L1.1940|
000794  e320f000          NOP                            ;416
000798  e59f0718          LDR      r0,|L1.3768|
00079c  e5c06000          STRB     r6,[r0,#0]            ;417  ; eQSPI_DeviceHldd
0007a0  e3a00010          MOV      r0,#0x10              ;419
0007a4  e5c20000          STRB     r0,[r2,#0]            ;419
0007a8  e3a00001          MOV      r0,#1                 ;420
0007ac  e5c30000          STRB     r0,[r3,#0]            ;420
0007b0  e1c410b0          STRH     r1,[r4,#0]            ;422
0007b4  e3a00005          MOV      r0,#5                 ;423
0007b8  e5c40002          STRB     r0,[r4,#2]            ;423
0007bc  e3a00001          MOV      r0,#1                 ;424
0007c0  e5c40003          STRB     r0,[r4,#3]            ;424
0007c4  e3a000eb          MOV      r0,#0xeb              ;426
0007c8  e5c40004          STRB     r0,[r4,#4]            ;426
0007cc  e3a00003          MOV      r0,#3                 ;427
0007d0  e5840008          STR      r0,[r4,#8]            ;427
0007d4  e3a00000          MOV      r0,#0                 ;428
0007d8  e5c4000c          STRB     r0,[r4,#0xc]          ;428
0007dc  e3a00002          MOV      r0,#2                 ;429
0007e0  e5c4000d          STRB     r0,[r4,#0xd]          ;429
0007e4  e5c4000e          STRB     r0,[r4,#0xe]          ;430
0007e8  e5c4000f          STRB     r0,[r4,#0xf]          ;431
0007ec  e3a00000          MOV      r0,#0                 ;434
0007f0  e5c40010          STRB     r0,[r4,#0x10]         ;434
0007f4  e3a00020          MOV      r0,#0x20              ;435
0007f8  e5c40011          STRB     r0,[r4,#0x11]         ;435
0007fc  e3a00001          MOV      r0,#1                 ;436
000800  e5c40012          STRB     r0,[r4,#0x12]         ;436
000804  e3a00020          MOV      r0,#0x20              ;438
000808  e5c50000          STRB     r0,[r5,#0]            ;438
00080c  e3a00001          MOV      r0,#1                 ;439
000810  e5c50001          STRB     r0,[r5,#1]            ;439
000814  e3a00000          MOV      r0,#0                 ;440
000818  e5c50002          STRB     r0,[r5,#2]            ;440
00081c  ea0000d7          B        |L1.2944|
                  |L1.2080|
000820  e320f000          NOP                            ;443
000824  e59f068c          LDR      r0,|L1.3768|
000828  e5c06000          STRB     r6,[r0,#0]            ;444  ; eQSPI_DeviceHldd
00082c  e3a00010          MOV      r0,#0x10              ;446
000830  e5c20000          STRB     r0,[r2,#0]            ;446
000834  e3a00001          MOV      r0,#1                 ;447
000838  e5c30000          STRB     r0,[r3,#0]            ;447
00083c  e1c410b0          STRH     r1,[r4,#0]            ;449
000840  e3a00006          MOV      r0,#6                 ;450
000844  e5c40002          STRB     r0,[r4,#2]            ;450
000848  e3a00001          MOV      r0,#1                 ;451
00084c  e5c40003          STRB     r0,[r4,#3]            ;451
000850  e3a000eb          MOV      r0,#0xeb              ;453
000854  e5c40004          STRB     r0,[r4,#4]            ;453
000858  e3a00003          MOV      r0,#3                 ;454
00085c  e5840008          STR      r0,[r4,#8]            ;454
000860  e3a00000          MOV      r0,#0                 ;455
000864  e5c4000c          STRB     r0,[r4,#0xc]          ;455
000868  e3a00002          MOV      r0,#2                 ;456
00086c  e5c4000d          STRB     r0,[r4,#0xd]          ;456
000870  e5c4000e          STRB     r0,[r4,#0xe]          ;457
000874  e5c4000f          STRB     r0,[r4,#0xf]          ;458
000878  e3a00000          MOV      r0,#0                 ;460
00087c  e5c40010          STRB     r0,[r4,#0x10]         ;460
000880  e3a00020          MOV      r0,#0x20              ;461
000884  e5c40011          STRB     r0,[r4,#0x11]         ;461
000888  e3a00001          MOV      r0,#1                 ;462
00088c  e5c40012          STRB     r0,[r4,#0x12]         ;462
000890  e3a00020          MOV      r0,#0x20              ;464
000894  e5c50000          STRB     r0,[r5,#0]            ;464
000898  e3a00001          MOV      r0,#1                 ;465
00089c  e5c50001          STRB     r0,[r5,#1]            ;465
0008a0  e3a00000          MOV      r0,#0                 ;466
0008a4  e5c50002          STRB     r0,[r5,#2]            ;466
0008a8  ea0000b4          B        |L1.2944|
                  |L1.2220|
0008ac  e320f000          NOP                            ;469
0008b0  e59f0600          LDR      r0,|L1.3768|
0008b4  e5c06000          STRB     r6,[r0,#0]            ;470  ; eQSPI_DeviceHldd
0008b8  e3a00010          MOV      r0,#0x10              ;472
0008bc  e5c20000          STRB     r0,[r2,#0]            ;472
0008c0  e3a00001          MOV      r0,#1                 ;473
0008c4  e5c30000          STRB     r0,[r3,#0]            ;473
0008c8  e1c410b0          STRH     r1,[r4,#0]            ;475
0008cc  e3a00007          MOV      r0,#7                 ;476
0008d0  e5c40002          STRB     r0,[r4,#2]            ;476
0008d4  e3a00001          MOV      r0,#1                 ;477
0008d8  e5c40003          STRB     r0,[r4,#3]            ;477
0008dc  e3a000eb          MOV      r0,#0xeb              ;479
0008e0  e5c40004          STRB     r0,[r4,#4]            ;479
0008e4  e3a00003          MOV      r0,#3                 ;480
0008e8  e5840008          STR      r0,[r4,#8]            ;480
0008ec  e3a00000          MOV      r0,#0                 ;481
0008f0  e5c4000c          STRB     r0,[r4,#0xc]          ;481
0008f4  e3a00002          MOV      r0,#2                 ;482
0008f8  e5c4000d          STRB     r0,[r4,#0xd]          ;482
0008fc  e5c4000e          STRB     r0,[r4,#0xe]          ;483
000900  e5c4000f          STRB     r0,[r4,#0xf]          ;484
000904  e3a00000          MOV      r0,#0                 ;486
000908  e5c40010          STRB     r0,[r4,#0x10]         ;486
00090c  e3a00020          MOV      r0,#0x20              ;487
000910  e5c40011          STRB     r0,[r4,#0x11]         ;487
000914  e3a00001          MOV      r0,#1                 ;488
000918  e5c40012          STRB     r0,[r4,#0x12]         ;488
00091c  e3a00020          MOV      r0,#0x20              ;490
000920  e5c50000          STRB     r0,[r5,#0]            ;490
000924  e3a00001          MOV      r0,#1                 ;491
000928  e5c50001          STRB     r0,[r5,#1]            ;491
00092c  e3a00000          MOV      r0,#0                 ;492
000930  e5c50002          STRB     r0,[r5,#2]            ;492
000934  ea000091          B        |L1.2944|
                  |L1.2360|
000938  e320f000          NOP                            ;495
00093c  e59f0574          LDR      r0,|L1.3768|
000940  e5c06000          STRB     r6,[r0,#0]            ;496  ; eQSPI_DeviceHldd
000944  e3a00010          MOV      r0,#0x10              ;498
000948  e5c20000          STRB     r0,[r2,#0]            ;498
00094c  e3a00001          MOV      r0,#1                 ;499
000950  e5c30000          STRB     r0,[r3,#0]            ;499
000954  e1c410b0          STRH     r1,[r4,#0]            ;501
000958  e3a00009          MOV      r0,#9                 ;502
00095c  e5c40002          STRB     r0,[r4,#2]            ;502
000960  e3a00001          MOV      r0,#1                 ;503
000964  e5c40003          STRB     r0,[r4,#3]            ;503
000968  e3a000eb          MOV      r0,#0xeb              ;505
00096c  e5c40004          STRB     r0,[r4,#4]            ;505
000970  e3a00003          MOV      r0,#3                 ;506
000974  e5840008          STR      r0,[r4,#8]            ;506
000978  e3a00000          MOV      r0,#0                 ;507
00097c  e5c4000c          STRB     r0,[r4,#0xc]          ;507
000980  e3a00002          MOV      r0,#2                 ;508
000984  e5c4000d          STRB     r0,[r4,#0xd]          ;508
000988  e5c4000e          STRB     r0,[r4,#0xe]          ;509
00098c  e5c4000f          STRB     r0,[r4,#0xf]          ;510
000990  e3a00000          MOV      r0,#0                 ;512
000994  e5c40010          STRB     r0,[r4,#0x10]         ;512
000998  e3a00020          MOV      r0,#0x20              ;513
00099c  e5c40011          STRB     r0,[r4,#0x11]         ;513
0009a0  e3a00001          MOV      r0,#1                 ;514
0009a4  e5c40012          STRB     r0,[r4,#0x12]         ;514
0009a8  e3a00020          MOV      r0,#0x20              ;516
0009ac  e5c50000          STRB     r0,[r5,#0]            ;516
0009b0  e3a00001          MOV      r0,#1                 ;517
0009b4  e5c50001          STRB     r0,[r5,#1]            ;517
0009b8  e3a00000          MOV      r0,#0                 ;518
0009bc  e5c50002          STRB     r0,[r5,#2]            ;518
0009c0  ea00006e          B        |L1.2944|
                  |L1.2500|
0009c4  e320f000          NOP                            ;521
0009c8  e59f04e8          LDR      r0,|L1.3768|
0009cc  e5c06000          STRB     r6,[r0,#0]            ;522  ; eQSPI_DeviceHldd
0009d0  e3a00010          MOV      r0,#0x10              ;524
0009d4  e5c20000          STRB     r0,[r2,#0]            ;524
0009d8  e3a00001          MOV      r0,#1                 ;525
0009dc  e5c30000          STRB     r0,[r3,#0]            ;525
0009e0  e1c410b0          STRH     r1,[r4,#0]            ;527
0009e4  e3a0000a          MOV      r0,#0xa               ;528
0009e8  e5c40002          STRB     r0,[r4,#2]            ;528
0009ec  e3a00001          MOV      r0,#1                 ;529
0009f0  e5c40003          STRB     r0,[r4,#3]            ;529
0009f4  e3a000eb          MOV      r0,#0xeb              ;531
0009f8  e5c40004          STRB     r0,[r4,#4]            ;531
0009fc  e3a00003          MOV      r0,#3                 ;532
000a00  e5840008          STR      r0,[r4,#8]            ;532
000a04  e3a00001          MOV      r0,#1                 ;533
000a08  e5c4000c          STRB     r0,[r4,#0xc]          ;533
000a0c  e3a00002          MOV      r0,#2                 ;534
000a10  e5c4000d          STRB     r0,[r4,#0xd]          ;534
000a14  e5c4000e          STRB     r0,[r4,#0xe]          ;535
000a18  e5c4000f          STRB     r0,[r4,#0xf]          ;536
000a1c  e3a00000          MOV      r0,#0                 ;538
000a20  e5c40010          STRB     r0,[r4,#0x10]         ;538
000a24  e3a00020          MOV      r0,#0x20              ;539
000a28  e5c40011          STRB     r0,[r4,#0x11]         ;539
000a2c  e3a00001          MOV      r0,#1                 ;540
000a30  e5c40012          STRB     r0,[r4,#0x12]         ;540
000a34  e3a00020          MOV      r0,#0x20              ;542
000a38  e5c50000          STRB     r0,[r5,#0]            ;542
000a3c  e3a00001          MOV      r0,#1                 ;543
000a40  e5c50001          STRB     r0,[r5,#1]            ;543
000a44  e3a00000          MOV      r0,#0                 ;544
000a48  e5c50002          STRB     r0,[r5,#2]            ;544
000a4c  ea00004b          B        |L1.2944|
                  |L1.2640|
000a50  e320f000          NOP                            ;547
000a54  e59f045c          LDR      r0,|L1.3768|
000a58  e5c06000          STRB     r6,[r0,#0]            ;548  ; eQSPI_DeviceHldd
000a5c  e3a00010          MOV      r0,#0x10              ;550
000a60  e5c20000          STRB     r0,[r2,#0]            ;550
000a64  e3a00001          MOV      r0,#1                 ;551
000a68  e5c30000          STRB     r0,[r3,#0]            ;551
000a6c  e1c410b0          STRH     r1,[r4,#0]            ;553
000a70  e3a00006          MOV      r0,#6                 ;554
000a74  e5c40002          STRB     r0,[r4,#2]            ;554
000a78  e3a00001          MOV      r0,#1                 ;555
000a7c  e5c40003          STRB     r0,[r4,#3]            ;555
000a80  e3a000eb          MOV      r0,#0xeb              ;557
000a84  e5c40004          STRB     r0,[r4,#4]            ;557
000a88  e3a00003          MOV      r0,#3                 ;558
000a8c  e5840008          STR      r0,[r4,#8]            ;558
000a90  e3a00000          MOV      r0,#0                 ;559
000a94  e5c4000c          STRB     r0,[r4,#0xc]          ;559
000a98  e3a00002          MOV      r0,#2                 ;560
000a9c  e5c4000d          STRB     r0,[r4,#0xd]          ;560
000aa0  e5c4000e          STRB     r0,[r4,#0xe]          ;561
000aa4  e5c4000f          STRB     r0,[r4,#0xf]          ;562
000aa8  e3a00000          MOV      r0,#0                 ;564
000aac  e5c40010          STRB     r0,[r4,#0x10]         ;564
000ab0  e3a00020          MOV      r0,#0x20              ;565
000ab4  e5c40011          STRB     r0,[r4,#0x11]         ;565
000ab8  e3a00001          MOV      r0,#1                 ;566
000abc  e5c40012          STRB     r0,[r4,#0x12]         ;566
000ac0  e3a00020          MOV      r0,#0x20              ;568
000ac4  e5c50000          STRB     r0,[r5,#0]            ;568
000ac8  e3a00001          MOV      r0,#1                 ;569
000acc  e5c50001          STRB     r0,[r5,#1]            ;569
000ad0  e3a00000          MOV      r0,#0                 ;570
000ad4  e5c50002          STRB     r0,[r5,#2]            ;570
000ad8  ea000028          B        |L1.2944|
                  |L1.2780|
000adc  e320f000          NOP                            ;573
000ae0  e59f03d0          LDR      r0,|L1.3768|
000ae4  e5c06000          STRB     r6,[r0,#0]            ;574  ; eQSPI_DeviceHldd
000ae8  e3a00010          MOV      r0,#0x10              ;576
000aec  e5c20000          STRB     r0,[r2,#0]            ;576
000af0  e3a00001          MOV      r0,#1                 ;577
000af4  e5c30000          STRB     r0,[r3,#0]            ;577
000af8  e1c410b0          STRH     r1,[r4,#0]            ;579
000afc  e3a00007          MOV      r0,#7                 ;580
000b00  e5c40002          STRB     r0,[r4,#2]            ;580
000b04  e3a00001          MOV      r0,#1                 ;581
000b08  e5c40003          STRB     r0,[r4,#3]            ;581
000b0c  e3a000eb          MOV      r0,#0xeb              ;583
000b10  e5c40004          STRB     r0,[r4,#4]            ;583
000b14  e3a00003          MOV      r0,#3                 ;584
000b18  e5840008          STR      r0,[r4,#8]            ;584
000b1c  e3a00000          MOV      r0,#0                 ;585
000b20  e5c4000c          STRB     r0,[r4,#0xc]          ;585
000b24  e3a00002          MOV      r0,#2                 ;586
000b28  e5c4000d          STRB     r0,[r4,#0xd]          ;586
000b2c  e5c4000e          STRB     r0,[r4,#0xe]          ;587
000b30  e5c4000f          STRB     r0,[r4,#0xf]          ;588
000b34  e3a00000          MOV      r0,#0                 ;590
000b38  e5c40010          STRB     r0,[r4,#0x10]         ;590
000b3c  e3a00020          MOV      r0,#0x20              ;591
000b40  e5c40011          STRB     r0,[r4,#0x11]         ;591
000b44  e3a00001          MOV      r0,#1                 ;592
000b48  e5c40012          STRB     r0,[r4,#0x12]         ;592
000b4c  e3a00020          MOV      r0,#0x20              ;594
000b50  e5c50000          STRB     r0,[r5,#0]            ;594
000b54  e3a00001          MOV      r0,#1                 ;595
000b58  e5c50001          STRB     r0,[r5,#1]            ;595
000b5c  e3a00000          MOV      r0,#0                 ;596
000b60  e5c50002          STRB     r0,[r5,#2]            ;596
000b64  ea000005          B        |L1.2944|
                  |L1.2920|
000b68  e320f000          NOP                            ;599
000b6c  e3a00015          MOV      r0,#0x15              ;600
000b70  e59fc340          LDR      r12,|L1.3768|
000b74  e5cc0000          STRB     r0,[r12,#0]           ;600  ; eQSPI_DeviceHldd
000b78  e3e07000          MVN      r7,#0                 ;601
000b7c  e320f000          NOP                            ;602
                  |L1.2944|
000b80  e320f000          NOP                            ;101
000b84  e1a00007          MOV      r0,r7                 ;604
000b88  eafffd29          B        |L1.52|
;;;606    
                          ENDP

                  i32ClearFlash PROC
;;;609    
;;;610    int32_t i32ClearFlash(qspic_cntrl_e eController, qspic_dev_e eDevice, uint32_t u32SpiPhysAddr, uint32_t u32SectorCount)
000b8c  e92d5ffc          PUSH     {r2-r12,lr}
;;;611    {
000b90  e1a07000          MOV      r7,r0
000b94  e1a0a001          MOV      r10,r1
000b98  e1a05002          MOV      r5,r2
000b9c  e1a06003          MOV      r6,r3
;;;612        uint16_t u16EraseIndex;
;;;613        uint8_t  *pu8Status;
;;;614        uint8_t  u8Status;
;;;615        int32_t  i32Res = C_FAILED;
000ba0  e3e00000          MVN      r0,#0
000ba4  e58d0000          STR      r0,[sp,#0]
;;;616        uint32_t u32BaseAddress;
;;;617        uint32_t u16SectorOffset;
;;;618    
;;;619        /* get status pointer */
;;;620        pu8Status = &u8Status;
000ba8  e28db004          ADD      r11,sp,#4
;;;621    
;;;622        /* wait for cycle completion of previous program access */
;;;623        i32QSPIC_WaitForCompletion(eController);
000bac  e1a00007          MOV      r0,r7
000bb0  ebfffffe          BL       i32QSPIC_WaitForCompletion
;;;624    
;;;625        /* check status of flash */
;;;626        if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
000bb4  e59f02fc          LDR      r0,|L1.3768|
000bb8  e5d00000          LDRB     r0,[r0,#0]  ; eQSPI_DeviceHldd
000bbc  e3500007          CMP      r0,#7
000bc0  0a000003          BEQ      |L1.3028|
000bc4  e59f02ec          LDR      r0,|L1.3768|
000bc8  e5d00000          LDRB     r0,[r0,#0]  ; eQSPI_DeviceHldd
000bcc  e3500008          CMP      r0,#8
000bd0  1a000009          BNE      |L1.3068|
                  |L1.3028|
;;;627        {
;;;628            do {
000bd4  e320f000          NOP      
                  |L1.3032|
;;;629                i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
000bd8  e1a0200b          MOV      r2,r11
000bdc  e1a0100a          MOV      r1,r10
000be0  e1a00007          MOV      r0,r7
000be4  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
;;;630            } while ((u8Status&QSPI_WE) == 0);
000be8  e5dd0004          LDRB     r0,[sp,#4]
000bec  e2000080          AND      r0,r0,#0x80
000bf0  e3500000          CMP      r0,#0
000bf4  0afffff7          BEQ      |L1.3032|
000bf8  ea000008          B        |L1.3104|
                  |L1.3068|
;;;631        }
;;;632        else
;;;633        {
;;;634            do {
000bfc  e320f000          NOP      
                  |L1.3072|
;;;635                i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
000c00  e1a0200b          MOV      r2,r11
000c04  e1a0100a          MOV      r1,r10
000c08  e1a00007          MOV      r0,r7
000c0c  ebfffffe          BL       i32QSPIC_PgrmStatusRead
;;;636            } while ((u8Status&QSPI_WIP) == 1);
000c10  e5dd0004          LDRB     r0,[sp,#4]
000c14  e2000001          AND      r0,r0,#1
000c18  e3500000          CMP      r0,#0
000c1c  1afffff7          BNE      |L1.3072|
                  |L1.3104|
;;;637        }
;;;638    
;;;639        /* erase device */
;;;640        if (u32SectorCount == 0)
000c20  e3560000          CMP      r6,#0
000c24  1a000003          BNE      |L1.3128|
;;;641        {
;;;642            /* erase complete flash */
;;;643            i32QSPIC_PgrmChipErase(eController, eDevice);
000c28  e1a0100a          MOV      r1,r10
000c2c  e1a00007          MOV      r0,r7
000c30  ebfffffe          BL       i32QSPIC_PgrmChipErase
000c34  ea000031          B        |L1.3328|
                  |L1.3128|
;;;644        }
;;;645        else
;;;646        {
;;;647            /* calculate sector offset */
;;;648            u32BaseAddress = (biGetQSPIC_FlshMemMap0_FBA(eController) << 16);
000c38  e59f027c          LDR      r0,|L1.3772|
000c3c  e7970000          LDR      r0,[r7,r0]
000c40  e1a00820          LSR      r0,r0,#16
000c44  e1a08800          LSL      r8,r0,#16
;;;649            u16SectorOffset = (u32SpiPhysAddr - u32BaseAddress) / SIZE_64KB;
000c48  e0450008          SUB      r0,r5,r8
000c4c  e1a09820          LSR      r9,r0,#16
;;;650    
;;;651            /* erase given number of sectors */
;;;652            for (u16EraseIndex=0; u16EraseIndex<u32SectorCount; u16EraseIndex++)
000c50  e3a04000          MOV      r4,#0
000c54  ea000027          B        |L1.3320|
                  |L1.3160|
;;;653            {
;;;654                /* enable writing */
;;;655                i32QSPIC_PgrmWriteEnable(eController, eDevice);
000c58  e1a0100a          MOV      r1,r10
000c5c  e1a00007          MOV      r0,r7
000c60  ebfffffe          BL       i32QSPIC_PgrmWriteEnable
;;;656    
;;;657                /* erase 64KB sector */
;;;658                i32QSPIC_PgrmSectErase(eController, eDevice, QSPIC_OPCODE_64KBS_ERASE, u32SpiPhysAddr + u16EraseIndex*SIZE_64KB);
000c64  e0853804          ADD      r3,r5,r4,LSL #16
000c68  e3a020d8          MOV      r2,#0xd8
000c6c  e1a0100a          MOV      r1,r10
000c70  e1a00007          MOV      r0,r7
000c74  ebfffffe          BL       i32QSPIC_PgrmSectErase
;;;659    
;;;660                /* display progress */
;;;661                printf("Erase sector: %d\n", u16SectorOffset + u16EraseIndex);
000c78  e0891004          ADD      r1,r9,r4
000c7c  e28f0f8f          ADR      r0,|L1.3776|
000c80  ebfffffe          BL       __2printf
;;;662    
;;;663                /* check status of flash */
;;;664                if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
000c84  e59f022c          LDR      r0,|L1.3768|
000c88  e5d00000          LDRB     r0,[r0,#0]  ; eQSPI_DeviceHldd
000c8c  e3500007          CMP      r0,#7
000c90  0a000003          BEQ      |L1.3236|
000c94  e59f021c          LDR      r0,|L1.3768|
000c98  e5d00000          LDRB     r0,[r0,#0]  ; eQSPI_DeviceHldd
000c9c  e3500008          CMP      r0,#8
000ca0  1a000009          BNE      |L1.3276|
                  |L1.3236|
;;;665                {
;;;666                    do {
000ca4  e320f000          NOP      
                  |L1.3240|
;;;667                        i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
000ca8  e1a0200b          MOV      r2,r11
000cac  e1a0100a          MOV      r1,r10
000cb0  e1a00007          MOV      r0,r7
000cb4  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
;;;668                    } while ((u8Status&QSPI_WE) == 0);
000cb8  e5dd0004          LDRB     r0,[sp,#4]
000cbc  e2000080          AND      r0,r0,#0x80
000cc0  e3500000          CMP      r0,#0
000cc4  0afffff7          BEQ      |L1.3240|
000cc8  ea000008          B        |L1.3312|
                  |L1.3276|
;;;669                }
;;;670                else
;;;671                {
;;;672                    do {
000ccc  e320f000          NOP      
                  |L1.3280|
;;;673                        i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
000cd0  e1a0200b          MOV      r2,r11
000cd4  e1a0100a          MOV      r1,r10
000cd8  e1a00007          MOV      r0,r7
000cdc  ebfffffe          BL       i32QSPIC_PgrmStatusRead
;;;674                    } while ((u8Status&QSPI_WIP) == 1);
000ce0  e5dd0004          LDRB     r0,[sp,#4]
000ce4  e2000001          AND      r0,r0,#1
000ce8  e3500000          CMP      r0,#0
000cec  1afffff7          BNE      |L1.3280|
                  |L1.3312|
000cf0  e2840001          ADD      r0,r4,#1              ;652
000cf4  e6ff4070          UXTH     r4,r0                 ;652
                  |L1.3320|
000cf8  e1540006          CMP      r4,r6                 ;652
000cfc  3affffd5          BCC      |L1.3160|
                  |L1.3328|
;;;675                }
;;;676            }
;;;677        }
;;;678    
;;;679        i32Res = C_SUCCESS;
000d00  e3a00000          MOV      r0,#0
000d04  e58d0000          STR      r0,[sp,#0]
;;;680    
;;;681        return i32Res;
000d08  e59d0000          LDR      r0,[sp,#0]
;;;682    }
000d0c  e8bd9ffc          POP      {r2-r12,pc}
;;;683    
                          ENDP

                  i32WriteToFlashWOE PROC
;;;686    
;;;687    int32_t i32WriteToFlashWOE(qspic_cntrl_e eController, qspic_dev_e eDevice, uint32_t u32SpiPhysAddr, uint32_t u32DataCount, uint8_t* const pu8Data)
000d10  e92d4ff0          PUSH     {r4-r11,lr}
;;;688    {
000d14  e24dd014          SUB      sp,sp,#0x14
000d18  e1a09000          MOV      r9,r0
000d1c  e1a0a001          MOV      r10,r1
000d20  e1a08002          MOV      r8,r2
000d24  e1a05003          MOV      r5,r3
000d28  e59d6038          LDR      r6,[sp,#0x38]
;;;689        uint32_t u32ProgramIndex;
;;;690        uint32_t u32ProgramCount;
;;;691        uint16_t u16ByteCount;
;;;692        uint8_t *pu8Buffer;
;;;693        uint8_t *pu8Status;
;;;694        uint8_t u8Status;
;;;695        int32_t i32Res = C_FAILED;
000d2c  e3e00000          MVN      r0,#0
000d30  e58d0004          STR      r0,[sp,#4]
;;;696    
;;;697        /* get result buffer pointer */
;;;698        pu8Buffer = pu8Data;
000d34  e1a0b006          MOV      r11,r6
;;;699    
;;;700        /* get status pointer */
;;;701        pu8Status = &u8Status;
000d38  e28d0008          ADD      r0,sp,#8
000d3c  e58d000c          STR      r0,[sp,#0xc]
;;;702    
;;;703        /* check for valid data buffer pointer */
;;;704        if (C_NULL == pu8Buffer)
000d40  e35b0000          CMP      r11,#0
000d44  1a000002          BNE      |L1.3412|
;;;705        {
;;;706            return i32Res;
000d48  e59d0004          LDR      r0,[sp,#4]
                  |L1.3404|
000d4c  e28dd014          ADD      sp,sp,#0x14
;;;707        }
;;;708    
;;;709        /* wait for cycle completion of previous program access */
;;;710        i32QSPIC_WaitForCompletion(eController);
;;;711    
;;;712        /* check status of flash */
;;;713        if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
;;;714        {
;;;715            do {
;;;716                i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
;;;717            } while ((u8Status&QSPI_WE) == 0);
;;;718        }
;;;719        else
;;;720        {
;;;721            do {
;;;722                i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
;;;723            } while ((u8Status&QSPI_WIP) == 1);
;;;724        }
;;;725    
;;;726        /* calculate number of SIZE_256B blocks */
;;;727        u32ProgramCount = u32DataCount / SIZE_256B;
;;;728        if (u32DataCount % SIZE_256B != 0)
;;;729        {
;;;730        	u32ProgramCount = u32ProgramCount + 1;
;;;731        }
;;;732    
;;;733        /* program device */
;;;734        for (u32ProgramIndex=0; u32ProgramIndex<u32ProgramCount; u32ProgramIndex++)
;;;735        {
;;;736            /* calculate number of bytes to be written */
;;;737            if ((u32DataCount-u32ProgramIndex*SIZE_256B)>=SIZE_256B)
;;;738            {
;;;739                u16ByteCount = SIZE_256B;
;;;740            }
;;;741            else
;;;742            {
;;;743                u16ByteCount = u32DataCount - u32ProgramIndex*SIZE_256B;
;;;744            }
;;;745    
;;;746            /* enable writing */
;;;747            i32QSPIC_PgrmWriteEnable(eController, eDevice);
;;;748    
;;;749            /* write to flash */
;;;750            i32QSPIC_PgrmPagePgrm(eController, eDevice, u32SpiPhysAddr + u32ProgramIndex*SIZE_256B, u16ByteCount, (pu8Data+u32ProgramIndex*SIZE_256B));
;;;751    
;;;752            /* check status of flash */
;;;753            if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
;;;754            {
;;;755                do {
;;;756                    i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
;;;757                } while ((u8Status&QSPI_WE) == 0);
;;;758            }
;;;759            else
;;;760            {
;;;761                do {
;;;762                    i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
;;;763                } while ((u8Status&QSPI_WIP) == 1);
;;;764            }
;;;765        }
;;;766    
;;;767        i32Res = C_SUCCESS;
;;;768    
;;;769        return i32Res;
;;;770    }
000d50  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3412|
000d54  e1a00009          MOV      r0,r9                 ;710
000d58  ebfffffe          BL       i32QSPIC_WaitForCompletion
000d5c  e59f0154          LDR      r0,|L1.3768|
000d60  e5d00000          LDRB     r0,[r0,#0]            ;713  ; eQSPI_DeviceHldd
000d64  e3500007          CMP      r0,#7                 ;713
000d68  0a000003          BEQ      |L1.3452|
000d6c  e59f0144          LDR      r0,|L1.3768|
000d70  e5d00000          LDRB     r0,[r0,#0]            ;713  ; eQSPI_DeviceHldd
000d74  e3500008          CMP      r0,#8                 ;713
000d78  1a000009          BNE      |L1.3492|
                  |L1.3452|
000d7c  e320f000          NOP                            ;715
                  |L1.3456|
000d80  e1a0100a          MOV      r1,r10                ;716
000d84  e1a00009          MOV      r0,r9                 ;716
000d88  e59d200c          LDR      r2,[sp,#0xc]          ;716
000d8c  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
000d90  e5dd0008          LDRB     r0,[sp,#8]            ;717
000d94  e2000080          AND      r0,r0,#0x80           ;717
000d98  e3500000          CMP      r0,#0                 ;717
000d9c  0afffff7          BEQ      |L1.3456|
000da0  ea000008          B        |L1.3528|
                  |L1.3492|
000da4  e320f000          NOP                            ;721
                  |L1.3496|
000da8  e1a0100a          MOV      r1,r10                ;722
000dac  e1a00009          MOV      r0,r9                 ;722
000db0  e59d200c          LDR      r2,[sp,#0xc]          ;722
000db4  ebfffffe          BL       i32QSPIC_PgrmStatusRead
000db8  e5dd0008          LDRB     r0,[sp,#8]            ;723
000dbc  e2000001          AND      r0,r0,#1              ;723
000dc0  e3500000          CMP      r0,#0                 ;723
000dc4  1afffff7          BNE      |L1.3496|
                  |L1.3528|
000dc8  e1a07425          LSR      r7,r5,#8              ;727
000dcc  e20500ff          AND      r0,r5,#0xff           ;728
000dd0  e3500000          CMP      r0,#0                 ;728
000dd4  0a000000          BEQ      |L1.3548|
000dd8  e2877001          ADD      r7,r7,#1              ;730
                  |L1.3548|
000ddc  e3a04000          MOV      r4,#0                 ;734
000de0  ea00002e          B        |L1.3744|
                  |L1.3556|
000de4  e0450404          SUB      r0,r5,r4,LSL #8       ;737
000de8  e3500c01          CMP      r0,#0x100             ;737
000dec  3a000002          BCC      |L1.3580|
000df0  e3000100          MOVW     r0,#0x100             ;739
000df4  e58d0010          STR      r0,[sp,#0x10]         ;739
000df8  ea000002          B        |L1.3592|
                  |L1.3580|
000dfc  e0450404          SUB      r0,r5,r4,LSL #8       ;743
000e00  e6ff0070          UXTH     r0,r0                 ;743
000e04  e58d0010          STR      r0,[sp,#0x10]         ;743
                  |L1.3592|
000e08  e1a0100a          MOV      r1,r10                ;747
000e0c  e1a00009          MOV      r0,r9                 ;747
000e10  ebfffffe          BL       i32QSPIC_PgrmWriteEnable
000e14  e0860404          ADD      r0,r6,r4,LSL #8       ;750
000e18  e0882404          ADD      r2,r8,r4,LSL #8       ;750
000e1c  e58d0000          STR      r0,[sp,#0]            ;750
000e20  e1a0100a          MOV      r1,r10                ;750
000e24  e1a00009          MOV      r0,r9                 ;750
000e28  e59d3010          LDR      r3,[sp,#0x10]         ;750
000e2c  ebfffffe          BL       i32QSPIC_PgrmPagePgrm
000e30  e59f0080          LDR      r0,|L1.3768|
000e34  e5d00000          LDRB     r0,[r0,#0]            ;753  ; eQSPI_DeviceHldd
000e38  e3500007          CMP      r0,#7                 ;753
000e3c  0a000003          BEQ      |L1.3664|
000e40  e59f0070          LDR      r0,|L1.3768|
000e44  e5d00000          LDRB     r0,[r0,#0]            ;753  ; eQSPI_DeviceHldd
000e48  e3500008          CMP      r0,#8                 ;753
000e4c  1a000009          BNE      |L1.3704|
                  |L1.3664|
000e50  e320f000          NOP                            ;755
                  |L1.3668|
000e54  e1a0100a          MOV      r1,r10                ;756
000e58  e1a00009          MOV      r0,r9                 ;756
000e5c  e59d200c          LDR      r2,[sp,#0xc]          ;756
000e60  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
000e64  e5dd0008          LDRB     r0,[sp,#8]            ;757
000e68  e2000080          AND      r0,r0,#0x80           ;757
000e6c  e3500000          CMP      r0,#0                 ;757
000e70  0afffff7          BEQ      |L1.3668|
000e74  ea000008          B        |L1.3740|
                  |L1.3704|
000e78  e320f000          NOP                            ;761
                  |L1.3708|
000e7c  e1a0100a          MOV      r1,r10                ;762
000e80  e1a00009          MOV      r0,r9                 ;762
000e84  e59d200c          LDR      r2,[sp,#0xc]          ;762
000e88  ebfffffe          BL       i32QSPIC_PgrmStatusRead
000e8c  e5dd0008          LDRB     r0,[sp,#8]            ;763
000e90  e2000001          AND      r0,r0,#1              ;763
000e94  e3500000          CMP      r0,#0                 ;763
000e98  1afffff7          BNE      |L1.3708|
                  |L1.3740|
000e9c  e2844001          ADD      r4,r4,#1              ;734
                  |L1.3744|
000ea0  e1540007          CMP      r4,r7                 ;734
000ea4  3affffce          BCC      |L1.3556|
000ea8  e3a00000          MOV      r0,#0                 ;767
000eac  e58d0004          STR      r0,[sp,#4]            ;767
000eb0  e59d0004          LDR      r0,[sp,#4]            ;769
000eb4  eaffffa4          B        |L1.3404|
                  |L1.3768|
                          DCD      eQSPI_DeviceHldd
                  |L1.3772|
                          DCD      0xc0109000
                  |L1.3776|
000ec0  45726173          DCB      "Erase sector: %d\n",0
000ec4  65207365
000ec8  63746f72
000ecc  3a202564
000ed0  0a00    
000ed2  00                DCB      0
000ed3  00                DCB      0
                          ENDP

                  i32WriteToFlashWE PROC
;;;774    
;;;775    int32_t i32WriteToFlashWE(qspic_cntrl_e eController, qspic_dev_e eDevice, uint32_t u32SpiPhysAddr, uint32_t u32DataCount, uint8_t* const pu8Data)
000ed4  e92d4fff          PUSH     {r0-r11,lr}
;;;776    {
000ed8  e24dd01c          SUB      sp,sp,#0x1c
000edc  e1a07002          MOV      r7,r2
000ee0  e1a05003          MOV      r5,r3
000ee4  e59d8050          LDR      r8,[sp,#0x50]
;;;777        uint16_t u16EraseIndex;
;;;778        uint16_t u16EraseSectorCount;
;;;779        uint32_t u32ProgramIndex;
;;;780        uint32_t u32ProgramCount;
;;;781        uint16_t u16ByteCount;
;;;782        uint8_t *pu8Buffer;
;;;783        uint8_t *pu8Status;
;;;784        uint8_t u8Status;
;;;785        uint8_t u8Information[2];
;;;786        int32_t i32Res = C_FAILED;
000ee8  e3e00000          MVN      r0,#0
000eec  e58d0008          STR      r0,[sp,#8]
;;;787    
;;;788        /* get result buffer pointer */
;;;789        pu8Buffer = pu8Data;
000ef0  e1a0b008          MOV      r11,r8
;;;790    
;;;791        /* get status pointer */
;;;792        pu8Status = &u8Status;
000ef4  e28d0010          ADD      r0,sp,#0x10
000ef8  e58d0014          STR      r0,[sp,#0x14]
;;;793    
;;;794        /* check for valid data buffer pointer */
;;;795        if (C_NULL == pu8Buffer)
000efc  e35b0000          CMP      r11,#0
000f00  1a000002          BNE      |L1.3856|
;;;796        {
;;;797            return i32Res;
000f04  e59d0008          LDR      r0,[sp,#8]
                  |L1.3848|
000f08  e28dd02c          ADD      sp,sp,#0x2c
;;;798        }
;;;799    
;;;800        /* wait for cycle completion of previous program access */
;;;801        i32QSPIC_WaitForCompletion(eController);
;;;802    
;;;803        /* check status of flash */
;;;804        if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
;;;805        {
;;;806            do {
;;;807                i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
;;;808            } while ((u8Status&QSPI_WE) == 0);
;;;809        }
;;;810        else
;;;811        {
;;;812            do {
;;;813                i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
;;;814            } while ((u8Status&QSPI_WIP) == 1);
;;;815        }
;;;816    
;;;817        /* calculate number of 64KB sectors to be erased */
;;;818        u16EraseSectorCount = u32DataCount / SIZE_64KB;
;;;819        if (u32DataCount % SIZE_64KB != 0)
;;;820        {
;;;821          u16EraseSectorCount = u16EraseSectorCount + 1;
;;;822        }
;;;823    
;;;824        /* erase device */
;;;825        for (u16EraseIndex=0; u16EraseIndex<u16EraseSectorCount; u16EraseIndex++)
;;;826        {
;;;827            /* enable writing */
;;;828            i32QSPIC_PgrmWriteEnable(eController, eDevice);
;;;829            /* erase 64KB sector */
;;;830            i32QSPIC_PgrmSectErase(eController, eDevice, QSPIC_OPCODE_64KBS_ERASE, u32SpiPhysAddr + u16EraseIndex*SIZE_64KB);
;;;831    
;;;832            if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
;;;833            {
;;;834                i32QSPIC_PgrmGetRegister(eController, eDevice, 0x70, 1, &u8Information[0]);
;;;835            }
;;;836    
;;;837            /* display progress */
;;;838         	  printf("Erase sector: %d\n", u16EraseIndex);
;;;839    
;;;840            /* check status of flash */
;;;841            if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
;;;842            {
;;;843                do {
;;;844                    i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
;;;845                } while ((u8Status&QSPI_WE) == 0);
;;;846            }
;;;847            else
;;;848            {
;;;849                do {
;;;850                    i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
;;;851                } while ((u8Status&QSPI_WIP) == 1);
;;;852            }
;;;853        }
;;;854    
;;;855        /* calculate number of SIZE_256B blocks */
;;;856        u32ProgramCount = u32DataCount / SIZE_256B;
;;;857        if (u32DataCount % SIZE_256B != 0)
;;;858        {
;;;859        	u32ProgramCount = u32ProgramCount + 1;
;;;860        }
;;;861    
;;;862        /* program device */
;;;863        for (u32ProgramIndex=0; u32ProgramIndex<u32ProgramCount; u32ProgramIndex++)
;;;864        {
;;;865            /* enable writing */
;;;866            i32QSPIC_PgrmWriteEnable(eController, eDevice);
;;;867    
;;;868            /* calculate number of bytes to be written */
;;;869            if ((u32DataCount-u32ProgramIndex*SIZE_256B)>=SIZE_256B)
;;;870            {
;;;871                u16ByteCount = SIZE_256B;
;;;872            }
;;;873            else
;;;874            {
;;;875                u16ByteCount = u32DataCount - u32ProgramIndex*SIZE_256B;
;;;876            }
;;;877    
;;;878            /* write to flash */
;;;879            i32QSPIC_PgrmPagePgrm(eController, eDevice, u32SpiPhysAddr + u32ProgramIndex*SIZE_256B, u16ByteCount, (pu8Data+u32ProgramIndex*SIZE_256B));
;;;880    
;;;881            /* check status of flash */
;;;882            if ((eQSPI_DeviceHldd == DEV_N25Q512A_3BYTE_ADR) || (eQSPI_DeviceHldd == DEV_N25Q512A_4BYTE_ADR))
;;;883            {
;;;884                do {
;;;885                    i32QSPIC_PgrmStatusFlagRead(eController, eDevice, pu8Status);
;;;886                } while ((u8Status&QSPI_WE) == 0);
;;;887            }
;;;888            else
;;;889            {
;;;890                do {
;;;891                    i32QSPIC_PgrmStatusRead(eController, eDevice, pu8Status);
;;;892                } while ((u8Status&QSPI_WIP) == 1);
;;;893            }
;;;894        }
;;;895    
;;;896        i32Res = C_SUCCESS;
;;;897    
;;;898        return i32Res;
;;;899    }
000f0c  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.3856|
000f10  e59d001c          LDR      r0,[sp,#0x1c]         ;801
000f14  ebfffffe          BL       i32QSPIC_WaitForCompletion
000f18  e51f0068          LDR      r0,|L1.3768|
000f1c  e5d00000          LDRB     r0,[r0,#0]            ;804  ; eQSPI_DeviceHldd
000f20  e3500007          CMP      r0,#7                 ;804
000f24  0a000003          BEQ      |L1.3896|
000f28  e51f0078          LDR      r0,|L1.3768|
000f2c  e5d00000          LDRB     r0,[r0,#0]            ;804  ; eQSPI_DeviceHldd
000f30  e3500008          CMP      r0,#8                 ;804
000f34  1a000008          BNE      |L1.3932|
                  |L1.3896|
000f38  e320f000          NOP                            ;806
                  |L1.3900|
000f3c  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;807
000f40  e59d2014          LDR      r2,[sp,#0x14]         ;807
000f44  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
000f48  e5dd0010          LDRB     r0,[sp,#0x10]         ;808
000f4c  e2000080          AND      r0,r0,#0x80           ;808
000f50  e3500000          CMP      r0,#0                 ;808
000f54  0afffff8          BEQ      |L1.3900|
000f58  ea000007          B        |L1.3964|
                  |L1.3932|
000f5c  e320f000          NOP                            ;812
                  |L1.3936|
000f60  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;813
000f64  e59d2014          LDR      r2,[sp,#0x14]         ;813
000f68  ebfffffe          BL       i32QSPIC_PgrmStatusRead
000f6c  e5dd0010          LDRB     r0,[sp,#0x10]         ;814
000f70  e2000001          AND      r0,r0,#1              ;814
000f74  e3500000          CMP      r0,#0                 ;814
000f78  1afffff8          BNE      |L1.3936|
                  |L1.3964|
000f7c  e30f0fff          MOV      r0,#0xffff            ;818
000f80  e0009825          AND      r9,r0,r5,LSR #16      ;818
000f84  e6ff0075          UXTH     r0,r5                 ;819
000f88  e3500000          CMP      r0,#0                 ;819
000f8c  0a000001          BEQ      |L1.3992|
000f90  e2890001          ADD      r0,r9,#1              ;821
000f94  e6ff9070          UXTH     r9,r0                 ;821
                  |L1.3992|
000f98  e3a06000          MOV      r6,#0                 ;825
000f9c  ea000031          B        |L1.4200|
                  |L1.4000|
000fa0  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;828
000fa4  ebfffffe          BL       i32QSPIC_PgrmWriteEnable
000fa8  e0873806          ADD      r3,r7,r6,LSL #16      ;830
000fac  e3a020d8          MOV      r2,#0xd8              ;830
000fb0  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;830
000fb4  ebfffffe          BL       i32QSPIC_PgrmSectErase
000fb8  e51f0108          LDR      r0,|L1.3768|
000fbc  e5d00000          LDRB     r0,[r0,#0]            ;832  ; eQSPI_DeviceHldd
000fc0  e3500007          CMP      r0,#7                 ;832
000fc4  0a000003          BEQ      |L1.4056|
000fc8  e51f0118          LDR      r0,|L1.3768|
000fcc  e5d00000          LDRB     r0,[r0,#0]            ;832  ; eQSPI_DeviceHldd
000fd0  e3500008          CMP      r0,#8                 ;832
000fd4  1a000005          BNE      |L1.4080|
                  |L1.4056|
000fd8  e28d000c          ADD      r0,sp,#0xc            ;834
000fdc  e3a03001          MOV      r3,#1                 ;834
000fe0  e3a02070          MOV      r2,#0x70              ;834
000fe4  e58d0000          STR      r0,[sp,#0]            ;834
000fe8  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;834
000fec  ebfffffe          BL       i32QSPIC_PgrmGetRegister
                  |L1.4080|
000ff0  e1a01006          MOV      r1,r6                 ;838
000ff4  e24f0f4f          ADR      r0,|L1.3776|
000ff8  ebfffffe          BL       __2printf
000ffc  e51f014c          LDR      r0,|L1.3768|
001000  e5d00000          LDRB     r0,[r0,#0]            ;841  ; eQSPI_DeviceHldd
001004  e3500007          CMP      r0,#7                 ;841
001008  0a000003          BEQ      |L1.4124|
00100c  e51f015c          LDR      r0,|L1.3768|
001010  e5d00000          LDRB     r0,[r0,#0]            ;841  ; eQSPI_DeviceHldd
001014  e3500008          CMP      r0,#8                 ;841
001018  1a000008          BNE      |L1.4160|
                  |L1.4124|
00101c  e320f000          NOP                            ;843
                  |L1.4128|
001020  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;844
001024  e59d2014          LDR      r2,[sp,#0x14]         ;844
001028  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
00102c  e5dd0010          LDRB     r0,[sp,#0x10]         ;845
001030  e2000080          AND      r0,r0,#0x80           ;845
001034  e3500000          CMP      r0,#0                 ;845
001038  0afffff8          BEQ      |L1.4128|
00103c  ea000007          B        |L1.4192|
                  |L1.4160|
001040  e320f000          NOP                            ;849
                  |L1.4164|
001044  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;850
001048  e59d2014          LDR      r2,[sp,#0x14]         ;850
00104c  ebfffffe          BL       i32QSPIC_PgrmStatusRead
001050  e5dd0010          LDRB     r0,[sp,#0x10]         ;851
001054  e2000001          AND      r0,r0,#1              ;851
001058  e3500000          CMP      r0,#0                 ;851
00105c  1afffff8          BNE      |L1.4164|
                  |L1.4192|
001060  e2860001          ADD      r0,r6,#1              ;825
001064  e6ff6070          UXTH     r6,r0                 ;825
                  |L1.4200|
001068  e1560009          CMP      r6,r9                 ;825
00106c  baffffcb          BLT      |L1.4000|
001070  e1a0a425          LSR      r10,r5,#8             ;856
001074  e20500ff          AND      r0,r5,#0xff           ;857
001078  e3500000          CMP      r0,#0                 ;857
00107c  0a000000          BEQ      |L1.4228|
001080  e28aa001          ADD      r10,r10,#1            ;859
                  |L1.4228|
001084  e3a04000          MOV      r4,#0                 ;863
001088  ea00002a          B        |L1.4408|
                  |L1.4236|
00108c  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;866
001090  ebfffffe          BL       i32QSPIC_PgrmWriteEnable
001094  e0450404          SUB      r0,r5,r4,LSL #8       ;869
001098  e3500c01          CMP      r0,#0x100             ;869
00109c  3a000002          BCC      |L1.4268|
0010a0  e3000100          MOVW     r0,#0x100             ;871
0010a4  e58d0018          STR      r0,[sp,#0x18]         ;871
0010a8  ea000002          B        |L1.4280|
                  |L1.4268|
0010ac  e0450404          SUB      r0,r5,r4,LSL #8       ;875
0010b0  e6ff0070          UXTH     r0,r0                 ;875
0010b4  e58d0018          STR      r0,[sp,#0x18]         ;875
                  |L1.4280|
0010b8  e0880404          ADD      r0,r8,r4,LSL #8       ;879
0010bc  e0872404          ADD      r2,r7,r4,LSL #8       ;879
0010c0  e58d0000          STR      r0,[sp,#0]            ;879
0010c4  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;879
0010c8  e59d3018          LDR      r3,[sp,#0x18]         ;879
0010cc  ebfffffe          BL       i32QSPIC_PgrmPagePgrm
0010d0  e51f0220          LDR      r0,|L1.3768|
0010d4  e5d00000          LDRB     r0,[r0,#0]            ;882  ; eQSPI_DeviceHldd
0010d8  e3500007          CMP      r0,#7                 ;882
0010dc  0a000003          BEQ      |L1.4336|
0010e0  e51f0230          LDR      r0,|L1.3768|
0010e4  e5d00000          LDRB     r0,[r0,#0]            ;882  ; eQSPI_DeviceHldd
0010e8  e3500008          CMP      r0,#8                 ;882
0010ec  1a000008          BNE      |L1.4372|
                  |L1.4336|
0010f0  e320f000          NOP                            ;884
                  |L1.4340|
0010f4  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;885
0010f8  e59d2014          LDR      r2,[sp,#0x14]         ;885
0010fc  ebfffffe          BL       i32QSPIC_PgrmStatusFlagRead
001100  e5dd0010          LDRB     r0,[sp,#0x10]         ;886
001104  e2000080          AND      r0,r0,#0x80           ;886
001108  e3500000          CMP      r0,#0                 ;886
00110c  0afffff8          BEQ      |L1.4340|
001110  ea000007          B        |L1.4404|
                  |L1.4372|
001114  e320f000          NOP                            ;890
                  |L1.4376|
001118  e1cd01dc          LDRD     r0,r1,[sp,#0x1c]      ;891
00111c  e59d2014          LDR      r2,[sp,#0x14]         ;891
001120  ebfffffe          BL       i32QSPIC_PgrmStatusRead
001124  e5dd0010          LDRB     r0,[sp,#0x10]         ;892
001128  e2000001          AND      r0,r0,#1              ;892
00112c  e3500000          CMP      r0,#0                 ;892
001130  1afffff8          BNE      |L1.4376|
                  |L1.4404|
001134  e2844001          ADD      r4,r4,#1              ;863
                  |L1.4408|
001138  e154000a          CMP      r4,r10                ;863
00113c  3affffd2          BCC      |L1.4236|
001140  e3a00000          MOV      r0,#0                 ;896
001144  e58d0008          STR      r0,[sp,#8]            ;896
001148  e59d0008          LDR      r0,[sp,#8]            ;898
00114c  eaffff6d          B        |L1.3848|
;;;900    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  eQSPI_DeviceHldd
000000  15                DCB      0x15
