


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ;*   This software is copyright protected. All rights re
                       served
    3 00000000         ;*   Toshiba Electronics Europe GmbH
    4 00000000         ;*   European LSI Design and Engineering Center (ELDEC)
    5 00000000         ;*******************************************************
                       ***********************
    6 00000000         ;*   DESCRIPTION : SRAM boot-up code sequence
    7 00000000         ;*******************************************************
                       ***********************
    8 00000000         ;*   PLATFORM    : TMPR46xXBG-300
    9 00000000         ;*   PROJECT     :
   10 00000000         ;*   MODULE      : System
   11 00000000         ;*   LIBRARIES   : None
   12 00000000         ;;******************************************************
                       ************************
   13 00000000         ;*   VERSION     : $Revision: 1.5 $
   14 00000000         ;*   DATE        : $Date: 2015/05/04 09:07:18 $
   15 00000000         ;*   TAG         : $Name:  $
   16 00000000         ;*   RELEASE     : Preliminary & Confidential
   17 00000000         ;*******************************************************
                       ***********************
   18 00000000         
   19 00000000         ;;*********************************************
   20 00000000         ;*                  Symbols                   *
   21 00000000         ;**********************************************
   22 00000000         
   23 00000000                 IMPORT           |Load$$APP$$RO$$Base|       [WE
AK]
   24 00000000                 IMPORT           |Image$$APP$$RO$$Base|      [WE
AK]
   25 00000000                 IMPORT           |Image$$APP$$RO$$Limit|     [WE
AK]
   26 00000000         
   27 00000000                 IMPORT           |Load$$APP$$RW$$Base|       [WE
AK]
   28 00000000                 IMPORT           |Image$$APP$$RW$$Base|      [WE
AK]
   29 00000000                 IMPORT           |Image$$APP$$RW$$Limit|     [WE
AK]
   30 00000000         
   31 00000000                 IMPORT           |Image$$V_RAM$$ZI$$Base|    [WE
AK]
   32 00000000                 IMPORT           |Image$$V_RAM$$ZI$$Limit|   [WE
AK]
   33 00000000         
   34 00000000         ;/*********************************************/
   35 00000000         
   36 00000000                 EXPORT           vASM_Copy_all_areas
   37 00000000                 EXPORT           vASM_Init_zi
   38 00000000         
   39 00000000         ;-----------------------------------------------
   40 00000000         ;   Initializes all regions
   41 00000000         ;-----------------------------------------------
   42 00000000         
   43 00000000                 AREA             init, CODE, READONLY, ALIGN=8
   44 00000000         
   45 00000000         vASM_Copy_all_areas



ARM Macro Assembler    Page 2 


   46 00000000 E92D401E        STMFD            SP!,{r1-r4,lr} ; save return ad
                                                            dress to stack
   47 00000004         
   48 00000004         ; copy exeption table
   49 00000004 E59F1078        LDR              r1, =0x02020000 ; Load ROM star
                                                            t address
   50 00000008 E3A00000        LDR              r0, =0x00000000 ; Load RAM star
                                                            t address
   51 0000000C E3A02040        LDR              r2, =0x00000040 ; Load RAM end 
                                                            address      
   52 00000010 EB00000D        BL               data_copy   ; copy data
   53 00000014         
   54 00000014         ; copy text
   55 00000014 E59F106C        LDR              r1, =|Load$$APP$$RO$$Base| ; Lo
                                                            ad ROM start addres
                                                            s
   56 00000018 E59F006C        LDR              r0, =|Image$$APP$$RO$$Base| ; L
                                                            oad RAM start addre
                                                            ss
   57 0000001C E59F206C        LDR              r2, =|Image$$APP$$RO$$Limit| ; 
                                                            Load RAM end addres
                                                            s      
   58 00000020 EB000009        BL               data_copy   ; copy data
   59 00000024         
   60 00000024         ; copy data
   61 00000024 E59F1068        LDR              r1, =|Load$$APP$$RW$$Base| ; Lo
                                                            ad ROM start addres
                                                            s
   62 00000028 E59F0068        LDR              r0, =|Image$$APP$$RW$$Base| ; L
                                                            oad RAM start addre
                                                            ss
   63 0000002C E59F2068        LDR              r2, =|Image$$APP$$RW$$Limit| ; 
                                                            Load RAM end addres
                                                            s
   64 00000030 EB000005        BL               data_copy   ; copy data
   65 00000034         
   66 00000034 E8BD801E        LDMFD            SP!,{r1-r4,pc} ; return
   67 00000038         
   68 00000038         
   69 00000038         vASM_Init_zi
   70 00000038 E92D401E        STMFD            SP!,{r1-r4,lr} ; save return ad
                                                            dress to stack
   71 0000003C         
   72 0000003C         ; init bss
   73 0000003C E59F005C        LDR              r0, =|Image$$V_RAM$$ZI$$Base| ;
                                                             Load RAM start add
                                                            ress
   74 00000040 E59F205C        LDR              r2, =|Image$$V_RAM$$ZI$$Limit| 
                                                            ; Load RAM end addr
                                                            ess
   75 00000044 EB000007        BL               zi_init     ; init section
   76 00000048         
   77 00000048 E8BD801E        LDMFD            SP!,{r1-r4,pc} ; return
   78 0000004C         
   79 0000004C         ;-------------------------------------------
   80 0000004C         
   81 0000004C         ;=======================================================
                       ===
   82 0000004C         ;=================== COPY/INIT ROUTINES ================



ARM Macro Assembler    Page 3 


                       ===
   83 0000004C         ;=======================================================
                       ===
   84 0000004C         
   85 0000004C         ; ----- Data-copy Routine -----
   86 0000004C         ;| r0- RAM base (dst.) addr.  |
   87 0000004C         ;| r1- ROM base (src.) addr.  |
   88 0000004C         ;| r2- RAM end (dest.) addr.  |
   89 0000004C         ; -----------------------------
   90 0000004C         data_copy
   91 0000004C E92D401E        STMFD            SP!,{r1-r4,lr} ; save return ad
                                                            dress to stack
   92 00000050 EA000001        B                copy_1_cmp  ; jump to compare
   93 00000054         copy_1
   94 00000054 E4913004        LDR              r3,[r1],#4  ; load temp with da
                                                            ta, increment addre
                                                            ss
   95 00000058 E4803004        STR              r3,[r0],#4  ; store data, incre
                                                            ment address
   96 0000005C         copy_1_cmp
   97 0000005C E1500002        CMP              r0, r2      ; check end address
                                                            
   98 00000060 BAFFFFFB        BLT              copy_1      ; ... copy more
   99 00000064 E8BD801E        LDMFD            SP!,{r1-r4,pc} ; return
  100 00000068         
  101 00000068         ; ----- Zero-Init Routine -----
  102 00000068         ;| r0- ZI base addr.           |
  103 00000068         ;| r2- ZI limit addr.          |
  104 00000068         ; -----------------------------
  105 00000068         zi_init
  106 00000068 E92D401E        STMFD            SP!,{r1-r4,lr} ; save return ad
                                                            dress to stack
  107 0000006C E3A03000        LDR              r3, =0x00000000 ; load temp wit
                                                            h data, increment a
                                                            ddress
  108 00000070 EA000000        B                zi_init_1_cmp ; jump to compare
                                                            
  109 00000074         zi_init_1
  110 00000074 E4803004        STR              r3,[r0],#4  ; store data, incre
                                                            ment address
  111 00000078         zi_init_1_cmp
  112 00000078 E1500002        CMP              r0, r2      ; check end address
                                                            
  113 0000007C BAFFFFFC        BLT              zi_init_1   ; ... init more
  114 00000080 E8BD801E        LDMFD            SP!,{r1-r4,pc} ; return
  115 00000084         
  116 00000084         ;*******************************************************
                       **********************
  117 00000084         
  118 00000084                 END
              02020000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 4 


Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-R4 --apcs=interw
ork --depend=..\out\rom_copy_keil.d -o..\out\rom_copy_keil.o -I..\..\..\..\cort
ex_r4_keil\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include --prede
fine="__UVISION_VERSION SETA 516" --list=..\out\rom_copy_keil.lst ..\..\..\..\c
ortex_r4_keil\src\rom_copy_keil.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

copy_1 00000054

Symbol: copy_1
   Definitions
      At line 93 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 98 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: copy_1 used once
copy_1_cmp 0000005C

Symbol: copy_1_cmp
   Definitions
      At line 96 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 92 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: copy_1_cmp used once
data_copy 0000004C

Symbol: data_copy
   Definitions
      At line 90 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 52 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
      At line 58 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
      At line 64 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s

init 00000000

Symbol: init
   Definitions
      At line 43 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      None
Comment: init unused
vASM_Copy_all_areas 00000000

Symbol: vASM_Copy_all_areas
   Definitions
      At line 45 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 36 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: vASM_Copy_all_areas used once
vASM_Init_zi 00000038

Symbol: vASM_Init_zi
   Definitions
      At line 69 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 37 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: vASM_Init_zi used once
zi_init 00000068

Symbol: zi_init
   Definitions
      At line 105 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 75 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: zi_init used once
zi_init_1 00000074



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: zi_init_1
   Definitions
      At line 109 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 113 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: zi_init_1 used once
zi_init_1_cmp 00000078

Symbol: zi_init_1_cmp
   Definitions
      At line 111 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 108 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: zi_init_1_cmp used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Image$$APP$$RO$$Base 00000000

Symbol: Image$$APP$$RO$$Base
   Definitions
      At line 24 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 56 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Image$$APP$$RO$$Base used once
Image$$APP$$RO$$Limit 00000000

Symbol: Image$$APP$$RO$$Limit
   Definitions
      At line 25 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 57 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Image$$APP$$RO$$Limit used once
Image$$APP$$RW$$Base 00000000

Symbol: Image$$APP$$RW$$Base
   Definitions
      At line 28 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 62 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Image$$APP$$RW$$Base used once
Image$$APP$$RW$$Limit 00000000

Symbol: Image$$APP$$RW$$Limit
   Definitions
      At line 29 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 63 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Image$$APP$$RW$$Limit used once
Image$$V_RAM$$ZI$$Base 00000000

Symbol: Image$$V_RAM$$ZI$$Base
   Definitions
      At line 31 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 73 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Image$$V_RAM$$ZI$$Base used once
Image$$V_RAM$$ZI$$Limit 00000000

Symbol: Image$$V_RAM$$ZI$$Limit
   Definitions
      At line 32 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 74 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Image$$V_RAM$$ZI$$Limit used once
Load$$APP$$RO$$Base 00000000

Symbol: Load$$APP$$RO$$Base
   Definitions
      At line 23 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 55 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Load$$APP$$RO$$Base used once
Load$$APP$$RW$$Base 00000000

Symbol: Load$$APP$$RW$$Base



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 27 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
   Uses
      At line 61 in file ..\..\..\..\cortex_r4_keil\src\rom_copy_keil.s
Comment: Load$$APP$$RW$$Base used once
8 symbols
350 symbols in table
