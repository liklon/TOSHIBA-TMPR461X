; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\out\timer_cmplx.o --asm_dir=..\out\ --list_dir=..\out\ --depend=..\out\timer_cmplx.d --cpu=Cortex-R4 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\inc -I..\..\usecases\inc -I..\..\..\..\common\inc -I..\..\..\..\cortex_r4_keil\inc -I..\..\..\..\freetype\inc -I..\..\..\..\hldd\inc -I..\..\..\..\lldd\inc -I..\..\..\..\lldd\hdr -I..\..\..\..\mw\inc -I..\..\usecases\images\inc -I..\..\..\..\cortex_r4\inc -I..\..\src -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=516 -D__KEIL__ -DMEASURE_TX --omf_browse=..\out\timer_cmplx.crf ..\..\..\..\lldd\src\timer_cmplx.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  vTIMER_CMPLX_GetVersion PROC
;;;52     
;;;53     void vTIMER_CMPLX_GetVersion(uint8_t** pau8ModuleRevision, uint8_t** pau8ModuleTag,
000000  e92d4070          PUSH     {r4-r6,lr}
;;;54                                  uint8_t** pau8HeaderRevision, uint8_t** pau8HeaderTag,
;;;55                                  uint8_t** pau8IORevision, uint8_t** pau8IOTag)
;;;56     {
000004  e1cd41d0          LDRD     r4,r5,[sp,#0x10]
;;;57        *pau8ModuleRevision = &au8LLDD_TIMER_CMPLX_C_REVISION[0];
000008  e59f64ac          LDR      r6,|L1.1212|
00000c  e5806000          STR      r6,[r0,#0]
;;;58        *pau8ModuleTag      = &au8LLDD_TIMER_CMPLX_C_TAG[0];
000010  e59f64a8          LDR      r6,|L1.1216|
000014  e5816000          STR      r6,[r1,#0]
;;;59        *pau8HeaderRevision = &au8LLDD_TIMER_CMPLX_H_REVISION[0];
000018  e59f64a4          LDR      r6,|L1.1220|
00001c  e5826000          STR      r6,[r2,#0]
;;;60        *pau8HeaderTag      = &au8LLDD_TIMER_CMPLX_H_TAG[0];
000020  e59f64a0          LDR      r6,|L1.1224|
000024  e5836000          STR      r6,[r3,#0]
;;;61        *pau8IORevision     = &au8LLDD_TIMER_CMPLX_IO_H_REVISION[0];
000028  e59f649c          LDR      r6,|L1.1228|
00002c  e5846000          STR      r6,[r4,#0]
;;;62        *pau8IOTag          = &au8LLDD_TIMER_CMPLX_IO_H_TAG[0];
000030  e59f6498          LDR      r6,|L1.1232|
000034  e5856000          STR      r6,[r5,#0]
;;;63     }
000038  e8bd8070          POP      {r4-r6,pc}
;;;64     
                          ENDP

                  vTIMER_CMPLX_Config PROC
;;;67     
;;;68     void vTIMER_CMPLX_Config(timer_cmplx_ch_e eCh, timer_cmplx_genCfg_st stCfg)
00003c  e92d4007          PUSH     {r0-r2,lr}
;;;69     {
;;;70         vSetTBMOD_CLK(eCh, stCfg.eClkSource);
000040  e5dd2009          LDRB     r2,[sp,#9]
000044  e24015ff          SUB      r1,r0,#0x3fc00000
000048  e2411939          SUB      r1,r1,#0xe4000
00004c  e1d110b4          LDRH     r1,[r1,#4]
000050  e7c21012          BFI      r1,r2,#0,#3
000054  e24025ff          SUB      r2,r0,#0x3fc00000
000058  e2422939          SUB      r2,r2,#0xe4000
00005c  e1c210b4          STRH     r1,[r2,#4]
;;;71         vSetTBMOD_CLE(eCh, stCfg.eCountCtrl);
000060  e5dd200a          LDRB     r2,[sp,#0xa]
000064  e24015ff          SUB      r1,r0,#0x3fc00000
000068  e2411939          SUB      r1,r1,#0xe4000
00006c  e1d110b4          LDRH     r1,[r1,#4]
000070  e7c31192          BFI      r1,r2,#3,#1
000074  e24025ff          SUB      r2,r0,#0x3fc00000
000078  e2422939          SUB      r2,r2,#0xe4000
00007c  e1c210b4          STRH     r1,[r2,#4]
;;;72         vSetTBRUN_DBE(eCh, stCfg.eDblBuffEn);
000080  e5dd2004          LDRB     r2,[sp,#4]
000084  e24015ff          SUB      r1,r0,#0x3fc00000
000088  e2411939          SUB      r1,r1,#0xe4000
00008c  e5d11000          LDRB     r1,[r1,#0]
000090  e7c71392          BFI      r1,r2,#7,#1
000094  e24025ff          SUB      r2,r0,#0x3fc00000
000098  e2422939          SUB      r2,r2,#0xe4000
00009c  e5c21000          STRB     r1,[r2,#0]
;;;73         vSetTBRUN_SYNC(eCh, stCfg.eSyncRstEn);
0000a0  e5dd2005          LDRB     r2,[sp,#5]
0000a4  e24015ff          SUB      r1,r0,#0x3fc00000
0000a8  e2411939          SUB      r1,r1,#0xe4000
0000ac  e5d11000          LDRB     r1,[r1,#0]
0000b0  e7c61312          BFI      r1,r2,#6,#1
0000b4  e24025ff          SUB      r2,r0,#0x3fc00000
0000b8  e2422939          SUB      r2,r2,#0xe4000
0000bc  e5c21000          STRB     r1,[r2,#0]
;;;74         vSetTBRUN_IDL(eCh, stCfg.eIdle);
0000c0  e5dd2006          LDRB     r2,[sp,#6]
0000c4  e24015ff          SUB      r1,r0,#0x3fc00000
0000c8  e2411939          SUB      r1,r1,#0xe4000
0000cc  e5d11000          LDRB     r1,[r1,#0]
0000d0  e7c31192          BFI      r1,r2,#3,#1
0000d4  e24025ff          SUB      r2,r0,#0x3fc00000
0000d8  e2422939          SUB      r2,r2,#0xe4000
0000dc  e5c21000          STRB     r1,[r2,#0]
;;;75         vSetTBRUN_PRUN(eCh, stCfg.ePresclStart);
0000e0  e5dd2007          LDRB     r2,[sp,#7]
0000e4  e24015ff          SUB      r1,r0,#0x3fc00000
0000e8  e2411939          SUB      r1,r1,#0xe4000
0000ec  e5d11000          LDRB     r1,[r1,#0]
0000f0  e7c21112          BFI      r1,r2,#2,#1
0000f4  e24025ff          SUB      r2,r0,#0x3fc00000
0000f8  e2422939          SUB      r2,r2,#0xe4000
0000fc  e5c21000          STRB     r1,[r2,#0]
;;;76         vSetTBRUN_OFI(eCh, stCfg.eOvrflwIrqEn);
000100  e5dd2008          LDRB     r2,[sp,#8]
000104  e24015ff          SUB      r1,r0,#0x3fc00000
000108  e2411939          SUB      r1,r1,#0xe4000
00010c  e5d11000          LDRB     r1,[r1,#0]
000110  e7c11092          BFI      r1,r2,#1,#1
000114  e24025ff          SUB      r2,r0,#0x3fc00000
000118  e2422939          SUB      r2,r2,#0xe4000
00011c  e5c21000          STRB     r1,[r2,#0]
;;;77         vSetTBRUN_TRUN(eCh, stCfg.eTimerStart);
000120  e5dd200b          LDRB     r2,[sp,#0xb]
000124  e24015ff          SUB      r1,r0,#0x3fc00000
000128  e2411939          SUB      r1,r1,#0xe4000
00012c  e5d11000          LDRB     r1,[r1,#0]
000130  e7c01012          BFI      r1,r2,#0,#1
000134  e24025ff          SUB      r2,r0,#0x3fc00000
000138  e2422939          SUB      r2,r2,#0xe4000
00013c  e5c21000          STRB     r1,[r2,#0]
;;;78     }
000140  e8bd800e          POP      {r1-r3,pc}
;;;79     
                          ENDP

                  vTIMER_CMPLX_SetCountCtrl PROC
;;;82     
;;;83     void vTIMER_CMPLX_SetCountCtrl(timer_cmplx_ch_e eCh, timer_cmplx_cle_e eCountCtrl)
000144  e24025ff          SUB      r2,r0,#0x3fc00000
;;;84     {
;;;85         vSetTBMOD_CLE(eCh, eCountCtrl);
000148  e2422939          SUB      r2,r2,#0xe4000
00014c  e1d220b4          LDRH     r2,[r2,#4]
000150  e7c32191          BFI      r2,r1,#3,#1
000154  e24035ff          SUB      r3,r0,#0x3fc00000
000158  e2433939          SUB      r3,r3,#0xe4000
00015c  e1c320b4          STRH     r2,[r3,#4]
;;;86     }
000160  e12fff1e          BX       lr
;;;87     
                          ENDP

                  vTIMER_CMPLX_SetCaptureTiming PROC
;;;90     
;;;91     void vTIMER_CMPLX_SetCaptureTiming(timer_cmplx_ch_e eCh, timer_cmplx_cpm_e eCapTiming)
000164  e24025ff          SUB      r2,r0,#0x3fc00000
;;;92     {
;;;93         vSetTBMOD_CPM(eCh, eCapTiming);
000168  e2422939          SUB      r2,r2,#0xe4000
00016c  e1d220b4          LDRH     r2,[r2,#4]
000170  e7c52211          BFI      r2,r1,#4,#2
000174  e24035ff          SUB      r3,r0,#0x3fc00000
000178  e2433939          SUB      r3,r3,#0xe4000
00017c  e1c320b4          STRH     r2,[r3,#4]
;;;94     }
000180  e12fff1e          BX       lr
;;;95     
                          ENDP

                  vTIMER_CMPLX_FlipFlopConfig PROC
;;;98     
;;;99     void vTIMER_CMPLX_FlipFlopConfig(timer_cmplx_ch_e eCh, timer_cmplx_ffCfg_st stFfCfg)
000184  e92d4007          PUSH     {r0-r2,lr}
;;;100    {
;;;101        vSetTBFF_INVL1(eCh, stFfCfg.eInvl1);
000188  e5dd2004          LDRB     r2,[sp,#4]
00018c  e24015ff          SUB      r1,r0,#0x3fc00000
000190  e2411939          SUB      r1,r1,#0xe4000
000194  e5d11008          LDRB     r1,[r1,#8]
000198  e7c51292          BFI      r1,r2,#5,#1
00019c  e24025ff          SUB      r2,r0,#0x3fc00000
0001a0  e2422939          SUB      r2,r2,#0xe4000
0001a4  e5c21008          STRB     r1,[r2,#8]
;;;102        vSetTBFF_INVL0(eCh, stFfCfg.eInvl0);
0001a8  e5dd2005          LDRB     r2,[sp,#5]
0001ac  e24015ff          SUB      r1,r0,#0x3fc00000
0001b0  e2411939          SUB      r1,r1,#0xe4000
0001b4  e5d11008          LDRB     r1,[r1,#8]
0001b8  e7c41212          BFI      r1,r2,#4,#1
0001bc  e24025ff          SUB      r2,r0,#0x3fc00000
0001c0  e2422939          SUB      r2,r2,#0xe4000
0001c4  e5c21008          STRB     r1,[r2,#8]
;;;103        vSetTBFF_INVC1(eCh, stFfCfg.eInvc1);
0001c8  e5dd2006          LDRB     r2,[sp,#6]
0001cc  e24015ff          SUB      r1,r0,#0x3fc00000
0001d0  e2411939          SUB      r1,r1,#0xe4000
0001d4  e5d11008          LDRB     r1,[r1,#8]
0001d8  e7c31192          BFI      r1,r2,#3,#1
0001dc  e24025ff          SUB      r2,r0,#0x3fc00000
0001e0  e2422939          SUB      r2,r2,#0xe4000
0001e4  e5c21008          STRB     r1,[r2,#8]
;;;104        vSetTBFF_INVC0(eCh, stFfCfg.eInvc0);
0001e8  e5dd2007          LDRB     r2,[sp,#7]
0001ec  e24015ff          SUB      r1,r0,#0x3fc00000
0001f0  e2411939          SUB      r1,r1,#0xe4000
0001f4  e5d11008          LDRB     r1,[r1,#8]
0001f8  e7c21112          BFI      r1,r2,#2,#1
0001fc  e24025ff          SUB      r2,r0,#0x3fc00000
000200  e2422939          SUB      r2,r2,#0xe4000
000204  e5c21008          STRB     r1,[r2,#8]
;;;105        vSetTBFF_MOD(eCh, stFfCfg.eFfMode);
000208  e5dd2008          LDRB     r2,[sp,#8]
00020c  e24015ff          SUB      r1,r0,#0x3fc00000
000210  e2411939          SUB      r1,r1,#0xe4000
000214  e5d11008          LDRB     r1,[r1,#8]
000218  e7c11012          BFI      r1,r2,#0,#2
00021c  e24025ff          SUB      r2,r0,#0x3fc00000
000220  e2422939          SUB      r2,r2,#0xe4000
000224  e5c21008          STRB     r1,[r2,#8]
;;;106    }
000228  e8bd800e          POP      {r1-r3,pc}
;;;107    
                          ENDP

                  vTIMER_CMPLX_SetStateIdle PROC
;;;110    
;;;111    void vTIMER_CMPLX_SetStateIdle(timer_cmplx_ch_e eCh)
00022c  e24015ff          SUB      r1,r0,#0x3fc00000
;;;112    {
;;;113        vSetTBRUN_IDL(eCh, TIMER_CMPLX_IDLE);
000230  e2411939          SUB      r1,r1,#0xe4000
000234  e5d11000          LDRB     r1,[r1,#0]
000238  e3c11008          BIC      r1,r1,#8
00023c  e24025ff          SUB      r2,r0,#0x3fc00000
000240  e2422939          SUB      r2,r2,#0xe4000
000244  e5c21000          STRB     r1,[r2,#0]
;;;114    }
000248  e12fff1e          BX       lr
;;;115    
                          ENDP

                  vTIMER_CMPLX_SetStateNormal PROC
;;;118    
;;;119    void vTIMER_CMPLX_SetStateNormal(timer_cmplx_ch_e eCh)
00024c  e24015ff          SUB      r1,r0,#0x3fc00000
;;;120    {
;;;121        vSetTBRUN_IDL(eCh, TIMER_CMPLX_NORMAL);
000250  e2411939          SUB      r1,r1,#0xe4000
000254  e5d11000          LDRB     r1,[r1,#0]
000258  e3c11008          BIC      r1,r1,#8
00025c  e2811008          ADD      r1,r1,#8
000260  e24025ff          SUB      r2,r0,#0x3fc00000
000264  e2422939          SUB      r2,r2,#0xe4000
000268  e5c21000          STRB     r1,[r2,#0]
;;;122    }
00026c  e12fff1e          BX       lr
;;;123    
                          ENDP

                  vTIMER_CMPLX_Start PROC
;;;126    
;;;127    void vTIMER_CMPLX_Start(timer_cmplx_ch_e eCh)
000270  e24015ff          SUB      r1,r0,#0x3fc00000
;;;128    {
;;;129        vSetTBRUN_TRUN(eCh, TIMER_CMPLX_START);
000274  e2411939          SUB      r1,r1,#0xe4000
000278  e5d11000          LDRB     r1,[r1,#0]
00027c  e3c11001          BIC      r1,r1,#1
000280  e2811001          ADD      r1,r1,#1
000284  e24025ff          SUB      r2,r0,#0x3fc00000
000288  e2422939          SUB      r2,r2,#0xe4000
00028c  e5c21000          STRB     r1,[r2,#0]
;;;130    }
000290  e12fff1e          BX       lr
;;;131    
                          ENDP

                  vTIMER_CMPLX_Stop PROC
;;;134    
;;;135    void vTIMER_CMPLX_Stop(timer_cmplx_ch_e eCh)
000294  e24015ff          SUB      r1,r0,#0x3fc00000
;;;136    {
;;;137        vSetTBRUN_TRUN(eCh, TIMER_CMPLX_STOP);
000298  e2411939          SUB      r1,r1,#0xe4000
00029c  e5d11000          LDRB     r1,[r1,#0]
0002a0  e3c11001          BIC      r1,r1,#1
0002a4  e24025ff          SUB      r2,r0,#0x3fc00000
0002a8  e2422939          SUB      r2,r2,#0xe4000
0002ac  e5c21000          STRB     r1,[r2,#0]
;;;138    }
0002b0  e12fff1e          BX       lr
;;;139    
                          ENDP

                  vTIMER_CMPLX_SetOvflowIrqEnable PROC
;;;142    
;;;143    void vTIMER_CMPLX_SetOvflowIrqEnable(timer_cmplx_ch_e eCh, timer_cmplx_en_e eIrqEn)
0002b4  e24025ff          SUB      r2,r0,#0x3fc00000
;;;144    {
;;;145        vSetTBRUN_OFI(eCh, eIrqEn);
0002b8  e2422939          SUB      r2,r2,#0xe4000
0002bc  e5d22000          LDRB     r2,[r2,#0]
0002c0  e7c12091          BFI      r2,r1,#1,#1
0002c4  e24035ff          SUB      r3,r0,#0x3fc00000
0002c8  e2433939          SUB      r3,r3,#0xe4000
0002cc  e5c32000          STRB     r2,[r3,#0]
;;;146    }
0002d0  e12fff1e          BX       lr
;;;147    
                          ENDP

                  vTIMER_CMPLX_SetSyncRstEnable PROC
;;;150    
;;;151    void vTIMER_CMPLX_SetSyncRstEnable(timer_cmplx_ch_e eCh, timer_cmplx_en_e eSyncRstEn)
0002d4  e24025ff          SUB      r2,r0,#0x3fc00000
;;;152    {
;;;153        vSetTBRUN_SYNC(eCh, eSyncRstEn);
0002d8  e2422939          SUB      r2,r2,#0xe4000
0002dc  e5d22000          LDRB     r2,[r2,#0]
0002e0  e7c62311          BFI      r2,r1,#6,#1
0002e4  e24035ff          SUB      r3,r0,#0x3fc00000
0002e8  e2433939          SUB      r3,r3,#0xe4000
0002ec  e5c32000          STRB     r2,[r3,#0]
;;;154    }
0002f0  e12fff1e          BX       lr
;;;155    
                          ENDP

                  vTIMER_CMPLX_StartPrescaler PROC
;;;158    
;;;159    void vTIMER_CMPLX_StartPrescaler(timer_cmplx_ch_e eCh)
0002f4  e24015ff          SUB      r1,r0,#0x3fc00000
;;;160    {
;;;161        vSetTBRUN_PRUN(eCh, TIMER_CMPLX_START);
0002f8  e2411939          SUB      r1,r1,#0xe4000
0002fc  e5d11000          LDRB     r1,[r1,#0]
000300  e3c11004          BIC      r1,r1,#4
000304  e2811004          ADD      r1,r1,#4
000308  e24025ff          SUB      r2,r0,#0x3fc00000
00030c  e2422939          SUB      r2,r2,#0xe4000
000310  e5c21000          STRB     r1,[r2,#0]
;;;162    }
000314  e12fff1e          BX       lr
;;;163    
                          ENDP

                  vTIMER_CMPLX_StopPrescaler PROC
;;;166    
;;;167    void vTIMER_CMPLX_StopPrescaler(timer_cmplx_ch_e eCh)
000318  e24015ff          SUB      r1,r0,#0x3fc00000
;;;168    {
;;;169        vSetTBRUN_PRUN(eCh, TIMER_CMPLX_STOP);
00031c  e2411939          SUB      r1,r1,#0xe4000
000320  e5d11000          LDRB     r1,[r1,#0]
000324  e3c11004          BIC      r1,r1,#4
000328  e24025ff          SUB      r2,r0,#0x3fc00000
00032c  e2422939          SUB      r2,r2,#0xe4000
000330  e5c21000          STRB     r1,[r2,#0]
;;;170    }
000334  e12fff1e          BX       lr
;;;171    
                          ENDP

                  vTIMER_CMPLX_SetDblBuffEnable PROC
;;;174    
;;;175    void vTIMER_CMPLX_SetDblBuffEnable(timer_cmplx_ch_e eCh, timer_cmplx_en_e eBuffEn)
000338  e24025ff          SUB      r2,r0,#0x3fc00000
;;;176    {
;;;177        vSetTBRUN_DBE(eCh, eBuffEn);
00033c  e2422939          SUB      r2,r2,#0xe4000
000340  e5d22000          LDRB     r2,[r2,#0]
000344  e7c72391          BFI      r2,r1,#7,#1
000348  e24035ff          SUB      r3,r0,#0x3fc00000
00034c  e2433939          SUB      r3,r3,#0xe4000
000350  e5c32000          STRB     r2,[r3,#0]
;;;178    }
000354  e12fff1e          BX       lr
;;;179    
                          ENDP

                  vTIMER_CMPLX_LatchCounter PROC
;;;182    
;;;183    void vTIMER_CMPLX_LatchCounter(timer_cmplx_ch_e eCh)
000358  e24015ff          SUB      r1,r0,#0x3fc00000
;;;184    {
;;;185        vSetTBMOD_CP0(eCh, TIMER_CMPLX_LATCH);
00035c  e2411939          SUB      r1,r1,#0xe4000
000360  e1d110b4          LDRH     r1,[r1,#4]
000364  e3c11c01          BIC      r1,r1,#0x100
000368  e24025ff          SUB      r2,r0,#0x3fc00000
00036c  e2422939          SUB      r2,r2,#0xe4000
000370  e1c210b4          STRH     r1,[r2,#4]
;;;186        vSetTBMOD_CP0(eCh, TIMER_CMPLX_NO_LATCH);
000374  e24015ff          SUB      r1,r0,#0x3fc00000
000378  e2411939          SUB      r1,r1,#0xe4000
00037c  e1d110b4          LDRH     r1,[r1,#4]
000380  e3c11c01          BIC      r1,r1,#0x100
000384  e2811c01          ADD      r1,r1,#0x100
000388  e24025ff          SUB      r2,r0,#0x3fc00000
00038c  e2422939          SUB      r2,r2,#0xe4000
000390  e1c210b4          STRH     r1,[r2,#4]
;;;187    }
000394  e12fff1e          BX       lr
;;;188    
                          ENDP

                  vTIMER_CMPLX_SetFfInvl1 PROC
;;;191    
;;;192    void vTIMER_CMPLX_SetFfInvl1(timer_cmplx_ch_e eCh, timer_cmplx_ffinv_e eInvert)
000398  e24025ff          SUB      r2,r0,#0x3fc00000
;;;193    {
;;;194        vSetTBFF_INVL1(eCh, eInvert);
00039c  e2422939          SUB      r2,r2,#0xe4000
0003a0  e5d22008          LDRB     r2,[r2,#8]
0003a4  e7c52291          BFI      r2,r1,#5,#1
0003a8  e24035ff          SUB      r3,r0,#0x3fc00000
0003ac  e2433939          SUB      r3,r3,#0xe4000
0003b0  e5c32008          STRB     r2,[r3,#8]
;;;195    }
0003b4  e12fff1e          BX       lr
;;;196    
                          ENDP

                  vTIMER_CMPLX_SetFfInvl0 PROC
;;;199    
;;;200    void vTIMER_CMPLX_SetFfInvl0(timer_cmplx_ch_e eCh, timer_cmplx_ffinv_e eInvert)
0003b8  e24025ff          SUB      r2,r0,#0x3fc00000
;;;201    {
;;;202        vSetTBFF_INVL0(eCh, eInvert);
0003bc  e2422939          SUB      r2,r2,#0xe4000
0003c0  e5d22008          LDRB     r2,[r2,#8]
0003c4  e7c42211          BFI      r2,r1,#4,#1
0003c8  e24035ff          SUB      r3,r0,#0x3fc00000
0003cc  e2433939          SUB      r3,r3,#0xe4000
0003d0  e5c32008          STRB     r2,[r3,#8]
;;;203    }
0003d4  e12fff1e          BX       lr
;;;204    
                          ENDP

                  vTIMER_CMPLX_SetFfInvc1 PROC
;;;207    
;;;208    void vTIMER_CMPLX_SetFfInvc1(timer_cmplx_ch_e eCh, timer_cmplx_ffinv_e eInvert)
0003d8  e24025ff          SUB      r2,r0,#0x3fc00000
;;;209    {
;;;210        vSetTBFF_INVC1(eCh, eInvert);
0003dc  e2422939          SUB      r2,r2,#0xe4000
0003e0  e5d22008          LDRB     r2,[r2,#8]
0003e4  e7c32191          BFI      r2,r1,#3,#1
0003e8  e24035ff          SUB      r3,r0,#0x3fc00000
0003ec  e2433939          SUB      r3,r3,#0xe4000
0003f0  e5c32008          STRB     r2,[r3,#8]
;;;211    }
0003f4  e12fff1e          BX       lr
;;;212    
                          ENDP

                  vTIMER_CMPLX_SetFfInvc0 PROC
;;;215    
;;;216    void vTIMER_CMPLX_SetFfInvc0(timer_cmplx_ch_e eCh, timer_cmplx_ffinv_e eInvert)
0003f8  e24025ff          SUB      r2,r0,#0x3fc00000
;;;217    {
;;;218        vSetTBFF_INVC0(eCh, eInvert);
0003fc  e2422939          SUB      r2,r2,#0xe4000
000400  e5d22008          LDRB     r2,[r2,#8]
000404  e7c22111          BFI      r2,r1,#2,#1
000408  e24035ff          SUB      r3,r0,#0x3fc00000
00040c  e2433939          SUB      r3,r3,#0xe4000
000410  e5c32008          STRB     r2,[r3,#8]
;;;219    }
000414  e12fff1e          BX       lr
;;;220    
                          ENDP

                  vTIMER_CMPLX_SetCompareVal0 PROC
;;;223    
;;;224    void vTIMER_CMPLX_SetCompareVal0(timer_cmplx_ch_e eCh, uint16_t u16CompVal)
000418  e24025ff          SUB      r2,r0,#0x3fc00000
;;;225    {
;;;226        vSetTB0REG_CMP0(eCh, u16CompVal);
00041c  e2422939          SUB      r2,r2,#0xe4000
000420  e1d220bc          LDRH     r2,[r2,#0xc]
000424  e7cf2011          BFI      r2,r1,#0,#16
000428  e24035ff          SUB      r3,r0,#0x3fc00000
00042c  e2433939          SUB      r3,r3,#0xe4000
000430  e1c320bc          STRH     r2,[r3,#0xc]
;;;227    }
000434  e12fff1e          BX       lr
;;;228    
                          ENDP

                  u16TIMER_CMPLX_GetCompareVal0 PROC
;;;231    
;;;232    uint16_t u16TIMER_CMPLX_GetCompareVal0(timer_cmplx_ch_e eCh)
000438  e1a01000          MOV      r1,r0
;;;233    {
;;;234        return (uint16_t) biGetTB0REG_CMP0(eCh);
00043c  e24105ff          SUB      r0,r1,#0x3fc00000
000440  e2400939          SUB      r0,r0,#0xe4000
000444  e1d000bc          LDRH     r0,[r0,#0xc]
;;;235    }
000448  e12fff1e          BX       lr
;;;236    
                          ENDP

                  vTIMER_CMPLX_SetCompareVal1 PROC
;;;239    
;;;240    void vTIMER_CMPLX_SetCompareVal1(timer_cmplx_ch_e eCh, uint16_t u16CompVal)
00044c  e24025ff          SUB      r2,r0,#0x3fc00000
;;;241    {
;;;242        vSetTB1REG_CMP1(eCh, u16CompVal);
000450  e2422939          SUB      r2,r2,#0xe4000
000454  e1d221b0          LDRH     r2,[r2,#0x10]
000458  e7cf2011          BFI      r2,r1,#0,#16
00045c  e24035ff          SUB      r3,r0,#0x3fc00000
000460  e2433939          SUB      r3,r3,#0xe4000
000464  e1c321b0          STRH     r2,[r3,#0x10]
;;;243    }
000468  e12fff1e          BX       lr
;;;244    
                          ENDP

                  u16TIMER_CMPLX_GetCompareVal1 PROC
;;;247    
;;;248    uint16_t u16TIMER_CMPLX_GetCompareVal1(timer_cmplx_ch_e eCh)
00046c  e1a01000          MOV      r1,r0
;;;249    {
;;;250        return (uint16_t) biGetTB1REG_CMP1(eCh);
000470  e24105ff          SUB      r0,r1,#0x3fc00000
000474  e2400939          SUB      r0,r0,#0xe4000
000478  e1d001b0          LDRH     r0,[r0,#0x10]
;;;251    }
00047c  e12fff1e          BX       lr
;;;252    
                          ENDP

                  u16TIMER_CMPLX_GetCapturedVal0 PROC
;;;255    
;;;256    uint16_t u16TIMER_CMPLX_GetCapturedVal0(timer_cmplx_ch_e eCh)
000480  e1a01000          MOV      r1,r0
;;;257    {
;;;258        return (uint16_t) biGetTB0CP0_CP0(eCh);
000484  e24105ff          SUB      r0,r1,#0x3fc00000
000488  e2400939          SUB      r0,r0,#0xe4000
00048c  e1d001b4          LDRH     r0,[r0,#0x14]
;;;259    }
000490  e12fff1e          BX       lr
;;;260    
                          ENDP

                  u16TIMER_CMPLX_GetCapturedVal1 PROC
;;;263    
;;;264    uint16_t u16TIMER_CMPLX_GetCapturedVal1(timer_cmplx_ch_e eCh)
000494  e1a01000          MOV      r1,r0
;;;265    {
;;;266        return (uint16_t) biGetTB0CP1_CP1(eCh);
000498  e24105ff          SUB      r0,r1,#0x3fc00000
00049c  e2400939          SUB      r0,r0,#0xe4000
0004a0  e1d001b8          LDRH     r0,[r0,#0x18]
;;;267    }
0004a4  e12fff1e          BX       lr
;;;268    
                          ENDP

                  u16TIMER_CMPLX_GetCounterVal PROC
;;;271    
;;;272    uint16_t u16TIMER_CMPLX_GetCounterVal(timer_cmplx_ch_e eCh)
0004a8  e1a01000          MOV      r1,r0
;;;273    {
;;;274        return (uint16_t) biGetTB0CNT_CNT(eCh);
0004ac  e24105ff          SUB      r0,r1,#0x3fc00000
0004b0  e2400939          SUB      r0,r0,#0xe4000
0004b4  e1d001bc          LDRH     r0,[r0,#0x1c]
;;;275    }
0004b8  e12fff1e          BX       lr
;;;276    
                          ENDP

                  |L1.1212|
                          DCD      au8LLDD_TIMER_CMPLX_C_REVISION
                  |L1.1216|
                          DCD      au8LLDD_TIMER_CMPLX_C_TAG
                  |L1.1220|
                          DCD      au8LLDD_TIMER_CMPLX_H_REVISION
                  |L1.1224|
                          DCD      au8LLDD_TIMER_CMPLX_H_TAG
                  |L1.1228|
                          DCD      au8LLDD_TIMER_CMPLX_IO_H_REVISION
                  |L1.1232|
                          DCD      au8LLDD_TIMER_CMPLX_IO_H_TAG

                          AREA ||.data||, DATA, ALIGN=0

                  au8LLDD_TIMER_CMPLX_C_REVISION
000000  24526576          DCB      0x24,0x52,0x65,0x76
000004  6973696f          DCB      0x69,0x73,0x69,0x6f
000008  6e3a2031          DCB      0x6e,0x3a,0x20,0x31
00000c  2e372024          DCB      0x2e,0x37,0x20,0x24
000010  00                DCB      0x00
                  au8LLDD_TIMER_CMPLX_C_TAG
000011  244e61            DCB      0x24,0x4e,0x61
000014  6d653a20          DCB      0x6d,0x65,0x3a,0x20
000018  4c4c4444          DCB      0x4c,0x4c,0x44,0x44
00001c  5f315f36          DCB      0x5f,0x31,0x5f,0x36
000020  202400            DCB      0x20,0x24,0x00
                  au8LLDD_TIMER_CMPLX_H_REVISION
000023  24                DCB      0x24
000024  52657669          DCB      0x52,0x65,0x76,0x69
000028  73696f6e          DCB      0x73,0x69,0x6f,0x6e
00002c  3a20312e          DCB      0x3a,0x20,0x31,0x2e
000030  38202400          DCB      0x38,0x20,0x24,0x00
                  au8LLDD_TIMER_CMPLX_H_TAG
000034  244e616d          DCB      0x24,0x4e,0x61,0x6d
000038  653a204c          DCB      0x65,0x3a,0x20,0x4c
00003c  4c44445f          DCB      0x4c,0x44,0x44,0x5f
000040  315f3620          DCB      0x31,0x5f,0x36,0x20
000044  2400              DCB      0x24,0x00
                  au8LLDD_TIMER_CMPLX_IO_H_REVISION
000046  2452              DCB      0x24,0x52
000048  65766973          DCB      0x65,0x76,0x69,0x73
00004c  696f6e3a          DCB      0x69,0x6f,0x6e,0x3a
000050  20312e31          DCB      0x20,0x31,0x2e,0x31
000054  30202400          DCB      0x30,0x20,0x24,0x00
                  au8LLDD_TIMER_CMPLX_IO_H_TAG
000058  244e616d          DCB      0x24,0x4e,0x61,0x6d
00005c  653a204c          DCB      0x65,0x3a,0x20,0x4c
000060  4c44445f          DCB      0x4c,0x44,0x44,0x5f
000064  315f3620          DCB      0x31,0x5f,0x36,0x20
000068  2400              DCB      0x24,0x00
