


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       **********************
    2 00000000         ;*   This software is copyright protected. All rights re
                       served
    3 00000000         ;*   Toshiba Electronics Europe GmbH,
    4 00000000         ;*   European LSI Design and Engineering Centre (ELDEC)
    5 00000000         ;*******************************************************
                       **********************
    6 00000000         ;*   DESCRIPTION :
    7 00000000         ;*******************************************************
                       **********************
    8 00000000         ;*   PLATFORM    : TMPR46xXBG-300
    9 00000000         ;*   PROJECT     :
   10 00000000         ;*   MODULE      : 
   11 00000000         ;*   LIBRARIES   :
   12 00000000         ;;******************************************************
                       ***********************
   13 00000000         ;*   VERSION     : $Revision: 1.7 $ 
   14 00000000         ;*   DATE        : $Date: 2015/05/04 09:07:15 $
   15 00000000         ;*   TAG         : $Name: LLDD_1_6 $
   16 00000000         ;*   RELEASE     : Preliminary and Confidential
   17 00000000         ;*******************************************************
                       **********************/
   18 00000000         
   19 00000000         ;*******************************************************
                       **********************
   20 00000000         ; exported function prototypes
   21 00000000         ;*******************************************************
                       **********************
   22 00000000                 EXPORT           write_burst4
   23 00000000                 EXPORT           read_burst4
   24 00000000                 EXPORT           write_burst8
   25 00000000                 EXPORT           read_burst8
   26 00000000                 EXPORT           word_write
   27 00000000                 EXPORT           word_read
   28 00000000                 EXPORT           hword_write
   29 00000000                 EXPORT           hword_read
   30 00000000                 EXPORT           byte_write
   31 00000000                 EXPORT           byte_read
   32 00000000         
   33 00000000                 AREA             rw_support, CODE, READONLY ;REA
                                                            DONLY is default fo
                                                            r CODE
   34 00000000         
   35 00000000         ;*******************************************************
                       **********************
   36 00000000         ; write_burst4(int addr, int data)
   37 00000000         ; writes 4 words to an address with burst
   38 00000000         ;*******************************************************
                       **********************
   39 00000000         ; r0 contains addr
   40 00000000         ; r1-r4 contains data
   41 00000000         
   42 00000000         write_burst4
   43 00000000 E92D4000        STMFD            SP!,{lr}    ; save return addre
                                                            ss to stack
   44 00000004 E8A0001E        STMIA            r0!,{r1-r4}
   45 00000008 E930001E        LDMDB            r0!,{r1-r4}
   46 0000000C E8BD8000        LDMFD            SP!,{pc}    ; return



ARM Macro Assembler    Page 2 


   47 00000010         
   48 00000010         ;*******************************************************
                       **********************
   49 00000010         ; read_burst4(int addr)
   50 00000010         ; reads 4 words from an address with burst
   51 00000010         ;*******************************************************
                       **********************
   52 00000010         ; r0 contains addr
   53 00000010         
   54 00000010         read_burst4
   55 00000010 E92D403E        STMFD            SP!,{r1-r5,lr} ; save return ad
                                                            dress to stack
   56 00000014 E8B0003C        LDMIA            r0!,{r2-r5}
   57 00000018 E8A1003C        STMIA            r1!,{r2-r5}
   58 0000001C E8BD803E        LDMFD            SP!,{r1-r5,pc} ; return
   59 00000020         
   60 00000020         ;*******************************************************
                       **********************
   61 00000020         ; write_burst8(int addr, int data)
   62 00000020         ; writes 8 words to an address with burst
   63 00000020         ;*******************************************************
                       **********************
   64 00000020         ; r0 contains addr
   65 00000020         ; r1-r8 contains data
   66 00000020         
   67 00000020         write_burst8
   68 00000020 E92D4000        STMFD            SP!,{lr}    ; save return addre
                                                            ss to stack
   69 00000024 E8A001FE        STMIA            r0!,{r1-r8}
   70 00000028 E93001FE        LDMDB            r0!,{r1-r8}
   71 0000002C E8BD8000        LDMFD            SP!,{pc}    ; return    
   72 00000030         
   73 00000030         ;*******************************************************
                       **********************
   74 00000030         ; read_burst8(int addr)
   75 00000030         ; reads 8 words from an address with burst
   76 00000030         ;*******************************************************
                       **********************
   77 00000030         ; r0 contains addr
   78 00000030         
   79 00000030         read_burst8
   80 00000030 E92D43FE        STMFD            SP!,{r1-r9,lr} ; save return ad
                                                            dress to stack
   81 00000034 E1A09001        MOV              r9, r1
   82 00000038 E8B001FE        LDMIA            r0!,{r1-r8}
   83 0000003C E8A901FE        STMIA            r9!,{r1-r8}
   84 00000040 E8BD83FE        LDMFD            SP!,{r1-r9,pc} ; return
   85 00000044         
   86 00000044         ;*******************************************************
                       **********************
   87 00000044         ; word_write(int addr, int data)
   88 00000044         ; writes a word to an address
   89 00000044         ;*******************************************************
                       **********************
   90 00000044         ; r0 contains addr
   91 00000044         ; r1 contains data
   92 00000044         
   93 00000044         word_write
   94 00000044 E92D4000        STMFD            SP!,{lr}    ; save return addre



ARM Macro Assembler    Page 3 


                                                            ss to stack
   95 00000048 E5801000        STR              r1,[r0,#0]  ; store data
   96 0000004C E8BD8000        LDMFD            SP!,{pc}    ; return
   97 00000050         
   98 00000050         ;*******************************************************
                       **********************
   99 00000050         ; word_read(int addr)
  100 00000050         ; reads a word from an address
  101 00000050         ;*******************************************************
                       **********************
  102 00000050         ; r0 contains addr
  103 00000050         
  104 00000050         word_read
  105 00000050 E92D4002        STMFD            SP!,{r1,lr} ; save return addre
                                                            ss and r1 to stack 
                                                            
  106 00000054 E5901000        LDR              r1,[r0,#0]  ; load temp with da
                                                            ta
  107 00000058 E1A00001        MOV              r0, r1      ; copy temp to r0 f
                                                            or return value
  108 0000005C E8BD8002        LDMFD            SP!,{r1,pc} ; return
  109 00000060         
  110 00000060         ;*******************************************************
                       **********************
  111 00000060         ; hword_write(int addr, int data)
  112 00000060         ; writes a half word to an address
  113 00000060         ;*******************************************************
                       **********************
  114 00000060         ; r0 contains addr
  115 00000060         ; r1 contains data
  116 00000060         
  117 00000060         hword_write
  118 00000060 E92D4000        STMFD            SP!,{lr}    ; save return addre
                                                            ss to stack
  119 00000064 E1C010B0        STRH             r1,[r0,#0]  ; store data
  120 00000068 E8BD8000        LDMFD            SP!,{pc}    ; return
  121 0000006C         
  122 0000006C         ;*******************************************************
                       **********************
  123 0000006C         ; hword_read(int addr)
  124 0000006C         ; reads a half word from an address
  125 0000006C         ;*******************************************************
                       **********************
  126 0000006C         ; r0 contains addr
  127 0000006C         
  128 0000006C         hword_read
  129 0000006C E92D4002        STMFD            SP!,{r1,lr} ; save return addre
                                                            ss and r1 to stack
  130 00000070 E1D010B0        LDRH             r1,[r0,#0]  ; load temp with da
                                                            ta
  131 00000074 E1A00001        MOV              r0, r1      ; copy temp to r0 f
                                                            or return value
  132 00000078 E8BD8002        LDMFD            SP!,{r1,pc} ; return
  133 0000007C         
  134 0000007C         ;*******************************************************
                       **********************
  135 0000007C         ; byte_write(int addr, int data)
  136 0000007C         ; writes a byte to an address
  137 0000007C         ;*******************************************************



ARM Macro Assembler    Page 4 


                       **********************
  138 0000007C         ; r0 contains addr
  139 0000007C         ; r1 contains data
  140 0000007C         
  141 0000007C         byte_write
  142 0000007C E92D4000        STMFD            SP!,{lr}    ; save return addre
                                                            ss to stack
  143 00000080 E5C01000        STRB             r1,[r0,#0]  ; store data
  144 00000084 E8BD8000        LDMFD            SP!,{pc}    ; return
  145 00000088         
  146 00000088         ;*******************************************************
                       **********************
  147 00000088         ; byte_read(int addr)
  148 00000088         ; reads a byte from an address
  149 00000088         ;*******************************************************
                       **********************
  150 00000088         ; r0 contains addr
  151 00000088         
  152 00000088         byte_read
  153 00000088 E92D4002        STMFD            SP!,{r1,lr} ; save return addre
                                                            ss and r1 to stack 
                                                            
  154 0000008C E5D01000        LDRB             r1,[r0,#0]  ; load temp with da
                                                            ta
  155 00000090 E1A00001        MOV              r0, r1      ; copy temp to r0 f
                                                            or return value    
                                                            
  156 00000094 E8BD8002        LDMFD            SP!,{r1,pc} ; return 
  157 00000098         
  158 00000098                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-R4 --apcs=interw
ork --depend=..\out\qspic_rw_support.d -o..\out\qspic_rw_support.o -I..\..\..\.
.\cortex_r4_keil\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -
-predefine="__UVISION_VERSION SETA 516" --list=..\out\qspic_rw_support.lst ..\.
.\..\..\lldd\src\qspic_rw_support.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

byte_read 00000088

Symbol: byte_read
   Definitions
      At line 152 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 31 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: byte_read used once
byte_write 0000007C

Symbol: byte_write
   Definitions
      At line 141 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 30 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: byte_write used once
hword_read 0000006C

Symbol: hword_read
   Definitions
      At line 128 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 29 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: hword_read used once
hword_write 00000060

Symbol: hword_write
   Definitions
      At line 117 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 28 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: hword_write used once
read_burst4 00000010

Symbol: read_burst4
   Definitions
      At line 54 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 23 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: read_burst4 used once
read_burst8 00000030

Symbol: read_burst8
   Definitions
      At line 79 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 25 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: read_burst8 used once
rw_support 00000000

Symbol: rw_support
   Definitions
      At line 33 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      None
Comment: rw_support unused
word_read 00000050

Symbol: word_read



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 104 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 27 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: word_read used once
word_write 00000044

Symbol: word_write
   Definitions
      At line 93 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 26 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: word_write used once
write_burst4 00000000

Symbol: write_burst4
   Definitions
      At line 42 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 22 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: write_burst4 used once
write_burst8 00000020

Symbol: write_burst8
   Definitions
      At line 67 in file ..\..\..\..\lldd\src\qspic_rw_support.s
   Uses
      At line 24 in file ..\..\..\..\lldd\src\qspic_rw_support.s
Comment: write_burst8 used once
11 symbols
342 symbols in table
